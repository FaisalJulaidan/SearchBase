{"version":3,"sources":["application/Dashboard/Assistants/Assistant/Solutions/Solutions.module.less","application/Dashboard/Assistants/Assistant/Flow/Blocks/Blocks.module.less","application/Dashboard/Assistants/Assistant/UserInput/UserInput.module.less","application/Dashboard/Profile/Profile.module.less","application/Dashboard/Home/Home.module.less","application/Login/Login.module.less","components/Header/Header.module.less","application/Dashboard/Assistants/Assistant/Flow/Flow.module.less","helpers/history.js","helpers/auth.js","helpers/alert.js","store/actions/actionTypes.js","store/utility.js","store/reducers/auth.reducer.js","store/reducers/assistant.reducer.js","store/reducers/flow.reducer.js","store/reducers/assistantSettings.reducer.js","store/reducers/profile.reducer.js","store/reducers/userInput.reducer.js","store/reducers/solutions.reducer.js","store/reducers/index.js","store/actions/auth.actions.js","store/actions/assistant.actions.js","store/actions/flow.actions.js","store/actions/assistantSettings.actions.js","store/actions/profile.actions.js","store/actions/userInput.actions.js","store/actions/solutions.actions.js","store/sagas/auth.saga.js","store/sagas/assistant.saga.js","store/sagas/flow.saga.js","store/sagas/assistantSettings.saga.js","store/sagas/profile.saga.js","store/sagas/userInput.saga.js","store/sagas/solutions.saga.js","store/store.js","helpers/http.js","helpers/hashids.js","hoc/PrivateRoute.js","application/Dashboard/Assistants/Assistant/AssistantSettings/AssistantSettingsModal/AssistantSettingsModal.js","application/Dashboard/Assistants/Assistant/AssistantSettings/AssistantSettings.js","application/Dashboard/Assistants/Assistant/Assistant.js","application/Dashboard/Assistants/NewAssistantModal/NewAssistantModal.js","application/Dashboard/Assistants/Assistants.js","application/Dashboard/Assistants/Assistant/Flow/Groups/NewGroup/NewGroup.js","application/Dashboard/Assistants/Assistant/Flow/Groups/EditGroup/EditGroup.js","application/Dashboard/Assistants/Assistant/Flow/Groups/Groups.js","application/Dashboard/Assistants/Assistant/Flow/Blocks/Block/Block.js","application/Dashboard/Assistants/Assistant/Flow/Blocks/NewBlockModal/Cards/UserInput.js","application/Dashboard/Assistants/Assistant/Flow/Blocks/NewBlockModal/Cards/Question.js","application/Dashboard/Assistants/Assistant/Flow/Blocks/NewBlockModal/Cards/FileUpload.js","application/Dashboard/Assistants/Assistant/Flow/Blocks/NewBlockModal/Cards/Solutions.js","application/Dashboard/Assistants/Assistant/Flow/Blocks/NewBlockModal/NewBlockModal.js","application/Dashboard/Assistants/Assistant/Flow/Blocks/EditBlockModal/Cards/UserInput.js","application/Dashboard/Assistants/Assistant/Flow/Blocks/EditBlockModal/Cards/Question.js","application/Dashboard/Assistants/Assistant/Flow/Blocks/EditBlockModal/Cards/FileUpload.js","application/Dashboard/Assistants/Assistant/Flow/Blocks/EditBlockModal/Cards/Solutions.js","application/Dashboard/Assistants/Assistant/Flow/Blocks/EditBlockModal/EditBlockModal1.js","application/Dashboard/Assistants/Assistant/Flow/Blocks/Blocks.js","components/Header/Header.js","application/Dashboard/Assistants/Assistant/Flow/Flow.js","application/Dashboard/Profile/profileComponents/ProfileDetails/ProfileDetails.js","application/Dashboard/Profile/profileComponents/DataSettings/DataSettings.js","application/Dashboard/Profile/Profile.js","application/Dashboard/Assistants/Assistant/Integration/Integration.js","application/Dashboard/Assistants/Assistant/UserInput/ViewModal/ViewModal.js","application/Dashboard/Assistants/Assistant/UserInput/UserInput.js","application/Dashboard/Assistants/Assistant/Solutions/SolutionsDisplay/SolutionModal/SolutionModal.js","application/Dashboard/Assistants/Assistant/Solutions/SolutionsDisplay/SolutionsDisplay.js","application/Dashboard/Assistants/Assistant/Solutions/SolutionsSettings/InformationToDisplay/InformationToDisplay.js","application/Dashboard/Assistants/Assistant/Solutions/SolutionsSettings/ButtonLink/ButtonLink.js","application/Dashboard/Assistants/Assistant/Solutions/SolutionsSettings/EmailAutomatch/EmailAutomatch.js","application/Dashboard/Assistants/Assistant/Solutions/SolutionsSettings/SolutionsSettings.js","application/Dashboard/Assistants/Assistant/Solutions/Solutions.js","application/Dashboard/Home/Home.js","application/Dashboard/Dashboard.js","application/Login/Login.js","App.js","serviceWorker.js","index.js","application/Dashboard/Assistants/Assistant/Solutions/SolutionsSettings/SolutionsSettings.module.less","application/Dashboard/Assistants/Assistant/Integration/Integration.module.less","application/Dashboard/Assistants/Assistants.module.less","application/Dashboard/Dashboard.module.less","application/Dashboard/Assistants/Assistant/Flow/Groups/Groups.module.less"],"names":["module","exports","Logo","Trigger","Header","Sider","Panel","Panel_With_Header","Panel_Header","Panel_Body","Panel_Body_Only","Panel_Header_Button","groupsList","ClearAllBtn","LoginBackground","LoginPanel","fadeIn","fade-in","history","createBrowserHistory","authHeader","token","localStorage","getItem","refresh","Authorization","getUser","user","JSON","parse","updateUsername","firstname","surname","username","setItem","stringify","checkAuthenticity","alertSuccess","title","message","notification","success","description","duration","placement","alertError","error","loadingMessage","loading","destroyMessage","destroy","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","AUTH_CHECK_TIMEOUT","REFRESH_TOKEN","FETCH_ASSISTANTS_REQUEST","ADD_ASSISTANT_REQUEST","UPDATE_ASSISTANT_SETTINGS_REQUEST","FETCH_FLOW_REQUEST","ADD_GROUP_REQUEST","EDIT_GROUP_REQUEST","DELETE_GROUP_REQUEST","ADD_BLOCK_REQUEST","EDIT_BLOCK_REQUEST","DELETE_BLOCK_REQUEST","UPDATE_BLOCKS_ORDER_REQUEST","GET_PROFILE_REQUEST","SAVE_PROFILE_DETAILS_REQUEST","SAVE_DATA_SETTINGS_REQUEST","FETCH_USERINPUT_REQUEST","CLEAR_ALL_USERINPUT_REQUEST","GET_SOLUTIONS_REQUEST","ADD_SOLUTION_REQUEST","EDIT_SOLUTION_REQUEST","UPDATE_SOLUTION_INFORMATION_TO_DISPLAY_REQUEST","UPDATE_BUTTON_LINK_REQUEST","SEND_SOLUTION_ALERT_REQUEST","UPDATE_AUTOMATIC_SOLUTION_ALERTS_REQUEST","updateObject","oldObject","updatedValues","Object","objectSpread","initialState","isAuthenticated","assistantList","isLoading","errorMsg","blockGroups","profile","userInputs","solutionsData","rootReducer","combineReducers","auth","state","arguments","length","undefined","action","type","actionTypes","isLoggingIn","msg","assistant","isAdding","successMsg","isChanging","flow","isAddingGroup","addSuccessMsg","isEditingGroup","editSuccessMsg","isDeletingGroup","deleteSuccessMsg","isAddingBlock","settings","profileData","userInput","console","log","isClearingAll","solutions","authActions","login","email","password","loginSuccess","loginFailure","logout","refreshToken","checkAuthTimeout","expirationTime","assistantActions","fetchAssistants","fetchAssistantsSuccess","fetchAssistantsFailure","addAssistant","newAssistant","addAssistantSuccess","addAssistantFailure","changeAssistantStatus","assistantID","changeAssistantStatusSuccess","status","changeAssistantStatusFailure","flowActions","fetchFlowRequest","fetchFlowSuccess","args","fetchFlowFailure","addGroupRequest","values","ID","newGroup","addGroupSuccess","addGroupFailure","editGroupRequest","editedGroup","editGroupSuccess","editGroupFailure","deleteGroupRequest","deletedGroup","deleteGroupSuccess","deleteGroupFailure","addBlockRequest","_ref","newBlock","groupID","addBlockSuccess","addBlockFailure","editBlockRequest","_ref2","edittedBlock","editBlockSuccess","editBlockFailure","deleteBlockRequest","_ref3","deletedBlock","deleteBlockSuccess","deleteBlockFailure","updateBlocksOrderRequest","_ref4","newBlocksOrder","updateBlocksOrderSuccess","updateBlocksOrderFailure","assistantSettingsActions","updateAssistantSettingsRequest","updateAssistantSettingsSuccess","updateAssistantSettingsFailure","profileActions","getProfile","getProfileSuccess","getProfileFailure","saveProfileDetails","saveProfileDetailsSuccess","successMessage","saveProfileDetailsFailure","saveDataSettings","dataSettings","saveDataSettingsSuccess","saveDataSettingsFailure","userInputActions","fetchUserInputs","fetchUserInputsSuccess","fetchUserInputsFailure","clearAllUserInputs","clearAllUserInputsSuccess","clearAllUserInputsFailure","solutionsActions","getSolutions","getSolutionsSuccess","data","getSolutionsFailure","addSolution","params","addSolutionSuccess","addSolutionFailure","editSolution","editSolutionSuccess","editSolutionFailure","updateSolutionInformationToDisplay","updateSolutionInformationToDisplaySuccess","updateSolutionInformationToDisplayFailure","updateButtonLink","updateButtonLinkSuccess","updateButtonLinkFailure","sendSolutionAlert","sendSolutionAlertSuccess","sendSolutionAlertFailure","updateAutomaticSolutions","updateAutomaticSolutionsSuccess","updateAutomaticSolutionsFailure","watchCheckAuthTimeout","watchLogin","watchLogout","watchRefreshToken","authSaga","regenerator_default","a","wrap","_context","prev","next","delay","put","stop","_marked","this","_context2","takeEvery","_marked2","res","expiresIn","secondsToExpire","_context3","axios","post","headers","Content-Type","sent","Date","getTime","push","t0","response","_marked3","_context4","takeLatest","_marked4","_context5","clear","_marked5","_context6","_marked6","_res$data$data","_context7","Error","_marked7","_context8","_marked8","_context9","all","_marked9","watchFetchAssistants","watchAddAssistant","assistantSaga","http","get","abrupt","assistant_saga_marked","assistant_saga_marked2","assistant_saga_marked3","assistant_saga_marked4","assistant_saga_marked5","fetchFlow","watchFetchFlow","addGroup","editGroup","deleteGroup","watchAddGroup","watchEditGroup","watchDeleteGroup","addBlock","editBlock","deleteBlock","updateBlocksOrder","watchAddBlock","watchEditBlock","watchDeleteBlock","watchUpdateBlcoksOrder","flowSaga","concat","flow_saga_marked","flow_saga_marked2","flow_saga_marked3","flow_saga_marked4","delete","id","flow_saga_marked5","flow_saga_marked6","flow_saga_marked7","flow_saga_marked8","flow_saga_marked9","currentUpdatedGroup","_context10","map","group","blocks","block","_marked10","_ref5","_context11","_marked11","_ref6","_context12","_marked12","_context13","_marked13","_context14","_marked14","_context15","_marked15","_context16","_marked16","_context17","_marked17","updateAssistantSettings","watchUpdateAssistantSettings","settingsSage","updatedSettings","assistantSettings_saga_marked","assistantSettings_saga_marked2","assistantSettings_saga_marked3","getProfileData","saveProfileData","watchProfileRequests","watchProfileUpdates","watchDataSettingsUpdates","profileSaga","Firstname","Surname","profile_saga_marked","profile_saga_marked2","profile_saga_marked3","profile_saga_marked4","profile_saga_marked5","profile_saga_marked6","profile_saga_marked7","watchFetchUserInputs","watchClearAllUserInputs","userInputSaga","userInput_saga_marked","userInput_saga_marked2","userInput_saga_marked3","userInput_saga_marked4","userInput_saga_marked5","getSolutionsData","sendSolutionAlerts","updateAutomaticSolutionsAlerts","watchSolutionsRequests","watchAddSolutionRequests","watchEditSolutionRequests","watchUpdateSolutionInformationToDisplayRequests","watchUpdateButtonLinkRequests","watchSendSolutionAlertsRequests","watchUpdateAutomaticSolutionAlertsRequests","solutionsSaga","solutions_saga_marked","newSolution","solutions_saga_marked2","editedSolution","solutions_saga_marked3","solutionID","information","solutions_saga_marked4","solutions_saga_marked5","solutions_saga_marked6","solutions_saga_marked7","solutions_saga_marked8","solutions_saga_marked9","solutions_saga_marked10","solutions_saga_marked11","solutions_saga_marked12","solutions_saga_marked13","solutions_saga_marked14","solutions_saga_marked15","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","create","baseURL","interceptors","request","use","config","header","Promise","reject","dispatch","hashids","Hashids","hasher","param","encode","PrivateRoute","Component","component","rest","objectWithoutProperties","react_default","createElement","Route","assign","render","props","Redirect","to","pathname","from","location","FormItem","Form","Item","AssistantSettingsModal","isPopupDisabled","_this","SecondsUntilPopup","togglePopupSwitch","setState","handleSave","form","validateFields","err","secondsUntilPopup","inputValue","formItemLayout","labelCol","span","wrapperCol","getFieldDecorator","modal","visible","width","destroyOnClose","onCancel","handleCancel","footer","es_button","key","onClick","es_form","layout","label","extra","initialValue","Name","rules","required","input","placeholder","Message","TopBarText","es_switch","checked","onChange","style","marginRight","input_number","disabled","min","className","AssistantSettings","hideModal","AssistantSettings_AssistantSettingsModal_AssistantSettingsModal","connect","Meta","Card","covers","Assistant","showModal","onActiveChanged","Fragment","card","margin","float","height","cover","alt","src","Math","floor","random","defaultChecked","Active","actions","icon","Link","dropdown","overlay","es_menu","Divider","menu","trigger","Assistant_AssistantSettings_AssistantSettings","Option","Select","NewAssistantModal","handleAdd","prevProps","onOk","handleOk","NewAssistantModal_FormItem","es_select","value","Assistants","Boolean","successSettings","errorSettings","_this2","styles","AssistantsList","i","Assistants_Assistant_Assistant","index","skeleton","active","Assistants_NewAssistantModal_NewAssistantModal","NewGroup","NewGroup_FormItem","EditGroup","handleUpdate","name","handleDelete","EditGroup_FormItem","Groups","newGroupModal","editGroupModal","selectedGroupToEdit","handleAddGroup","handleAddGroupCancel","showNewGroupModal","handleEditGroup","handleEditGroupCancel","showEditGroupModal","item","handleDeleteGroup","Groups_NewGroup_NewGroup","spin","es_list","itemLayout","dataSource","renderItem","selectGroup","avatar","es_avatar","backgroundColor","Groups_EditGroup_EditGroup","Collapse","Block","collapse","bordered","divider","content","text","size","row","col","blockToGoID","validation","afterMessage","showTop","storeInDB","es_checkbox","isSkippable","answers","answer","Block_Meta","keywords","keyword","es_tag","UserInput","showGoToBlock","showGoToGroup","onSubmit","handleNewBlock","options","currentGroup","labels","blockToGoIDGroup","onSelectAction","_this$props$options","blockTypes","allGroups","blockOptions","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","blockType","return","UserInput_FormItem","validations","UserInput_Option","onSelect","valuePropName","alwaysStoreInDB","Question","modalVisible","tags","inputVisible","addAnswer","hideAddAnswer","showAddAnswer","removeAnswer","removeTag","removedTag","filter","tag","showInput","focus","handleInputChange","e","target","saveInputRef","handleInputConfirm","indexOf","toConsumableArray","_this$state","Question_FormItem","shape","isLongTag","tagElem","closable","afterClose","slice","tooltip","ref","onBlur","onPressEnter","background","borderStyle","Question_Option","CheckboxGroup","Checkbox","Group","FileUpload","fileTypes","checkedValues","typesAllowed","FileUpload_FormItem","FileUpload_Option","Solutions","Number","Solutions_FormItem","Solutions_Option","TabPane","Tabs","NewBlockModal","handleAddBlock","closeModal","onChangeTab","currentTab","then","nextProps","tabs","tab","Cards_UserInput","Cards_Question","Cards_FileUpload","Cards_Solutions","groupName","handleEditBlock","order","_this3","_this$props$options2","allBlocks","Cards_UserInput_FormItem","Cards_UserInput_Option","Cards_Question_FormItem","Cards_Question_Option","Cards_FileUpload_FormItem","FileUpload_CheckboxGroup","Cards_FileUpload_Option","Cards_Solutions_FormItem","Cards_Solutions_Option","EditBlockModal","EditBlockModal_Cards_UserInput","EditBlockModal_Cards_Question","EditBlockModal_Cards_FileUpload","EditBlockModal_Cards_Solutions","confirm","Modal","Blocks","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","addBlockVisible","editBlockVisible","deleteBlockVisible","showAddBlockModal","closeAddBlockModal","closeEditBlockModal","handleDeleteBlock","reorderBlocks","onDragEnd","bind","assertThisInitialized","result","destination","list","startIndex","endIndex","Array","_result$splice","splice","removed","slicedToArray","reorder","source","overflowY","react_beautiful_dnd_esm","droppableId","provided","innerRef","draggableId","draggableProps","dragHandleProps","draggableStyle","Blocks_Block_Block","Blocks_NewBlockModal_NewBlockModal","EditBlockModal1","marginBottom","display","context","router","goBack","assistantName","contextTypes","PropTypes","object","Flow","components_Header_Header","Flow_Groups_Groups","Flow_Blocks_Blocks","ProfileDetails","companyName","handleSubmit","preventDefault","isEmpty","Email","company","ProfileDetails_FormItem","readOnly","textAlign","htmlType","React","DataSettings","newsletters","statNotifications","trackData","techSupport","accountSpecialist","initialRender","handleChange","defineProperty","DataSettings_FormItem","newProps","prevState","userSettings","UserInputNotifications","TrackingData","TechnicalSupport","AccountSpecialist","Profile","defaultActiveKey","Profile_TabPane","profileComponents_ProfileDetails_ProfileDetails","profileComponents_DataSettings_DataSettings","TextArea","Input","Integration","dataName","dataID","dataCircle","async","defer","color","hex","removeChatbot","oldBot","document","getElementById","remove","oldBotScript","copyScriptPaste","select","execCommand","testIntegration","script","setAttribute","body","appendChild","getWidgetSrc","colon","port","_window$location","protocol","hostname","generateDirectLink","_window$location2","open","getChatbotScript","data-name","data-id","data-circle","match","position","justify","lib","lineHeight","padding","marginLeft","ReactDOMServer","renderToString","fontWeight","ViewModal","fileNames","counter","columns","record","questionText","hreftype","data-index","downloadFile","fileName","getAttribute","url","method","responseType","saveAs","Blob","catch","nextContext","FilePath","split","closeViewModal","table","Data","collectedInformation","pagination","viewModal","selectedRecord","dataIndex","moment","DateTime","format","parseInt","asMinutes","toFixed","showConfirmForClearing","okType","UserInput_ViewModal_ViewModal","filesPath","OptGroup","SolutionModal","connectionType","uploadFile","edit","formData","FormData","hasOwnProperty","append","changeTypeHandler","onFileChange","file","files","solutionExists","solutionToEdit","Solution","Type","SolutionModal_FormItem","databaseFileTypes","fileType","SolutionModal_Option","activeKey","tabBarStyle","SolutionModal_TabPane","hidden","click","SolutionsDisplay","editMode","selectedSolutionToEdit","handleSolution","handleSolutionCancel","showSolutionModal","selectSolution","SolutionsDisplay_SolutionModal_SolutionModal","databaseCRMTypes","ITDForm","chosenDisplays","addNewDisplaySelect","updateInformationToDisplay","Button","rc_queue_anim_es","InformationToDisplay_FormItem","String","currentSolution","DisplayTitles","InformationToDisplay_Option","marginTop","titleValues","ButtonLink","webLink","IDHeader","ButtonLink_FormItem","ButtonLink_Option","WebLink","IDReference","EmailAutomatch","checkedChildren","unCheckedChildren","automaticSolutionAlerts","submitAutomaticAlerts","SolutionsSettings","Animate","transitionName","transitionAppear","SolutionsSettings_TabPane","InformationToDisplay","SolutionsSettings_ButtonLink_ButtonLink","SolutionsSettings_EmailAutomatch_EmailAutomatch","updateAutomaticAlerts","deleteSolution","deletedSolution","switchState","setTo","solution","Solutions_SolutionsDisplay_SolutionsDisplay","Solutions_SolutionsSettings_SolutionsSettings","Home","SubMenu","Menu","Layout","Content","Footer","Dashboard","collapsed","toggle","handleMenuClick","getInitials","initials","shift","pop","toUpperCase","userInfo","verticalAlign","userInfoMenu","overlayStyle","collapsible","theme","twoToneColor","fontSize","defaultSelectedKeys","mode","Dashboard_Header","UserInfo","Switch","path","exact","Login","isLoggin","handleLogout","join","spinning","Login_FormItem","prefix","href","loginForm","App","listen","PrivateRoute_PrivateRoute","withRouter","alert","app","es","Router","src_App_0","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c6230593.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Solutions_Logo__vxUai\",\"Trigger\":\"Solutions_Trigger__2LSyi\",\"Header\":\"Solutions_Header__cCswa\",\"Sider\":\"Solutions_Sider__cATdF\",\"Panel\":\"Solutions_Panel__3Em0T\",\"Panel_With_Header\":\"Solutions_Panel_With_Header__1ld8z\",\"Panel_Header\":\"Solutions_Panel_Header__3ncZT\",\"Panel_Body\":\"Solutions_Panel_Body__19X4S\",\"Panel_Body_Only\":\"Solutions_Panel_Body_Only__1ScF6\",\"Panel_Header_Button\":\"Solutions_Panel_Header_Button__11O6l\",\"groupsList\":\"Solutions_groupsList__12ORy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Blocks_Logo__3EenA\",\"Trigger\":\"Blocks_Trigger__3lu5V\",\"Header\":\"Blocks_Header__26n00\",\"Sider\":\"Blocks_Sider__1vIWa\",\"Panel\":\"Blocks_Panel__Bbjus\",\"Panel_With_Header\":\"Blocks_Panel_With_Header__2Oz2T\",\"Panel_Header\":\"Blocks_Panel_Header__17iCM\",\"Panel_Body\":\"Blocks_Panel_Body__2yUxP\",\"Panel_Body_Only\":\"Blocks_Panel_Body_Only__1Gj-A\",\"Panel_Header_Button\":\"Blocks_Panel_Header_Button__10_dQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"UserInput_Logo__20ebb\",\"Trigger\":\"UserInput_Trigger__G2L1O\",\"Header\":\"UserInput_Header__klDCI\",\"Sider\":\"UserInput_Sider__MMQGv\",\"Panel\":\"UserInput_Panel__2pYne\",\"Panel_With_Header\":\"UserInput_Panel_With_Header__1ZK0O\",\"Panel_Header\":\"UserInput_Panel_Header__1-qpz\",\"Panel_Body\":\"UserInput_Panel_Body__13ePp\",\"Panel_Body_Only\":\"UserInput_Panel_Body_Only___04Ph\",\"Panel_Header_Button\":\"UserInput_Panel_Header_Button__2mK7o\",\"ClearAllBtn\":\"UserInput_ClearAllBtn__39TDz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Profile_Logo__38p9S\",\"Trigger\":\"Profile_Trigger__K7pqv\",\"Header\":\"Profile_Header__nz7Sz\",\"Sider\":\"Profile_Sider__3E2SK\",\"Panel\":\"Profile_Panel__1jn2F\",\"Panel_With_Header\":\"Profile_Panel_With_Header__2nzlV\",\"Panel_Header\":\"Profile_Panel_Header__2wJcF\",\"Panel_Body\":\"Profile_Panel_Body__1xwLF\",\"Panel_Body_Only\":\"Profile_Panel_Body_Only__15Zq5\",\"Panel_Header_Button\":\"Profile_Panel_Header_Button__2WhxI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Home_Logo__3QAfe\",\"Trigger\":\"Home_Trigger__3dFyO\",\"Header\":\"Home_Header__2Pzqj\",\"Sider\":\"Home_Sider__3o5OO\",\"Panel\":\"Home_Panel__2IH4H\",\"Panel_With_Header\":\"Home_Panel_With_Header__2tEsh\",\"Panel_Header\":\"Home_Panel_Header__1uniL\",\"Panel_Body\":\"Home_Panel_Body__3d2sd\",\"Panel_Body_Only\":\"Home_Panel_Body_Only__23Vve\",\"Panel_Header_Button\":\"Home_Panel_Header_Button__mmeqI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoginBackground\":\"Login_LoginBackground__1vl63\",\"LoginPanel\":\"Login_LoginPanel__k_BiB\",\"fadeIn\":\"Login_fadeIn__VleXS\",\"fade-in\":\"Login_fade-in__23ax_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Header_Logo__pPWqk\",\"Trigger\":\"Header_Trigger__eWuBO\",\"Header\":\"Header_Header__SmyVP\",\"Sider\":\"Header_Sider__2FnLR\",\"Panel\":\"Header_Panel__C4UsN\",\"Panel_With_Header\":\"Header_Panel_With_Header__5mkk7\",\"Panel_Header\":\"Header_Panel_Header__1uYtq\",\"Panel_Body\":\"Header_Panel_Body__1O0FM\",\"Panel_Body_Only\":\"Header_Panel_Body_Only__1obK3\",\"Panel_Header_Button\":\"Header_Panel_Header_Button__2Ri6l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Flow_Logo__hDNk3\",\"Trigger\":\"Flow_Trigger__2boX1\",\"Header\":\"Flow_Header__2WIFi\",\"Sider\":\"Flow_Sider__34Dhn\",\"Panel\":\"Flow_Panel__3bDX2\",\"Panel_With_Header\":\"Flow_Panel_With_Header__2UfLu\",\"Panel_Header\":\"Flow_Panel_Header__1JCa8\",\"Panel_Body\":\"Flow_Panel_Body__UqCCW\",\"Panel_Body_Only\":\"Flow_Panel_Body_Only__3Ge20\",\"Panel_Header_Button\":\"Flow_Panel_Header_Button__1p-dn\"};","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();","\nexport const authHeader = () => {\n    // return authorization header with jwt token\n    let token = localStorage.getItem('token');\n    let refresh = localStorage.getItem('refresh');\n    if (!token || !refresh) {return null}\n    return {'Authorization': 'Bearer ' + token};\n};\n\n\nexport const getUser = () => {\n    // return user from local storage\n    let user = JSON.parse(localStorage.getItem('user'));\n    if(!user){return null;}\n    return user;\n};\n\n// Update username in localStorage\nexport const updateUsername = (firstname, surname) => {\n    // get user from localStorage\n    let user = JSON.parse(localStorage.getItem('user'));\n    if(!user){return null;}\n    // update username and reset localStorage\n    user.username = firstname + ' ' + surname\n    localStorage.setItem(\"user\", JSON.stringify(user));\n};\n\n\nexport const checkAuthenticity = () => {\n    return !(!getUser() || !authHeader());\n\n};\n\n","import {message, notification} from 'antd';\n\nconst duration = 2.5;\nconst placement = \"topRight\";\n\nexport const alertSuccess = (title, message) => {\n    notification.success({\n        message: title,\n        description: message,\n        duration: duration,\n        placement: placement,\n    });\n};\n\n\nexport const alertError = (title, message) => {\n    notification.error({\n        message: title,\n        description: message\n    });\n};\n\nexport const loadingMessage = title => message.loading(title);\n\nexport const destroyMessage = () => {\n    message.destroy();\n    notification.destroy();\n};\n\nexport const alertInfo = (title, message) => {\n    notification.info({\n        message: title,\n        description: message,\n        duration: duration,\n        placement: placement,\n    });\n};\n\n\nexport const alertWarn = (title, message) => {\n    notification.warn({\n        message: title,\n        description: message,\n        duration: duration,\n        placement: placement,\n    });\n};","export const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const LOGOUT = 'LOGOUT';\nexport const AUTH_CHECK_TIMEOUT = 'AUTH_CHECK_TIMEOUT';\nexport const REFRESH_TOKEN = 'REFRESH_TOKEN';\n\n\nexport const FETCH_ASSISTANTS_REQUEST = 'FETCH_ASSISTANTS_REQUEST';\nexport const FETCH_ASSISTANTS_SUCCESS = 'FETCH_ASSISTANTS_SUCCESS';\nexport const FETCH_ASSISTANTS_FAILURE = 'FETCH_ASSISTANTS_FAILURE';\n\n    export const CHANGE_ASSISTANT_STATUS_REQUEST = 'CHANGE_ASSISTANT_STATUS_REQUEST';\n    export const CHANGE_ASSISTANT_STATUS_SUCCESS = 'CHANGE_ASSISTANT_STATUS_SUCCESS';\n    export const CHANGE_ASSISTANT_STATUS_FAILURE = 'CHANGE_ASSISTANT_STATUS_FAILURE';\n\n\n    export const ADD_ASSISTANT_REQUEST = 'ADD_ASSISTANTS_REQUEST';\n    export const ADD_ASSISTANT_SUCCESS = 'ADD_ASSISTANT_SUCCESS';\n    export const ADD_ASSISTANT_FAILURE = 'ADD_ASSISTANT_FAILURE';\n\n    export const UPDATE_ASSISTANT_SETTINGS_REQUEST = 'UPDATE_ASSISTANT_SETTINGS_REQUEST';\n    export const UPDATE_ASSISTANT_SETTINGS_SUCCESS = 'UPDATE_ASSISTANT_SETTINGS_SUCCESS';\n    export const UPDATE_ASSISTANT_SETTINGS_FAILURE = 'UPDATE_ASSISTANT_SETTINGS_FAILURE';\n\n\nexport const FETCH_FLOW_REQUEST = 'FETCH_FLOW_REQUEST';\nexport const FETCH_FLOW_SUCCESS = 'FETCH_FLOW_SUCCESS';\nexport const FETCH_FLOW_FAILURE = 'FETCH_FLOW_FAILURE';\n    // Groups\n    export const ADD_GROUP_REQUEST = 'ADD_GROUP_REQUEST';\n    export const ADD_GROUP_SUCCESS = 'ADD_GROUP_SUCCESS';\n    export const ADD_GROUP_FAILURE = 'ADD_GROUP_FAILURE';\n\n    export const EDIT_GROUP_REQUEST = 'EDIT_GROUP_REQUEST';\n    export const EDIT_GROUP_SUCCESS = 'EDIT_GROUP_SUCCESS';\n    export const EDIT_GROUP_FAILURE = 'EDIT_GROUP_FAILURE';\n\n    export const DELETE_GROUP_REQUEST = 'DELETE_GROUP_REQUEST';\n    export const DELETE_GROUP_SUCCESS = 'DELETE_GROUP_SUCCESS';\n    export const DELETE_GROUP_FAILURE = 'DELETE_GROUP_FAILURE';\n\n    // Block\n    export const ADD_BLOCK_REQUEST = 'ADD_BLOCK_REQUEST';\n    export const ADD_BLOCK_SUCCESS = 'ADD_BLOCK_SUCCESS';\n    export const ADD_BLOCK_FAILURE = 'ADD_BLOCK_FAILURE';\n\n    export const EDIT_BLOCK_REQUEST = 'EDIT_BLOCK_REQUEST';\n    export const EDIT_BLOCK_SUCCESS = 'EDIT_BLOCK_SUCCESS';\n    export const EDIT_BLOCK_FAILURE = 'EDIT_BLOCK_FAILURE';\n\n    export const DELETE_BLOCK_REQUEST = 'DELETE_BLOCK_REQUEST';\n    export const DELETE_BLOCK_SUCCESS = 'DELETE_BLOCK_SUCCESS';\n    export const DELETE_BLOCK_FAILURE = 'DELETE_BLOCK_FAILURE';\n\n    export const UPDATE_BLOCKS_ORDER_REQUEST = 'UPDATE_BLOCKS_ORDER_REQUEST';\n    export const UPDATE_BLOCKS_ORDER_SUCCESS = 'UPDATE_BLOCKS_ORDER_SUCCESS';\n    export const UPDATE_BLOCKS_ORDER_FAILURE = 'UPDATE_BLOCKS_ORDER_FAILURE';\n\n\n\n// Profile\nexport const GET_PROFILE_REQUEST = 'GET_PROFILE_REQUEST';\nexport const GET_PROFILE_SUCCESS = 'GET_PROFILE_SUCCESS';\nexport const GET_PROFILE_FAILURE = 'GET_PROFILE_FAILURE';\n\n    export const SAVE_PROFILE_DETAILS_REQUEST = 'SAVE_PROFILE_DETAILS_REQUEST';\n    export const SAVE_PROFILE_DETAILS_SUCCESS = 'SAVE_PROFILE_DETAILS_SUCCESS';\n    export const SAVE_PROFILE_DETAILS_FAILURE = 'SAVE_PROFILE_DETAILS_FAILURE';\n\n    export const SAVE_DATA_SETTINGS_REQUEST = 'SAVE_DATA_SETTINGS_REQUEST';\n    export const SAVE_DATA_SETTINGS_SUCCESS = 'SAVE_DATA_SETTINGS_SUCCESS';\n    export const SAVE_DATA_SETTINGS_FAILURE = 'SAVE_DATA_SETTINGS_FAILURE';\n\n// User Input\nexport const FETCH_USERINPUT_REQUEST = 'FETCH_USERINPUT_REQUEST';\nexport const FETCH_USERINPUT_SUCCESS = 'FETCH_USERINPUT_SUCCESS';\nexport const FETCH_USERINPUT_FAILURE = 'FETCH_USERINPUT_FAILURE';\n\n    export const CLEAR_ALL_USERINPUT_REQUEST = 'CLEAR_ALL_USERINPUT_REQUEST';\n    export const CLEAR_ALL_USERINPUT_SUCCESS = 'CLEAR_ALL_USERINPUT_SUCCESS';\n    export const CLEAR_ALL_USERINPUT_FAILURE = 'CLEAR_ALL_USERINPUT_FAILURE';\n\n// Solutions\nexport const GET_SOLUTIONS_REQUEST = 'GET_SOLUTIONS_REQUEST';\nexport const GET_SOLUTIONS_SUCCESS = 'GET_SOLUTIONS_SUCCESS';\nexport const GET_SOLUTIONS_FAILURE = 'GET_SOLUTIONS_FAILURE';\n\n    export const ADD_SOLUTION_REQUEST = 'ADD_SOLUTION_REQUEST';\n    export const ADD_SOLUTION_SUCCESS = 'ADD_SOLUTION_SUCCESS';\n    export const ADD_SOLUTION_FAILURE = 'ADD_SOLUTION_FAILURE';\n\n    export const EDIT_SOLUTION_REQUEST = 'EDIT_SOLUTION_REQUEST';\n    export const EDIT_SOLUTION_SUCCESS = 'EDIT_SOLUTION_SUCCESS';\n    export const EDIT_SOLUTION_FAILURE = 'EDIT_SOLUTION_FAILURE';\n\n    export const UPDATE_SOLUTION_INFORMATION_TO_DISPLAY_REQUEST = 'UPDATE_SOLUTION_INFORMATION_TO_DISPLAY_REQUEST';\n    export const UPDATE_SOLUTION_INFORMATION_TO_DISPLAY_SUCCESS = 'UPDATE_SOLUTION_INFORMATION_TO_DISPLAY_SUCCESS';\n    export const UPDATE_SOLUTION_INFORMATION_TO_DISPLAY_FAILURE = 'UPDATE_SOLUTION_INFORMATION_TO_DISPLAY_FAILURE';\n\n    export const UPDATE_BUTTON_LINK_REQUEST = 'UPDATE_BUTTON_LINK_REQUEST';\n    export const UPDATE_BUTTON_LINK_SUCCESS = 'UPDATE_BUTTON_LINK_SUCCESS';\n    export const UPDATE_BUTTON_LINK_FAILURE = 'UPDATE_BUTTON_LINK_FAILURE';\n\n    export const SEND_SOLUTION_ALERT_REQUEST = 'SEND_SOLUTION_ALERT_REQUEST';\n    export const SEND_SOLUTION_ALERT_SUCCESS = 'SEND_SOLUTION_ALERT_SUCCESS';\n    export const SEND_SOLUTION_ALERT_FAILURE = 'SEND_SOLUTION_ALERT_FAILURE';\n\n    export const UPDATE_AUTOMATIC_SOLUTION_ALERTS_REQUEST = 'UPDATE_AUTOMATIC_SOLUTION_ALERTS_REQUEST';\n    export const UPDATE_AUTOMATIC_SOLUTION_ALERTS_SUCCESS = 'UPDATE_AUTOMATIC_SOLUTION_ALERTS_SUCCESS';\n    export const UPDATE_AUTOMATIC_SOLUTION_ALERTS_FAILURE = 'UPDATE_AUTOMATIC_SOLUTION_ALERTS_FAILURE';\n","export const updateObject = (oldObject, updatedValues) => {\n    return {\n        ...oldObject,\n        ...updatedValues\n    }\n};\n","import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../utility';\n\nlet user = JSON.parse(localStorage.getItem('user'));\nconst initialState = user ? {isAuthenticated: true, user} : {isAuthenticated: false, user: null};\n\nexport const auth = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.LOGIN_REQUEST:\n            return updateObject(state, {\n                errorMsg: null,\n                isLoggingIn: true,\n            });\n        case actionTypes.LOGIN_SUCCESS:\n            return updateObject(state, {\n                isLoggingIn: false,\n                isAuthenticated: true,\n                user: action.user\n            });\n        case actionTypes.LOGIN_FAILURE:\n            return updateObject(state, {\n                isLoggingIn: false,\n                isAuthenticated: false,\n                user: null,\n                errorMsg: action.error.msg\n            });\n        case actionTypes.LOGOUT:\n            return updateObject(state, {\n                isLoggingIn: false,\n                isAuthenticated: false,\n                user: null,\n                errorMsg: null\n            });\n        default:\n            return state\n    }\n};","import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../utility';\n\nconst initialState = {assistantList: [], isLoading: false, errorMsg: null};\n\nexport const assistant = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.FETCH_ASSISTANTS_REQUEST:\n            return updateObject(state, {\n                assistantList: [],\n                errorMsg: null,\n                isLoading: true\n            });\n        case actionTypes.FETCH_ASSISTANTS_SUCCESS:\n            return updateObject(state, {\n                assistantList: action.assistantList,\n                isLoading: false\n            });\n        case actionTypes.FETCH_ASSISTANTS_FAILURE:\n            return updateObject(state, {\n                assistantList: [],\n                isLoading: false,\n                errorMsg: action.error.msg\n            });\n\n\n        case actionTypes.ADD_ASSISTANT_REQUEST:\n            return updateObject(state, {\n                errorMsg: null,\n                isAdding: true\n            });\n        case actionTypes.ADD_ASSISTANT_SUCCESS:\n            return updateObject(state, {\n                successMsg: action.successMsg,\n                isAdding: false\n            });\n        case actionTypes.ADD_ASSISTANT_FAILURE:\n            return updateObject(state, {\n                isAdding: false,\n                errorMsg: action.error.msg\n            });\n\n        case actionTypes.CHANGE_ASSISTANT_STATUS_REQUEST:\n            return updateObject(state, {\n                errorMsg: null,\n                isChanging: true\n            });\n        case actionTypes.CHANGE_ASSISTANT_STATUS_SUCCESS:\n\n            return updateObject(state, {\n                successMsg: action.successMsg,\n                isChanging: false\n            });\n        case actionTypes.CHANGE_ASSISTANT_STATUS_FAILURE:\n            return updateObject(state, {\n                isChanging: false,\n                errorMsg: action.error.msg\n            });\n\n        default:\n            return state\n    }\n};","import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../utility';\n\nconst initialState = {isLoading: false, errorMsg: null, blockGroups: []};\n\nexport const flow = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.FETCH_FLOW_REQUEST:\n            return updateObject(state, {\n                isLoading: true\n            });\n        case actionTypes.FETCH_FLOW_SUCCESS:\n            return updateObject(state, {\n                isLoading: false,\n                blockGroups: action.blockGroups\n            });\n        case actionTypes.FETCH_FLOW_FAILURE:\n            return updateObject(state, {\n                isLoading: false,\n                errorMsg: action.error.msg\n            });\n\n        // Groups\n        case actionTypes.ADD_GROUP_REQUEST:\n            return updateObject(state, {\n                isAddingGroup: true\n            });\n        case actionTypes.ADD_GROUP_SUCCESS:\n            return updateObject(state, {\n                isAddingGroup: false,\n                addSuccessMsg: action.msg\n            });\n        case actionTypes.ADD_GROUP_FAILURE:\n            return updateObject(state, {\n                isAddingGroup: false,\n                errorMsg: action.error.msg\n            });\n\n\n        case actionTypes.EDIT_GROUP_REQUEST:\n            return updateObject(state, {\n                isEditingGroup: true\n            });\n        case actionTypes.EDIT_GROUP_SUCCESS:\n            return updateObject(state, {\n                isEditingGroup: false,\n                editSuccessMsg: action.msg\n            });\n        case actionTypes.EDIT_GROUP_FAILURE:\n            return updateObject(state, {\n                isEditingGroup: false,\n                errorMsg: action.error.msg\n            });\n\n\n        case actionTypes.DELETE_GROUP_REQUEST:\n            return updateObject(state, {\n                isDeletingGroup: true\n            });\n        case actionTypes.DELETE_GROUP_SUCCESS:\n            return updateObject(state, {\n                isDeletingGroup: false,\n                deleteSuccessMsg: action.msg\n            });\n        case actionTypes.DELETE_GROUP_FAILURE:\n            return updateObject(state, {\n                isDeletingGroup: false,\n                errorMsg: action.error.msg\n            });\n\n\n        // Blocks\n        case actionTypes.ADD_BLOCK_REQUEST:\n            return updateObject(state, {\n                isAddingBlock: true\n            });\n        case actionTypes.ADD_BLOCK_SUCCESS:\n            return updateObject(state, {\n                isAddingBlock: false,\n                successMsg: action.msg\n            });\n        case actionTypes.ADD_BLOCK_FAILURE:\n            return updateObject(state, {\n                isAddingBlock: false,\n                errorMsg: action.error.msg\n            });\n        default:\n            return state\n    }\n};","import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../utility';\n\nconst initialState = {isLoading: false, errorMsg: null};\n\nexport const settings = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.UPDATE_ASSISTANT_SETTINGS_REQUEST:\n            return updateObject(state, {\n                successMsg: null,\n                errorMsg: null,\n                isLoading: true\n            });\n        case actionTypes.UPDATE_ASSISTANT_SETTINGS_SUCCESS:\n            return updateObject(state, {\n                successMsg: action.successMsg,\n                isLoading: false\n            });\n        case actionTypes.UPDATE_ASSISTANT_SETTINGS_FAILURE:\n            return updateObject(state, {\n                isLoading: false,\n                errorMsg: action.error.msg\n            });\n        default:\n            return state\n    }\n};","import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../utility';\n\nconst initialState = {profile: {}, isLoading: false, errorMsg: null};\n\nexport const profile = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.GET_PROFILE_REQUEST:\n            return updateObject(state, {\n                profile: {},\n                errorMsg: null,\n                isLoading: true\n            });\n        case actionTypes.GET_PROFILE_SUCCESS:\n            return updateObject(state, {\n                profile: action.profileData,\n                isLoading: false\n            });\n        case actionTypes.GET_PROFILE_FAILURE:\n            return updateObject(state, {\n                profile: {},\n                isLoading: false,\n                errorMsg: action.error.msg\n            });\n        case actionTypes.SAVE_PROFILE_DETAILS_REQUEST:\n            return updateObject(state, {\n                successMsg: null,\n                errorMsg: null,\n                isLoading: true\n            });\n        case actionTypes.SAVE_PROFILE_DETAILS_SUCCESS:\n            return updateObject(state, {\n                successMsg: action.successMsg,\n                isLoading: false\n            });\n        case actionTypes.SAVE_PROFILE_DETAILS_FAILURE:\n            return updateObject(state, {\n                isLoading: false,\n                errorMsg: action.error.msg\n            });\n        case actionTypes.SAVE_DATA_SETTINGS_REQUEST:\n            return updateObject(state, {\n                successMsg: null,\n                errorMsg: null,\n                isLoading: true\n            });\n        case actionTypes.SAVE_DATA_SETTINGS_SUCCESS:\n            return updateObject(state, {\n                successMsg: action.successMsg,\n                isLoading: false\n            });\n        case actionTypes.SAVE_DATA_SETTINGS_FAILURE:\n            return updateObject(state, {\n                isLoading: false,\n                errorMsg: action.error.msg\n            });\n        default:\n            return state\n    }\n};","import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../utility';\n\nconst initialState = {userInputs: [], isLoading: false, errorMsg: null};\n\nexport const userInput = (state = initialState, action) => {\n    switch (action.type) {\n        // Fetching user inputs\n        case actionTypes.FETCH_USERINPUT_REQUEST:\n            return updateObject(state, {\n                errorMsg: null,\n                isLoading: true\n            });\n        case actionTypes.FETCH_USERINPUT_SUCCESS:\n            console.log(action.userInputs);\n            return updateObject(state, {\n                userInputs: action.userInputs,\n                isLoading: false\n            });\n        case actionTypes.FETCH_USERINPUT_FAILURE:\n            return updateObject(state, {\n                userInputs: [],\n                isLoading: false,\n                errorMsg: action.error.msg\n            });\n\n        //Clearing all user inputs\n        case actionTypes.CLEAR_ALL_USERINPUT_REQUEST:\n            return updateObject(state, {\n                errorMsg: null,\n                isClearingAll: true\n            });\n        case actionTypes.CLEAR_ALL_USERINPUT_SUCCESS:\n            return updateObject(state, {\n                isClearingAll: false,\n                userInputs: [],\n                errorMsg: null,\n            });\n        case actionTypes.CLEAR_ALL_USERINPUT_FAILURE:\n            return updateObject(state, {\n                isClearingAll: false,\n                errorMsg: action.error.msg\n            });\n        default:\n            return state\n    }\n};","import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../utility';\n\nconst initialState = {solutionsData: {}, isLoading: false, errorMsg: null};\n\nexport const solutions = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.GET_SOLUTIONS_REQUEST:\n            return updateObject(state, {\n                errorMsg: null,\n                isLoading: true\n            });\n        case actionTypes.GET_SOLUTIONS_SUCCESS:\n            return updateObject(state, {\n                solutionsData: action.solutionsData,\n                isLoading: false\n            });\n        case actionTypes.GET_SOLUTIONS_FAILURE:\n            return updateObject(state, {\n                isLoading: false,\n                errorMsg: action.error.msg\n            });\n        case actionTypes.ADD_SOLUTION_REQUEST:\n            return updateObject(state, {\n                errorMsg: null,\n                isLoading: true\n            });\n        case actionTypes.ADD_SOLUTION_SUCCESS:\n            return updateObject(state, {\n                isLoading: false,\n                message: action.message\n            });\n        case actionTypes.ADD_SOLUTION_FAILURE:\n            return updateObject(state, {\n                isLoading: false,\n                errorMsg: action.error.msg\n            });\n        case actionTypes.EDIT_SOLUTION_REQUEST:\n            return updateObject(state, {\n                errorMsg: null,\n                isLoading: true\n            });\n        case actionTypes.EDIT_SOLUTION_SUCCESS:\n            return updateObject(state, {\n                isLoading: false,\n                message: action.message\n            });\n        case actionTypes.EDIT_SOLUTION_FAILURE:\n            return updateObject(state, {\n                isLoading: false,\n                errorMsg: action.error.msg\n            });\n        case actionTypes.UPDATE_BUTTON_LINK_REQUEST:\n            return updateObject(state, {\n                errorMsg: null,\n                isLoading: true\n            });\n        case actionTypes.UPDATE_BUTTON_LINK_SUCCESS:\n            return updateObject(state, {\n                isLoading: false,\n                message: action.message\n            });\n        case actionTypes.UPDATE_BUTTON_LINK_FAILURE:\n            return updateObject(state, {\n                isLoading: false,\n                errorMsg: action.error.msg\n            });\n        case actionTypes.SEND_SOLUTION_ALERT_REQUEST:\n            return updateObject(state, {\n                errorMsg: null,\n                isLoading: true\n            });\n        case actionTypes.SEND_SOLUTION_ALERT_SUCCESS:\n            return updateObject(state, {\n                isLoading: false,\n                message: action.message\n            });\n        case actionTypes.SEND_SOLUTION_ALERT_FAILURE:\n            return updateObject(state, {\n                isLoading: false,\n                errorMsg: action.error.msg\n            });\n        case actionTypes.UPDATE_AUTOMATIC_SOLUTION_ALERTS_REQUEST:\n            return updateObject(state, {\n                errorMsg: null,\n                isLoading: true\n            });\n        case actionTypes.UPDATE_AUTOMATIC_SOLUTION_ALERTS_SUCCESS:\n            return updateObject(state, {\n                isLoading: false,\n                message: action.message\n            });\n        case actionTypes.UPDATE_AUTOMATIC_SOLUTION_ALERTS_FAILURE:\n            return updateObject(state, {\n                isLoading: false,\n                errorMsg: action.error.msg\n            });\n        default:\n            return state\n    }\n};","import {combineReducers} from 'redux';\nimport {auth} from './auth.reducer';\nimport {assistant} from \"./assistant.reducer\";\nimport {flow} from \"./flow.reducer\";\nimport {settings} from \"./assistantSettings.reducer\";\nimport {profile} from \"./profile.reducer\";\nimport {userInput} from \"./userInput.reducer\";\nimport {solutions} from \"./solutions.reducer\";\n\n\nconst rootReducer = combineReducers({\n    auth,\n    assistant,\n    flow,\n    settings,\n    profile,\n    userInput,\n    solutions\n});\n\nexport default rootReducer;","import * as actionTypes from './actionTypes';\n\n\nfunction login (email, password) {\n    return {\n        type: actionTypes.LOGIN_REQUEST,\n        email,\n        password\n    };\n}\n\nfunction loginSuccess (user) {\n    return {\n        type: actionTypes.LOGIN_SUCCESS,\n        user\n    };\n}\n\nfunction loginFailure (error) {\n    return {\n        type: actionTypes.LOGIN_FAILURE,\n        error\n    };\n}\n\n\nconst logout = () => {\n    return {\n        type: actionTypes.LOGOUT\n    };\n};\n\nconst checkAuthTimeout = (expirationTime, refresh) => {\n    return {\n        type: actionTypes.AUTH_CHECK_TIMEOUT,\n        expirationTime, refresh\n    };\n};\n\nconst refreshToken = (refresh) => {\n    return {\n        type: actionTypes.REFRESH_TOKEN,\n        refresh\n    };\n};\n\nexport const authActions = {\n    login,\n    loginSuccess,\n    loginFailure,\n    logout,\n    refreshToken,\n    checkAuthTimeout\n};","import * as actionTypes from './actionTypes';\n\n\nconst fetchAssistants = () => {\n    return {\n        type: actionTypes.FETCH_ASSISTANTS_REQUEST\n    };\n};\n\nconst fetchAssistantsSuccess = (assistantList) => {\n    return {\n        type: actionTypes.FETCH_ASSISTANTS_SUCCESS,\n        assistantList\n    };\n};\n\nconst fetchAssistantsFailure = (error) => {\n    return {\n        type: actionTypes.FETCH_ASSISTANTS_FAILURE,\n        error\n    };\n};\n\n\nconst addAssistant = (newAssistant) => {\n    return {\n        type: actionTypes.ADD_ASSISTANT_REQUEST,\n        newAssistant\n    };\n};\n\nconst addAssistantSuccess = (successMsg) => {\n    return {\n        type: actionTypes.ADD_ASSISTANT_SUCCESS,\n        successMsg\n    };\n};\n\nconst addAssistantFailure = (error) => {\n    return {\n        type: actionTypes.ADD_ASSISTANT_FAILURE,\n        error\n    };\n};\n\n\n\nconst changeAssistantStatus = (assistantID) => {\n    return {\n        type: actionTypes.CHANGE_ASSISTANT_STATUS_REQUEST,\n        assistantID\n    };\n};\n\nconst changeAssistantStatusSuccess = (successMsg, status, assistantID) => {\n    return {\n        type: actionTypes.CHANGE_ASSISTANT_STATUS_SUCCESS,\n        successMsg,\n        status,\n        assistantID\n    };\n};\n\nconst changeAssistantStatusFailure = (error) => {\n    return {\n        type: actionTypes.CHANGE_ASSISTANT_STATUS_FAILURE,\n        error\n    };\n};\n\nexport const assistantActions = {\n    fetchAssistants,\n    fetchAssistantsSuccess,\n    fetchAssistantsFailure,\n    addAssistant,\n    addAssistantSuccess,\n    addAssistantFailure,\n\n    changeAssistantStatus,\n    changeAssistantStatusSuccess,\n    changeAssistantStatusFailure,\n};","import * as actionTypes from './actionTypes';\n\n\nconst fetchFlowRequest = (assistantID) => {\n    return {\n        type: actionTypes.FETCH_FLOW_REQUEST,\n        assistantID\n    };\n};\n\nconst fetchFlowSuccess = (args) => {\n    return {\n        type: actionTypes.FETCH_FLOW_SUCCESS,\n        blockGroups: args.blockGroups\n    };\n};\n\nconst fetchFlowFailure = (error) => {\n    return {\n        type: actionTypes.FETCH_FLOW_FAILURE,\n        error\n    };\n};\n\n// Groups Actions\nconst addGroupRequest = (values) => {\n    return {\n        type: actionTypes.ADD_GROUP_REQUEST,\n        ID: values.ID,\n        newGroup: values.newGroup\n    };\n};\n\nconst addGroupSuccess = (msg) => {\n    return {\n        type: actionTypes.ADD_GROUP_SUCCESS,\n        msg\n    };\n};\n\nconst addGroupFailure = (error) => {\n    return {\n        type: actionTypes.ADD_GROUP_FAILURE,\n        error\n    };\n};\n\n//////////////////////////////////////////\n\nconst editGroupRequest = (values) => {\n    return {\n        type: actionTypes.EDIT_GROUP_REQUEST,\n        ID: values.ID,\n        editedGroup: values.editedGroup\n    };\n};\n\nconst editGroupSuccess = (msg) => {\n    return {\n        type: actionTypes.EDIT_GROUP_SUCCESS,\n        msg\n    };\n};\n\nconst editGroupFailure = (error) => {\n    return {\n        type: actionTypes.EDIT_GROUP_FAILURE,\n        error\n    };\n};\n\n//////////////////////////////////////////\n\nconst deleteGroupRequest = (values) => {\n    return {\n        type: actionTypes.DELETE_GROUP_REQUEST,\n        assistantID: values.assistantID,\n        deletedGroup: values.deletedGroup\n    };\n};\n\nconst deleteGroupSuccess = (msg) => {\n    return {\n        type: actionTypes.DELETE_GROUP_SUCCESS,\n        msg\n    };\n};\n\nconst deleteGroupFailure = (error) => {\n    return {\n        type: actionTypes.DELETE_GROUP_FAILURE,\n        error\n    };\n};\n\n//////////////////////////////////////////\n// ADD Blocks Actions\nconst addBlockRequest = ({newBlock, assistantID, groupID}) => {\n    return {\n        type: actionTypes.ADD_BLOCK_REQUEST,\n        newBlock,\n        assistantID,\n        groupID\n    };\n};\n\nconst addBlockSuccess = (msg) => {\n    return {\n        type: actionTypes.ADD_BLOCK_SUCCESS,\n        msg\n    };\n};\n\nconst addBlockFailure = (error) => {\n    return {\n        type: actionTypes.ADD_BLOCK_FAILURE,\n        error\n    };\n};\n//////////////////////////////////////////\n// EDIT Blocks Actions\nconst editBlockRequest = ({edittedBlock, assistantID, groupID}) => {\n    return {\n        type: actionTypes.EDIT_BLOCK_REQUEST,\n        edittedBlock,\n        assistantID,\n        groupID\n    };\n};\n\nconst editBlockSuccess = (msg) => {\n    return {\n        type: actionTypes.EDIT_BLOCK_SUCCESS,\n        msg\n    };\n};\n\nconst editBlockFailure = (error) => {\n    return {\n        type: actionTypes.EDIT_BLOCK_FAILURE,\n        error\n    };\n};\n//////////////////////////////////////////\n\n//////////////////////////////////////////\n// DELETE Blocks Actions\nconst deleteBlockRequest = ({deletedBlock, assistantID, groupID}) => {\n    return {\n        type: actionTypes.DELETE_BLOCK_REQUEST,\n        deletedBlock,\n        assistantID,\n        groupID\n    };\n};\n\nconst deleteBlockSuccess = (msg) => {\n    return {\n        type: actionTypes.DELETE_BLOCK_SUCCESS,\n        msg\n    };\n};\n\nconst deleteBlockFailure = (error) => {\n    return {\n        type: actionTypes.DELETE_BLOCK_FAILURE,\n        error\n    };\n};\n//////////////////////////////////////////\n// UPDATE Blocks' order Actions\nconst updateBlocksOrderRequest = ({newBlocksOrder, assistantID, groupID}) => {\n    return {\n        type: actionTypes.UPDATE_BLOCKS_ORDER_REQUEST,\n        newBlocksOrder,\n        assistantID,\n        groupID\n    };\n};\n\nconst updateBlocksOrderSuccess = (msg) => {\n    return {\n        type: actionTypes.UPDATE_BLOCKS_ORDER_SUCCESS,\n        msg\n    };\n};\n\nconst updateBlocksOrderFailure = (error) => {\n    return {\n        type: actionTypes.UPDATE_BLOCKS_ORDER_FAILURE,\n        error\n    };\n};\n//////////////////////////////////////////\n\nexport const flowActions = {\n    fetchFlowRequest,\n    fetchFlowSuccess,\n    fetchFlowFailure,\n\n    addGroupRequest,\n    addGroupSuccess,\n    addGroupFailure,\n\n    editGroupRequest,\n    editGroupSuccess,\n    editGroupFailure,\n\n    deleteGroupRequest,\n    deleteGroupSuccess,\n    deleteGroupFailure,\n\n    addBlockRequest,\n    addBlockSuccess,\n    addBlockFailure,\n\n    editBlockRequest,\n    editBlockSuccess,\n    editBlockFailure,\n\n    deleteBlockRequest,\n    deleteBlockSuccess,\n    deleteBlockFailure,\n\n    updateBlocksOrderRequest,\n    updateBlocksOrderSuccess,\n    updateBlocksOrderFailure\n\n\n};","import * as actionTypes from './actionTypes';\n\n\nconst updateAssistantSettingsRequest = (args) => {\n    return {\n        type: actionTypes.UPDATE_ASSISTANT_SETTINGS_REQUEST,\n        ...args\n    };\n};\n\nconst updateAssistantSettingsSuccess = (successMsg) => {\n    return {\n        type: actionTypes.UPDATE_ASSISTANT_SETTINGS_SUCCESS,\n        successMsg\n    };\n};\n\nconst updateAssistantSettingsFailure = (error) => {\n    return {\n        type: actionTypes.UPDATE_ASSISTANT_SETTINGS_FAILURE,\n        error\n    };\n};\n\nexport const assistantSettingsActions = {\n    updateAssistantSettingsRequest,\n    updateAssistantSettingsSuccess,\n    updateAssistantSettingsFailure\n};","import * as actionTypes from './actionTypes';\n\nconst getProfile = () => {\n    return {\n        type: actionTypes.GET_PROFILE_REQUEST\n    }\n};\n\nconst getProfileSuccess = (profile) => {\n    return {\n        type: actionTypes.GET_PROFILE_SUCCESS,\n        profileData: profile\n    }\n};\n\nconst getProfileFailure = (error) => {\n    return {\n        type: actionTypes.GET_PROFILE_FAILURE,\n        error\n    }\n};\n\nconst saveProfileDetails = (profileData) => {\n    return {\n        type: actionTypes.SAVE_PROFILE_DETAILS_REQUEST,\n        profileData\n    }\n};\n\nconst saveProfileDetailsSuccess = (successMessage) => {\n    return {\n        type: actionTypes.SAVE_PROFILE_DETAILS_SUCCESS,\n        successMessage\n    }\n};\n\nconst saveProfileDetailsFailure = (error) => {\n    return {\n        type: actionTypes.SAVE_PROFILE_DETAILS_FAILURE,\n        error\n    }\n};\n\nconst saveDataSettings = (dataSettings) => {\n    return {\n        type: actionTypes.SAVE_DATA_SETTINGS_REQUEST,\n        dataSettings\n    }\n};\n\nconst saveDataSettingsSuccess = (successMessage) => {\n    return {\n        type: actionTypes.SAVE_DATA_SETTINGS_SUCCESS,\n        successMessage\n    }\n};\n\nconst saveDataSettingsFailure = (error) => {\n    return {\n        type: actionTypes.SAVE_DATA_SETTINGS_FAILURE,\n        error\n    }\n};\n\nexport const profileActions = {\n    getProfile,\n    getProfileSuccess,\n    getProfileFailure,\n    saveProfileDetails,\n    saveProfileDetailsSuccess,\n    saveProfileDetailsFailure,\n    saveDataSettings,\n    saveDataSettingsSuccess,\n    saveDataSettingsFailure\n}","import * as actionTypes from './actionTypes';\n\n\nconst fetchUserInputs = (assistantID) => {\n    return {\n        type: actionTypes.FETCH_USERINPUT_REQUEST,\n        assistantID\n    };\n};\n\nconst fetchUserInputsSuccess = (userInputs) => {\n    return {\n        type: actionTypes.FETCH_USERINPUT_SUCCESS,\n        userInputs\n    };\n};\n\nconst fetchUserInputsFailure = (error) => {\n    return {\n        type: actionTypes.FETCH_USERINPUT_FAILURE,\n        error\n    };\n};\n\n\nconst clearAllUserInputs = (assistantID) => {\n    return {\n        type: actionTypes.CLEAR_ALL_USERINPUT_REQUEST,\n        assistantID\n    };\n};\n\nconst clearAllUserInputsSuccess = () => {\n    return {\n        type: actionTypes.CLEAR_ALL_USERINPUT_SUCCESS,\n    };\n};\n\nconst clearAllUserInputsFailure = (error) => {\n    return {\n        type: actionTypes.CLEAR_ALL_USERINPUT_FAILURE,\n        error\n    };\n};\n\n\nexport const userInputActions = {\n    fetchUserInputs,\n    fetchUserInputsSuccess,\n    fetchUserInputsFailure,\n\n    clearAllUserInputs,\n    clearAllUserInputsSuccess,\n    clearAllUserInputsFailure\n};","import * as actionTypes from './actionTypes';\n\nconst getSolutions = (assistantID) => {\n    return {\n        type: actionTypes.GET_SOLUTIONS_REQUEST,\n        assistantID\n    }\n};\n\nconst getSolutionsSuccess = (solutions) => {\n    return {\n        type: actionTypes.GET_SOLUTIONS_SUCCESS,\n        solutionsData: solutions.data\n    }\n};\n\nconst getSolutionsFailure = (error) => {\n    return {\n        type: actionTypes.GET_SOLUTIONS_FAILURE,\n        error\n    }\n};\n\nconst addSolution = (params) => {\n    console.log(params);\n    return {\n        type: actionTypes.ADD_SOLUTION_REQUEST,\n        params\n    }\n};\n\nconst addSolutionSuccess = (message) => {\n    return {\n        type: actionTypes.ADD_SOLUTION_SUCCESS,\n        message\n    }\n};\n\nconst addSolutionFailure = (error) => {\n    return {\n        type: actionTypes.ADD_SOLUTION_FAILURE,\n        error\n    }\n};\n\nconst editSolution = (params) => {\n    return {\n        type: actionTypes.EDIT_SOLUTION_REQUEST,\n        params\n    }\n};\n\nconst editSolutionSuccess = (message) => {\n    return {\n        type: actionTypes.EDIT_SOLUTION_SUCCESS,\n        message\n    }\n};\n\nconst editSolutionFailure = (error) => {\n    return {\n        type: actionTypes.EDIT_SOLUTION_FAILURE,\n        error\n    }\n};\n\nconst updateSolutionInformationToDisplay = (params) => {\n    return {\n        type: actionTypes.UPDATE_SOLUTION_INFORMATION_TO_DISPLAY_REQUEST,\n        params\n    }\n};\n\nconst updateSolutionInformationToDisplaySuccess = (params) => {\n    return {\n        type: actionTypes.UPDATE_SOLUTION_INFORMATION_TO_DISPLAY_SUCCESS,\n        params\n    }\n};\n\nconst updateSolutionInformationToDisplayFailure = (params) => {\n    return {\n        type: actionTypes.UPDATE_SOLUTION_INFORMATION_TO_DISPLAY_FAILURE,\n        params\n    }\n};\n\nconst updateButtonLink = (params) => {\n    return {\n        type: actionTypes.UPDATE_BUTTON_LINK_REQUEST,\n        params\n    }\n};\n\nconst updateButtonLinkSuccess = (params) => {\n    return {\n        type: actionTypes.UPDATE_BUTTON_LINK_SUCCESS,\n        params\n    }\n};\n\nconst updateButtonLinkFailure = (params) => {\n    return {\n        type: actionTypes.UPDATE_BUTTON_LINK_FAILURE,\n        params\n    }\n};\n\nconst sendSolutionAlert = (params) => {\n    return {\n        type: actionTypes.SEND_SOLUTION_ALERT_REQUEST,\n        params\n    }\n};\n\nconst sendSolutionAlertSuccess = (params) => {\n    return {\n        type: actionTypes.SEND_SOLUTION_ALERT_SUCCESS,\n        params\n    }\n};\n\nconst sendSolutionAlertFailure = (params) => {\n    return {\n        type: actionTypes.SEND_SOLUTION_ALERT_FAILURE,\n        params\n    }\n};\n\nconst updateAutomaticSolutions = (params) => {\n    return {\n        type: actionTypes.UPDATE_AUTOMATIC_SOLUTION_ALERTS_REQUEST,\n        params\n    }\n};\n\nconst updateAutomaticSolutionsSuccess = (params) => {\n    return {\n        type: actionTypes.UPDATE_AUTOMATIC_SOLUTION_ALERTS_SUCCESS,\n        params\n    }\n};\n\nconst updateAutomaticSolutionsFailure = (params) => {\n    return {\n        type: actionTypes.UPDATE_AUTOMATIC_SOLUTION_ALERTS_FAILURE,\n        params\n    }\n};\n\nexport const solutionsActions = {\n    getSolutions,\n    getSolutionsSuccess,\n    getSolutionsFailure,\n    addSolution,\n    addSolutionSuccess,\n    addSolutionFailure,\n    editSolution,\n    editSolutionSuccess,\n    editSolutionFailure,\n    updateSolutionInformationToDisplay,\n    updateSolutionInformationToDisplaySuccess,\n    updateSolutionInformationToDisplayFailure,\n    updateButtonLink,\n    updateButtonLinkSuccess,\n    updateButtonLinkFailure,\n    sendSolutionAlert,\n    sendSolutionAlertSuccess,\n    sendSolutionAlertFailure,\n    updateAutomaticSolutions,\n    updateAutomaticSolutionsSuccess,\n    updateAutomaticSolutionsFailure\n};","import * as actionTypes from '../actions/actionTypes';\nimport { delay } from \"redux-saga\";\nimport { put, takeEvery, takeLatest, all } from 'redux-saga/effects'\nimport {authActions, profileActions} from \"../actions\";\nimport { history, checkAuthenticity } from '../../helpers'\nimport {alertError, alertSuccess, destroyMessage, loadingMessage} from \"../../helpers/alert\";\nimport axios from 'axios';\n\n\nfunction* checkAuthTimeout({expirationTime, refresh}) {\n    yield delay(expirationTime * 1000);\n    yield put(authActions.refreshToken(refresh));\n}\n\nfunction* watchCheckAuthTimeout() {\n    yield takeEvery(actionTypes.AUTH_CHECK_TIMEOUT, checkAuthTimeout)\n}\n\nfunction* login({email, password}) {\n    try {\n        loadingMessage('Logging you in...');\n        const res = yield axios.post(`/api/auth`, {email, password}, {\n            headers: {'Content-Type': 'application/json'},\n        });\n\n        const {user, token, refresh, expiresIn} = yield res.data.data;\n        yield localStorage.setItem(\"user\", JSON.stringify(user));\n        yield localStorage.setItem(\"token\", token);\n        yield localStorage.setItem(\"refresh\", refresh);\n        yield localStorage.setItem(\"expiresIn\", expiresIn);\n        // When access token expires in seconds\n        const secondsToExpire = yield (new Date(expiresIn).getTime() - new Date().getTime()) / 1000;\n        // Dispatch actions\n        yield destroyMessage();\n        yield put(profileActions.getProfile());\n        yield put(authActions.loginSuccess(user));\n        yield put(authActions.checkAuthTimeout(secondsToExpire, refresh)); // refresh to access token when expired\n        // Redirect to dashboard page\n        yield history.push('/dashboard');\n    } catch (error) {\n        console.log(error);\n        yield destroyMessage();\n        yield alertError('Log in Unsuccessful', error.response.data.msg);\n        yield put(authActions.loginFailure(error.response.data));\n    }\n}\n\nfunction* watchLogin() {\n    yield takeLatest(actionTypes.LOGIN_REQUEST, login)\n}\n\nfunction* logout() {\n    // Clear local storage from user, token...\n    yield localStorage.clear();\n    yield history.push('/login');\n}\n\nfunction* watchLogout() {\n    yield takeLatest(actionTypes.LOGOUT, logout)\n}\n\nfunction* refreshToken({refresh}) {\n    try {\n        if(!checkAuthenticity()){throw new Error('Authentication Failed!')}\n        const res = yield axios.post(`/api/auth/refresh`, null,{\n            headers: {'Authorization': 'Bearer ' + refresh},\n        });\n\n        const {token, expiresIn} = res.data.data;\n        yield localStorage.setItem(\"token\", token);\n        yield localStorage.setItem(\"expiresIn\", expiresIn);\n        const secondsToExpire = yield (new Date(expiresIn).getTime() - new Date().getTime()) / 1000;\n        yield put(authActions.checkAuthTimeout(secondsToExpire, refresh));\n\n\n    } catch (error) {\n        console.log(error);\n        // Log the user out\n        yield put(authActions.logout());\n    }\n}\n\nfunction* watchRefreshToken() {\n    yield takeEvery(actionTypes.REFRESH_TOKEN, refreshToken)\n}\n\nexport function* authSaga() {\n    yield all([\n        watchLogin(),\n        watchLogout(),\n        watchCheckAuthTimeout(),\n        watchRefreshToken()\n    ])\n}\n","import {put, takeEvery, all} from 'redux-saga/effects'\nimport * as actionTypes from '../actions/actionTypes';\nimport {assistantActions, authActions} from \"../actions\";\nimport {http} from \"../../helpers\";\n\nfunction* fetchAssistants() {\n    try {\n        const res = yield http.get(`/assistants`);\n        return yield put(assistantActions.fetchAssistantsSuccess(res.data.data))\n    } catch (error) {\n        console.log(error);\n        return yield put(assistantActions.fetchAssistantsFailure(error.response.data));\n    }\n\n}\n\nfunction* addAssistant({type, newAssistant}) {\n    try {\n        const res = yield http.post(`/assistants`, newAssistant);\n        yield put(assistantActions.addAssistantSuccess(res.data.msg));\n        return yield put(assistantActions.fetchAssistants())\n    } catch (error) {\n        console.log(error);\n        //\n        // yield localStorage.removeItem('user');\n        // yield put(authActions.logout());\n        // return yield put(assistantActions.fetchAssistantsFailure(error.response.data));\n    }\n\n}\n\nfunction* watchFetchAssistants() {\n    yield takeEvery(actionTypes.FETCH_ASSISTANTS_REQUEST, fetchAssistants)\n}\n\nfunction* watchAddAssistant() {\n    yield takeEvery(actionTypes.ADD_ASSISTANT_REQUEST, addAssistant)\n}\n\n\nexport function* assistantSaga() {\n    yield all([\n        watchFetchAssistants(),\n        watchAddAssistant()\n    ])\n}","import {all, put, takeEvery} from 'redux-saga/effects'\nimport * as actionTypes from '../actions/actionTypes';\nimport {flowActions} from \"../actions/flow.actions\";\nimport {http} from \"../../helpers\";\nimport {alertError, alertSuccess, destroyMessage, loadingMessage} from \"../../helpers/alert\";\n\nfunction* fetchFlow({assistantID}) {\n    try {\n        const res = yield http.get(`/assistant/${assistantID}/flow`);\n        return yield put(flowActions.fetchFlowSuccess(res.data.data))\n    } catch (error) {\n        console.log(error);\n        return yield put(flowActions.fetchFlowFailure(error.response.data));\n    }\n\n}\n\nfunction* watchFetchFlow() {\n    yield takeEvery(actionTypes.FETCH_FLOW_REQUEST, fetchFlow)\n}\n\n// Groups\nfunction* addGroup(action) {\n    try {\n        loadingMessage('Adding Group');\n        const res = yield http.post(`/assistant/${action.ID}/flow/group`, action.newGroup);\n        yield put(flowActions.addGroupSuccess(res.data.msg));\n        yield destroyMessage();\n        yield alertSuccess('Group Added', res.data.msg);\n        return yield put(flowActions.fetchFlowRequest(action.ID))\n    } catch (error) {\n        console.log(error);\n        yield destroyMessage();\n        return yield put(flowActions.addGroupFailure(error.response.data));\n    }\n}\n\nfunction* editGroup(action) {\n    try {\n        loadingMessage('Updating Group');\n        const res = yield http.put(`/assistant/${action.ID}/flow/group`, action.editedGroup);\n        yield put(flowActions.editGroupSuccess(res.data.msg));\n        yield destroyMessage();\n        yield alertSuccess('Group Updated', res.data.msg);\n        return yield put(flowActions.fetchFlowRequest(action.ID))\n    } catch (error) {\n        console.log(error);\n        yield destroyMessage();\n        return yield put(flowActions.editGroupFailure(error.response.data));\n    }\n}\n\nfunction* deleteGroup({assistantID, deletedGroup}) {\n    try {\n        loadingMessage('Deleting Group');\n        const res = yield http.delete(`/assistant/${assistantID}/flow/group`, {data: {id: deletedGroup.id}});\n        yield put(flowActions.deleteGroupSuccess(res.data.msg));\n        yield destroyMessage();\n        yield alertSuccess('Group Deleted', res.data.msg);\n        return yield put(flowActions.fetchFlowRequest(assistantID))\n    } catch (error) {\n        console.log(error);\n        yield destroyMessage();\n        return yield put(flowActions.deleteGroupFailure(error.response.data));\n    }\n}\n\nfunction* watchAddGroup() {\n    yield takeEvery(actionTypes.ADD_GROUP_REQUEST, addGroup)\n}\n\nfunction* watchEditGroup() {\n    yield takeEvery(actionTypes.EDIT_GROUP_REQUEST, editGroup)\n}\n\nfunction* watchDeleteGroup() {\n    yield takeEvery(actionTypes.DELETE_GROUP_REQUEST, deleteGroup)\n}\n\n// Blocks\nfunction* addBlock({newBlock, groupID, assistantID}) {\n    try {\n        loadingMessage('Adding Block');\n        const res = yield http.post(`/assistant/flow/group/${groupID}/block`, newBlock);\n\n        yield destroyMessage();\n        yield alertSuccess('Block Added', res.data.msg);\n        yield put(flowActions.addBlockSuccess(res.data.msg));\n\n        return yield put(flowActions.fetchFlowRequest(assistantID))\n    } catch (error) {\n        console.log(error);\n        return yield put(flowActions.addBlockFailure(error.response.data));\n    }\n}\n\nfunction* editBlock({edittedBlock, groupID, assistantID}) {\n    try {\n        loadingMessage('Updating Block');\n        let res = yield http.get(`/assistant/${assistantID}/flow`);\n        let currentUpdatedGroup = [];\n        res.data.data.blockGroups.map((group) => {\n            if (group.id === groupID)\n                group.blocks.map((block) => {\n                    if (!block.groupID) block.groupID = groupID;\n                    block.id === edittedBlock.id ? currentUpdatedGroup.push(edittedBlock) : currentUpdatedGroup.push(block);\n                })\n        });\n        res = yield http.put(`/assistant/${assistantID}/flow`, {blocks: currentUpdatedGroup});\n        yield destroyMessage();\n        yield alertSuccess('Block Updated', res.data.msg);\n        yield put(flowActions.editBlockSuccess(res.data.msg));\n        return yield put(flowActions.fetchFlowRequest(assistantID))\n    } catch (error) {\n        console.log(error);\n        return yield put(flowActions.editBlockFailure(error.response.data));\n    }\n}\n\nfunction* deleteBlock({deletedBlock, assistantID, groupID}) {\n    try {\n        loadingMessage('Deleting Block');\n        const res = yield http.delete(`/assistant/flow/group/${groupID}/block`, {data: {id: deletedBlock.id}});\n        yield put(flowActions.deleteBlockSuccess(res.data.msg));\n        yield destroyMessage();\n        yield alertSuccess('Block Deleted', res.data.msg);\n        return yield put(flowActions.fetchFlowRequest(assistantID))\n    } catch (error) {\n        console.log(error);\n        return yield put(flowActions.deleteBlockFailure(error.response.data));\n    }\n}\n\nfunction* updateBlocksOrder({newBlocksOrder, assistantID}) {\n    try {\n        loadingMessage('Updating Blocks Order');\n        const res = yield http.put(`/assistant/${assistantID}/flow`, {blocks: newBlocksOrder});\n        yield put(flowActions.updateBlocksOrderSuccess(res.data.msg));\n        yield destroyMessage();\n        return yield alertSuccess('Order Updated', res.data.msg);\n    } catch (error) {\n        console.log(error);\n        yield destroyMessage();\n        yield alertError('Error in Block Delete', error.message);\n        return yield put(flowActions.updateBlocksOrderFailure(error.response.data));\n    }\n}\n\nfunction* watchAddBlock() {\n    yield takeEvery(actionTypes.ADD_BLOCK_REQUEST, addBlock)\n}\n\nfunction* watchEditBlock() {\n    yield takeEvery(actionTypes.EDIT_BLOCK_REQUEST, editBlock)\n}\n\nfunction* watchDeleteBlock() {\n    yield takeEvery(actionTypes.DELETE_BLOCK_REQUEST, deleteBlock)\n}\n\nfunction* watchUpdateBlcoksOrder() {\n    yield takeEvery(actionTypes.UPDATE_BLOCKS_ORDER_REQUEST, updateBlocksOrder)\n}\n\nexport function* flowSaga() {\n    yield all([\n        watchFetchFlow(),\n\n        watchAddGroup(),\n        watchEditGroup(),\n        watchDeleteGroup(),\n\n        watchAddBlock(),\n        watchEditBlock(),\n        watchDeleteBlock(),\n        watchUpdateBlcoksOrder()\n    ])\n}","import {put, takeEvery, all} from 'redux-saga/effects'\nimport * as actionTypes from '../actions/actionTypes';\nimport {http} from \"../../helpers\";\nimport {assistantActions, assistantSettingsActions} from \"../actions\";\n\nfunction* updateAssistantSettings(action) {\n    try {\n        const res = yield http.put(`assistant/${action.ID}`, action.updatedSettings);\n        yield put(assistantSettingsActions.updateAssistantSettingsSuccess(res.data.msg));\n        return yield put(assistantActions.fetchAssistants())\n    } catch (error) {\n        console.log(error);\n        return yield put(assistantSettingsActions.updateAssistantSettingsFailure(error.response.data));\n    }\n}\n\nfunction* watchUpdateAssistantSettings() {\n    yield takeEvery(actionTypes.UPDATE_ASSISTANT_SETTINGS_REQUEST, updateAssistantSettings)\n}\n\n\nexport function* settingsSage() {\n    yield all([\n        watchUpdateAssistantSettings()\n    ])\n}","import {put, takeEvery, all} from 'redux-saga/effects'\nimport * as actionTypes from '../actions/actionTypes';\nimport {http, updateUsername} from \"../../helpers\";\nimport {profileActions} from \"../actions\";\nimport {alertError, alertSuccess, destroyMessage, loadingMessage} from \"../../helpers/alert\";\n\n\n\nfunction* getProfileData() {\n    try {\n        const res = yield http.get(`/profile`);\n        const profile = res.data.data;\n        // Update username in localStorage\n        yield updateUsername(profile.user.Firstname, profile.user.Surname);\n        return yield put(profileActions.getProfileSuccess(profile))\n\n    } catch (error) {\n        console.log(error);\n        return yield put(profileActions.getProfileFailure(error.response.data));\n    }\n\n}\n\nfunction* saveProfileData(action) {\n    try {\n        loadingMessage('Saving profile...');\n        const res = yield http.post(`/profile`, action.profileData);\n        yield put(profileActions.saveProfileDetailsSuccess(res.data.msg));\n        yield destroyMessage();\n        yield alertSuccess('Profile Saved', \"Profile details have been updated\");\n        return yield put(profileActions.getProfile())\n    } catch (error) {\n        console.log(error);\n        yield destroyMessage();\n        return yield put(profileActions.saveProfileDetailsFailure(error.response.data));\n    }\n}\n\nfunction* saveDataSettings(action) {\n    try {\n        loadingMessage('Saving Data Settings');\n        const res = yield http.post(`/profile/settings`, action.dataSettings);\n        yield destroyMessage();\n        yield alertSuccess('Data Settings saved', res.data.msg);\n        yield put(profileActions.saveDataSettingsSuccess(res.data.msg));\n        return yield put(profileActions.getProfile())\n    } catch (error) {\n        console.log(error);\n        yield destroyMessage();\n        yield alertError('Error in saving Data Settings', error.response.data.msg);\n        return yield put(profileActions.saveDataSettingsFailure(error.response.data));\n    }\n}\n\nfunction* watchProfileRequests(){\n    yield takeEvery(actionTypes.GET_PROFILE_REQUEST, getProfileData)\n}\n\nfunction* watchProfileUpdates() {\n    yield takeEvery(actionTypes.SAVE_PROFILE_DETAILS_REQUEST, saveProfileData)\n}\n\nfunction* watchDataSettingsUpdates() {\n    yield takeEvery(actionTypes.SAVE_DATA_SETTINGS_REQUEST, saveDataSettings)\n}\n\n\nexport function* profileSaga() {\n    yield all([\n        watchProfileRequests(),\n        watchProfileUpdates(),\n        watchDataSettingsUpdates()\n    ])\n}","import {put, takeEvery, all} from 'redux-saga/effects'\nimport * as actionTypes from '../actions/actionTypes';\nimport {userInputActions} from \"../actions\";\nimport {http, alertSuccess, alertError} from \"../../helpers\";\n\nfunction* fetchUserInputs({assistantID}) {\n    try {\n        const res = yield http.get(`/assistant/${assistantID}/userinput`);\n        return yield put(userInputActions.fetchUserInputsSuccess(res.data.data))\n    } catch (error) {\n        console.log(error);\n        return yield put(userInputActions.fetchUserInputsFailure(error));\n    }\n}\n\nfunction* watchFetchUserInputs() {\n    yield takeEvery(actionTypes.FETCH_USERINPUT_REQUEST, fetchUserInputs)\n}\n\nfunction* clearAllUserInputs({assistantID}) {\n    try {\n        const res = yield http.delete(`/assistant/${assistantID}/userinput`);\n        yield put(userInputActions.clearAllUserInputsSuccess());\n        return yield alertSuccess('Cleared Successfully', res.data.msg)\n    } catch (error) {\n        console.log(error);\n        yield put(userInputActions.clearAllUserInputsFailure(error));\n        return yield alertError('Error', \"Sorry, we could'nt clear all the records!\");\n\n    }\n}\n\nfunction* watchClearAllUserInputs() {\n    yield takeEvery(actionTypes.CLEAR_ALL_USERINPUT_REQUEST, clearAllUserInputs)\n}\n\n\nexport function* userInputSaga() {\n    yield all([\n        watchFetchUserInputs(),\n        watchClearAllUserInputs(),\n    ])\n}","import {put, takeEvery, all} from 'redux-saga/effects'\nimport * as actionTypes from '../actions/actionTypes';\nimport {http} from \"../../helpers\";\nimport {solutionsActions} from \"../actions\";\nimport {alertError, alertSuccess, destroyMessage, loadingMessage} from \"../../helpers/alert\";\n\n\nfunction* getSolutionsData({assistantID}) {\n    try {\n        const res = yield http.get(`/assistant/${assistantID}/solutionsData`);\n        return yield put(solutionsActions.getSolutionsSuccess(res.data))\n    } catch (error) {\n        console.log(error);\n        return yield put(solutionsActions.getSolutionsFailure(error.response.data));\n    }\n\n}\n\nfunction* addSolution(action) {\n    try {\n        loadingMessage('Adding Solution');\n        const res = yield http.put(`/assistant/${action.params.ID}/solutionsData`, action.params.newSolution);\n        yield destroyMessage();\n        yield alertSuccess('Solution Added', res.data.msg);\n        yield put(solutionsActions.addSolutionSuccess(res.message));\n        yield put(solutionsActions.getSolutions(action.params.ID));\n    } catch (error) {\n        console.log(error.response);\n        yield destroyMessage();\n        yield alertError('Error in adding Solution', error.response.data.msg);\n        yield put(solutionsActions.addSolutionFailure(error.response.data));\n    }\n}\n\nfunction* editSolution(action) {\n    try {\n        loadingMessage('Editing Solution');\n        const res = yield http.post(`/assistant/${action.params.ID}/solutionsData`, action.params.editedSolution);\n        yield destroyMessage();\n        yield alertSuccess('Solution Edited', res.data.msg);\n        yield put(solutionsActions.editSolutionSuccess(res.message));\n        yield put(solutionsActions.getSolutions(action.params.ID))\n    } catch (error) {\n        console.log(error.response);\n        yield destroyMessage();\n        yield alertError('Error in editing Solution', error.response.data.msg);\n        yield put(solutionsActions.editSolutionFailure(error.response.data));\n    }\n}\n\nfunction* updateSolutionInformationToDisplay(action) {\n    try {\n        loadingMessage('Editing Display Settings');\n        const res = yield http.post(`/assistant/savedisplaytitles/${action.params.solutionID}`, action.params.information);\n        yield destroyMessage();\n        yield alertSuccess('Display Settings have been edited', res.data.msg);\n        yield put(solutionsActions.updateSolutionInformationToDisplaySuccess(res.message));\n    } catch (error) {\n        console.log(error.response);\n        yield alertError('Error in editing Display Settings', error.response.data.msg);\n        yield put(solutionsActions.updateSolutionInformationToDisplayFailure(error.response.data));\n    }\n}\n\nfunction* updateButtonLink(action) {\n    try {\n        loadingMessage('Updating Button Link');\n        const res = yield http.post(`/assistant/savesolutionweblink/${action.params.solutionID}`, action.params.information);\n        yield destroyMessage();\n        yield alertSuccess('Button Link has been updated', res.data.msg);\n        yield put(solutionsActions.updateButtonLinkSuccess(res.message));\n    } catch (error) {\n        console.log(error.response);\n        yield alertError('Error in updating Button Link', error.response.data.msg);\n        yield put(solutionsActions.updateButtonLinkFailure(error.response.data));\n    }\n}\n\nfunction* sendSolutionAlerts(action) {\n    try {\n        loadingMessage('Sending Solution Alerts');\n        const res = yield http.post(`/assistant/${action.params.assistantID}/sendsolutionalerts/${action.params.solutionID}`);\n        yield destroyMessage();\n        yield alertSuccess('Solution Alerts have been sent', res.data.msg);\n        yield put(solutionsActions.sendSolutionAlertSuccess(res.message));\n    } catch (error) {\n        console.log(error.response);\n        yield alertError('Error in sending Solution Alerts', error.response.data.msg);\n        yield put(solutionsActions.sendSolutionAlertFailure(error.response.data));\n    }\n}\n\nfunction* updateAutomaticSolutionsAlerts(action) {\n    try {\n        loadingMessage('Updating Automatic Solution Alerts');\n        const res = yield http.post(`/assistant/automaticsolutionalerts/${action.params.solutionID}`, action.params.information);\n        yield destroyMessage();\n        yield alertSuccess('Automatic Solution Alerts have been updated', res.data.msg);\n        yield put(solutionsActions.updateAutomaticSolutionsSuccess(res.message));\n    } catch (error) {\n        console.log(error.response);\n        yield alertError('Error in updating Automatic Solution Alerts', error.response.data.msg);\n        yield put(solutionsActions.updateAutomaticSolutionsFailure(error.response.data));\n    }\n}\n\nfunction* watchSolutionsRequests(){\n    yield takeEvery(actionTypes.GET_SOLUTIONS_REQUEST, getSolutionsData)\n}\n\nfunction* watchAddSolutionRequests(){\n    yield takeEvery(actionTypes.ADD_SOLUTION_REQUEST, addSolution)\n}\n\nfunction* watchEditSolutionRequests(){\n    yield takeEvery(actionTypes.EDIT_SOLUTION_REQUEST, editSolution)\n}\n\nfunction* watchUpdateSolutionInformationToDisplayRequests(){\n    yield takeEvery(actionTypes.UPDATE_SOLUTION_INFORMATION_TO_DISPLAY_REQUEST, updateSolutionInformationToDisplay)\n}\n\nfunction* watchUpdateButtonLinkRequests(){\n    yield takeEvery(actionTypes.UPDATE_BUTTON_LINK_REQUEST, updateButtonLink)\n}\n\nfunction* watchSendSolutionAlertsRequests(){\n    yield takeEvery(actionTypes.SEND_SOLUTION_ALERT_REQUEST, sendSolutionAlerts)\n}\n\nfunction* watchUpdateAutomaticSolutionAlertsRequests(){\n    yield takeEvery(actionTypes.UPDATE_AUTOMATIC_SOLUTION_ALERTS_REQUEST, updateAutomaticSolutionsAlerts)\n}\n\nexport function* solutionsSaga() {\n    yield all([\n        watchSolutionsRequests(),\n        watchAddSolutionRequests(),\n        watchEditSolutionRequests(),\n        watchUpdateSolutionInformationToDisplayRequests(),\n        watchUpdateButtonLinkRequests(),\n        watchSendSolutionAlertsRequests(),\n        watchUpdateAutomaticSolutionAlertsRequests()\n    ])\n}","import {createStore, applyMiddleware, compose} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './reducers';\nimport {assistantSaga, authSaga, flowSaga, settingsSage, profileSaga, userInputSaga, solutionsSaga} from './sagas'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(flowSaga);\nsagaMiddleware.run(assistantSaga);\nsagaMiddleware.run(authSaga);\nsagaMiddleware.run(settingsSage);\nsagaMiddleware.run(profileSaga);\nsagaMiddleware.run(userInputSaga);\nsagaMiddleware.run(solutionsSaga);\n\n\nexport default store;","import axios from 'axios';\nimport {authHeader} from './auth';\nimport store from '../store/store';\nimport { authActions } from \"../store/actions\";\n\nexport const http = axios.create({\n    baseURL: '/api',\n    headers: {'Content-Type': 'application/json'},\n});\n\nhttp.interceptors.request.use(\n    function (config) {\n        const header = authHeader();\n        if (!header) throw new Error('Token required!');  \n        config.headers = header;\n        return config;\n    },\n    function (error) {\n        console.log(error);\n        return Promise.reject(error);\n    }\n);\n\nhttp.interceptors.response.use(response => {\n    return response;\n}, error => {\n    if (error.response.status === 401) {\n        console.log('Axios Unauthorised');\n        store.dispatch(authActions.logout());\n    }\n    return Promise.reject(error);\n});","import Hashids from \"hashids\";\n\nconst hashids = new Hashids(\"b9iLXiAa\", 5);\n\nconst encode = (param) => {\n    return hashids.encode(param);\n};\n\nconst decode = (param) => {\n    return hashids.decode(param);\n};\n\n\nexport const hasher = {\n    encode,\n    decode\n};","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport {checkAuthenticity} from  '../helpers'\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\n    console.log(\"Check Authenticity\", checkAuthenticity());\n    return (\n        <Route {...rest} render={props => (\n            checkAuthenticity()\n                ? <Component {...props} />\n                : <Redirect to={{pathname: '/login', state: {from: props.location}}}/>\n        )}/>\n    )\n}","import React, {Component} from 'react';\nimport \"./AssistantSettingsModal.less\"\nimport {Button, Form, Input, InputNumber, Modal, Switch} from \"antd\";\n\nconst FormItem = Form.Item;\n\n\nclass AssistantSettingsModal extends Component {\n    state = {\n        isPopupDisabled: this.props.assistant.SecondsUntilPopup <= 0\n    };\n\n    togglePopupSwitch = () => {\n        this.setState({isPopupDisabled: !this.state.isPopupDisabled})\n    }\n\n\n    componentDidMount() {\n        this.setState({\n            inputValue: this.props.assistant.SecondsUntilPopup\n        });\n    }\n\n    handleSave = () => {\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                if (this.state.isPopupDisabled) {\n                    values.secondsUntilPopup = 0\n                }\n                this.props.handleSave(values)\n            }\n        });\n    };\n\n    render() {\n        const formItemLayout = {\n            labelCol: {span: 6},\n            wrapperCol: {span: 14},\n        };\n        const {getFieldDecorator} = this.props.form;\n        const {assistant} = this.props;\n\n        const {inputValue} = this.state;\n\n        return (\n            <Modal\n                title=\"Edit Assistant\"\n                visible={this.props.visible}\n                width={800}\n                destroyOnClose={true}\n                onCancel={this.props.handleCancel}\n                footer={[\n                    <Button key=\"cancel\" onClick={this.props.handleCancel}>Cancel</Button>,\n                    <Button key=\"submit\" type=\"primary\" onClick={this.handleSave}>\n                        Save\n                    </Button>,\n                ]}>\n\n                <Form layout='horizontal'>\n                    <FormItem\n                        label=\"Assistant Name\"\n                        extra=\"Enter a name for your assistant to easily identify it in the dashboard\"\n                        {...formItemLayout}>\n                        {\n                            getFieldDecorator('assistantName', {\n                                initialValue: assistant.Name,\n                                rules: [{\n                                    required: true,\n                                    message: 'Please input your assistant name',\n                                }],\n                            })\n                            (<Input placeholder=\"Ex: My first assistant, Sales Assistant\"/>)\n                        }\n                    </FormItem>\n\n                    <FormItem\n                        label=\"Welcome Message\"\n                        extra=\"This will be sent as first message\"\n                        {...formItemLayout}>\n\n                        {\n                            getFieldDecorator('welcomeMessage', {\n                                initialValue: assistant.Message,\n                                rules: [{\n                                    required: true,\n                                    message: 'Please input your welcome message',\n                                }],\n                            })(\n                                <Input placeholder=\"Ex: Hey there, Welcome visitor\"/>\n                            )\n                        }\n                    </FormItem>\n\n                    <FormItem\n                        label=\"Header Title\"\n                        extra=\"This will apear on top of your chatbot\"\n                        {...formItemLayout}>\n                        {\n                            getFieldDecorator('topBarTitle', {\n                                initialValue: assistant.TopBarText,\n                                rules: [{\n                                    required: true,\n                                    message: 'Please input your header title',\n                                }],\n                            })(\n                                <Input placeholder=\"Ex: Recruiter Bot\"/>\n                            )\n                        }\n                    </FormItem>\n\n                    <FormItem\n                        {...formItemLayout}\n                        label=\"Time to Popup\"\n                        extra=\"This will enforce the assistants' (chatbot) to popup automatically\"\n                    >\n                        <Switch checked={!this.state.isPopupDisabled} onChange={this.togglePopupSwitch}\n                                style={{marginRight: '5px'}}/>\n                        {getFieldDecorator('secondsUntilPopup', {initialValue: assistant.SecondsUntilPopup === 0 ? 1 : assistant.SecondsUntilPopup})(\n                            <InputNumber disabled={this.state.isPopupDisabled} min={1}/>\n                        )}\n                        <span className=\"ant-form-text\"> seconds</span>\n                    </FormItem>\n\n                </Form>\n            </Modal>\n        );\n    }\n}\n\nexport default Form.create()(AssistantSettingsModal)\n","import React, {Component} from 'react';\nimport \"../Assistant.less\"\nimport connect from \"react-redux/es/connect/connect\";\nimport {assistantSettingsActions} from \"../../../../../store/actions\";\nimport AssistantSettingsModal from \"./AssistantSettingsModal/AssistantSettingsModal\";\n\nclass AssistantSettings extends Component {\n\n    handleSave = (updatedSettings) => {\n        this.props.hideModal();\n        // dispatch redux action\n        this.props.dispatch(assistantSettingsActions.updateAssistantSettingsRequest({\n            ID: this.props.assistant.ID,\n            updatedSettings: updatedSettings\n        }));\n    };\n\n    render() {\n        return (\n            <AssistantSettingsModal assistant={this.props.assistant} visible={this.props.visible}\n                                    handleSave={this.handleSave} handleCancel={this.props.hideModal}/>\n        )\n    }\n\n}\n\nconst mapStateToProps = (state) => ({\n    isLoading: state.settings.isLoading,\n});\nexport default connect(mapStateToProps)(AssistantSettings);\n","import React, {Component} from 'react';\nimport \"./Assistant.less\"\nimport {Card, Dropdown, Icon, Menu, Switch} from 'antd';\nimport {Link} from \"react-router-dom\";\nimport AssistantSettings from \"./AssistantSettings/AssistantSettings\";\n\nconst {Meta} = Card;\n\n\nconst menu = (assistant) => (\n    <Menu>\n        <Menu.Item key=\"1\">\n            <Link to={{\n                      pathname: `assistants/${assistant.ID}/solutions`,\n                      state: {assistant: assistant}\n                  }}>\n                <Icon type=\"database\"/> Solutions\n            </Link>\n        </Menu.Item>\n        <Menu.Item key=\"2\">\n            <Link to={{\n                      pathname: `assistants/${assistant.ID}/userInput`,\n                      state: {assistant: assistant}\n                  }}>\n                <Icon type=\"code\"/> User Input\n            </Link>\n        </Menu.Item>\n        <Menu.Item key=\"3\">\n            <Link to={{\n                      pathname: `assistants/${assistant.ID}/analytics`,\n                      state: {assistant: assistant}\n                  }}>\n                <Icon type=\"line-chart\"/> Analytics\n            </Link>\n        </Menu.Item>\n        <Menu.Divider/>\n        <Menu.Item key=\"4\">\n            <Link to={{\n                      pathname: `assistants/${assistant.ID}/integration`,\n                      state: {assistant: assistant}\n                  }}>\n                <Icon type=\"sync\"/> Integration\n            </Link>\n        </Menu.Item>\n    </Menu>\n);\n\nconst covers = [\n    'https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/active_support_6rwo.svg',\n    'https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/voice_control_ofo1.svg',\n    'https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/group_chat_v059.svg',\n    'https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/status_update_jjgk.svg',\n    'https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/messages1_9ah2.svg'\n];\n\n\nclass Assistant extends Component {\n\n    state = {visible: false};\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    hideModal = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    onActiveChanged = () => {\n\n    }\n\n    render() {\n        const {assistant} = this.props;\n        return (\n            <>\n                <Card loading={this.props.isLoading} style={{width: 300, margin: 15, float: 'left', height: 369}}\n                      cover={\n                          <img alt=\"example\"\n                               height={200}\n                               width=\"100%\"\n                               src={covers[Math.floor(Math.random() * covers.length)]}/>\n                      }\n                      title={assistant.Name}\n                      extra={<Switch defaultChecked={assistant.Active} onChange={this.onActiveChanged}/>}\n                      actions={[\n                          <div onClick={this.showModal}>\n                              <Icon type=\"setting\"/>\n                              <span> Settings</span>\n                          </div>,\n\n                          <div>\n                              <Link\n                                  to={{\n                                      pathname: `assistants/${assistant.ID}/flow`,\n                                      state: {assistant: assistant}\n                                  }}>\n                                  <Icon type=\"build\"/>\n                                  <span> Flow</span>\n                              </Link>\n                          </div>,\n\n                          <Dropdown overlay={menu(assistant)} trigger={['click']}>\n                              <a className=\"ant-dropdown-link\">\n                                  ...\n                              </a>\n                          </Dropdown>]}>\n                    <Meta description={assistant.TopBarText}/>\n                </Card>\n\n                <AssistantSettings assistant={assistant}\n                                   hideModal={this.hideModal}\n                                   visible={this.state.visible}/>\n\n            </>\n        )\n    }\n}\n\nexport default Assistant;\n","import React, {Component} from 'react';\nimport \"./NewAssistantModal.less\";\n\nimport {Button, Form, Input, Modal, Select, InputNumber, message, Switch} from 'antd';\nimport {connect} from \"react-redux\";\nimport {assistantActions} from \"../../../../store/actions\";\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\n\nconst loading = () => {\n    message.loading('Adding assistant', 0);\n};\n\nclass NewAssistantModal extends Component {\n\n    state = {\n        isPopupDisabled: true\n    };\n\n    togglePopupSwitch = () => {\n        this.setState({isPopupDisabled: !this.state.isPopupDisabled})\n    };\n\n    handleAdd = () => {\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                if(this.state.isPopupDisabled) {values.secondsUntilPopup = 0}\n                console.log(values);\n                // send to server\n                this.props.dispatch(assistantActions.addAssistant(values));\n                loading();\n            }\n        });\n    };\n\n    componentDidUpdate(prevProps) {\n        if (!this.props.isAdding && this.props.isAdding !== prevProps.isAdding) {\n            this.props.hideModal();\n            message.destroy();\n            message.success(this.props.successMsg)\n\n        }\n\n    }\n\n\n    render() {\n        const formItemLayout = {\n            labelCol: {span: 6},\n            wrapperCol: {span: 14},\n        };\n        const {getFieldDecorator} = this.props.form;\n\n        return (\n            <Modal\n                width={800}\n                title=\"Create New Assistant\"\n                visible={this.props.visible}\n                onOk={this.handleOk}\n                onCancel={this.handleCancel}\n                destroyOnClose={true}\n                footer={[\n                    <Button key=\"cancel\" onClick={this.props.hideModal}>Cancel</Button>,\n                    <Button key=\"submit\" type=\"primary\" onClick={this.handleAdd}>\n                        Add\n                    </Button>,\n                ]}>\n                <Form layout='horizontal'>\n                    <FormItem\n                        label=\"Assistant Name\"\n                        extra=\"Enter a name for your assistant to easily identify it in the dashboard\"\n                        {...formItemLayout}>\n                        {getFieldDecorator('assistantName', {\n                            rules: [{\n                                required: true,\n                                message: 'Please input your assistant name',\n                            }],\n                        })(\n                            <Input placeholder=\"Ex: My first assistant, Sales Assistant\"/>\n                        )}\n                    </FormItem>\n\n                    <FormItem\n                        label=\"Welcome Message\"\n                        extra=\"This will be sent as first message\"\n                        {...formItemLayout}>\n                        {getFieldDecorator('welcomeMessage', {\n                            rules: [{\n                                required: true,\n                                message: 'Please input your welcome message',\n                            }],\n                        })(\n                            <Input placeholder=\"Ex: Hey there, Welcome visitor\"/>\n                        )}\n                    </FormItem>\n\n                    <FormItem\n                        label=\"Header Title\"\n                        extra=\"This will apear on top of your chatbot\"\n                        {...formItemLayout}>\n                        {getFieldDecorator('topBarTitle', {\n                            rules: [{\n                                required: true,\n                                message: 'Please input your header title',\n                            }],\n                        })(\n                            <Input placeholder=\"Ex: Recruiter Bot\"/>\n                        )}\n                    </FormItem>\n\n                    <FormItem\n                    {...formItemLayout}\n                    label=\"Time to Popup\"\n                    extra=\"This will enforce the assistants' (chatbot) to popup automatically\"\n                    >\n                    <Switch defaultChecked={false} onChange={this.togglePopupSwitch} style={{marginRight: '5px'}} />\n                    {getFieldDecorator('secondsUntilPopup', { initialValue: 1 })(\n                        <InputNumber disabled={this.state.isPopupDisabled} min={1} />\n                    )}\n                    <span className=\"ant-form-text\"> seconds</span>\n                    </FormItem>\n\n                    <FormItem {...formItemLayout}\n                              label=\"Assistant Template\">\n\n                        {\n                            getFieldDecorator('template')(\n                                <Select placeholder=\"Please select template\">\n                                    <Option value=\"recruitment\">Recruitment</Option>\n                                    <Option value=\"Shopping\">Shopping</Option>\n                                    <Option value=\"Sales\">Sales</Option>\n                                </Select>\n                            )\n                        }\n                    </FormItem>\n                </Form>\n            </Modal>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        successMsg: state.assistant.successMsg,\n        isAdding: state.assistant.isAdding\n    };\n}\n\nexport default connect(mapStateToProps)(Form.create()(NewAssistantModal))\n","import React, {Component} from 'react';\nimport {Button, message, Skeleton} from 'antd';\nimport {connect} from 'react-redux';\n\nimport \"./Assistants.less\"\nimport styles from \"./Assistants.module.less\"\nimport Assistant from \"./Assistant/Assistant\"\n\nimport {assistantActions} from \"../../../store/actions/assistant.actions\";\nimport NewAssistantModal from \"./NewAssistantModal/NewAssistantModal\";\n\n\nclass Assistants extends Component {\n    state = {\n        visible: false,\n    };\n\n    componentDidUpdate(prevProps) {\n        // Show feedback for settings update\n        if (Boolean(this.props.successSettings) && Boolean(prevProps.successSettings) !== Boolean(this.props.successSettings))\n            message.success(this.props.successSettings);\n\n        if (Boolean(this.props.errorSettings) && Boolean(prevProps.errorSettings) !== Boolean(this.props.errorSettings))\n            message.error(this.props.errorSettings);\n    }\n\n\n    componentDidMount() {\n        this.props.dispatch(assistantActions.fetchAssistants());\n    }\n\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    hideModal = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n\n    render() {\n        return (\n            <div style={{height: '100%'}}>\n                <div className={styles.Panel}>\n                    <div className={styles.Panel_Header}>\n                        <div>\n                            <h3>Assistants List</h3>\n                            <p>Here you can see all assistants created by you</p>\n                        </div>\n                        <div>\n                            <Button className={styles.Panel_Header_Button} type=\"primary\" icon=\"plus\"\n                                    onClick={this.showModal}>\n                                Add Assistant\n                            </Button>\n                        </div>\n\n                    </div>\n\n\n                    <div className={styles.Panel_Body}>\n                        <div className={styles.AssistantsList}>\n                            {\n                                this.props.assistantList[0] ?\n                                    (\n                                        this.props.assistantList.map((assistant, i) => <Assistant assistant={assistant}\n                                                                                                  key={i}\n                                                                                                  index={i}\n                                                                                                  isLoading={this.props.isLoading}\n                                        />)\n                                    )\n                                    : <Skeleton active/>\n                            }\n                        </div>\n                    </div>\n\n                </div>\n\n\n                <NewAssistantModal visible={this.state.visible}\n                                   hideModal={this.hideModal}/>\n\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        assistantList: state.assistant.assistantList,\n        isLoading: state.assistant.isLoading,\n        successSettings: state.settings.successMsg,\n        errorSettings: state.settings.errorMsg,\n    };\n}\n\nexport default connect(mapStateToProps)(Assistants);\n","import React, {Component} from 'react';\nimport \"./NewGroup.less\"\nimport {Button, Modal, Form, Input} from \"antd\";\n\nconst FormItem = Form.Item;\n\nclass NewGroup extends Component {\n\n    state = {};\n\n    handleSave = () => this.props.form.validateFields((err, values) => {\n        if (!err)\n            this.props.handleSave(values)\n    });\n\n    render() {\n        const formItemLayout = {\n            labelCol: {span: 6},\n            wrapperCol: {span: 14},\n        };\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <Modal\n                width={800}\n                title=\"Create New Group\"\n                destroyOnClose={true}\n                visible={this.props.visible}\n                onOk={this.props.handleSave}\n                onCancel={this.props.handleCancel}\n                footer={[\n                    <Button key=\"Cancel\" onClick={this.props.handleCancel}>Cancel</Button>,\n                    <Button key=\"submit\" type=\"primary\" onClick={this.handleSave}>\n                        Add\n                    </Button>\n                ]}>\n                <Form layout='horizontal'>\n                    <FormItem\n                        label=\"Group Name\"\n                        extra=\"Enter a name for your group to easily identify it in the group list\"\n                        {...formItemLayout}>\n                        {getFieldDecorator('name', {\n                            rules: [{\n                                required: true,\n                                message: 'Please enter your group name',\n                            }],\n                        })(\n                            <Input placeholder=\"Ex: Greetings group, Sales group\"/>\n                        )}\n                    </FormItem>\n\n                    <FormItem\n                        label=\"Group Description\"\n                        extra=\"Just a description for you\"\n                        {...formItemLayout}>\n                        {getFieldDecorator('description', {\n                            rules: [{\n                                required: true,\n                                message: 'Please add description to your group name',\n                            }],\n                        })(\n                            <Input placeholder=\"Ex: this is first group, this group help get info from user\"/>\n                        )}\n                    </FormItem>\n\n\n                </Form>\n            </Modal>\n        );\n    }\n}\n\nexport default Form.create()(NewGroup)","import React, {Component} from 'react';\nimport {Button, Modal, Form, Input} from \"antd\";\n\nconst FormItem = Form.Item;\n\nclass EditGroup extends Component {\n\n    state = {};\n\n    handleUpdate = () => this.props.form.validateFields((err, values) => {\n        if (!err) {\n            this.props.group.name = values.name;\n            this.props.group.description = values.description;\n            this.props.handleUpdate(this.props.group)\n        }\n    });\n\n\n    render() {\n        const formItemLayout = {\n            labelCol: {span: 6},\n            wrapperCol: {span: 14},\n        };\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <Modal\n                width={800}\n                title=\"Edit Group\"\n                visible={this.props.visible}\n                onOk={this.props.handleUpdate}\n                onCancel={this.props.handleCancel}\n                footer={[\n                    <Button key=\"delete\" type=\"danger\" onClick={() => this.props.handleDelete(this.props.group)}>\n                        Delete\n                    </Button>,\n                    <Button key=\"Cancel\" onClick={this.props.handleCancel}>Cancel</Button>,\n                    <Button key=\"submit\" type=\"primary\" onClick={this.handleUpdate}>\n                        Update\n                    </Button>\n                ]}>\n                <Form layout='horizontal'>\n                    <FormItem\n                        label=\"Group Name\"\n                        extra=\"Enter a name for your group to easily identify it in the group list\"\n                        {...formItemLayout}>\n                        {getFieldDecorator('name', {\n                            initialValue: this.props.group.name,\n                            rules: [{\n                                required: true,\n                                message: 'Please enter your group name',\n                            }],\n                        })(\n                            <Input placeholder=\"Ex: Greetings group, Sales group\"/>\n                        )}\n                    </FormItem>\n\n                    <FormItem\n                        label=\"Group Description\"\n                        extra=\"Just a description for you\"\n                        {...formItemLayout}>\n                        {getFieldDecorator('description', {\n                            initialValue: this.props.group.description,\n                            rules: [{\n                                required: true,\n                                message: 'Please description to your group name',\n                            }],\n                        })(\n                            <Input placeholder=\"Ex: this is first group, this group help get info from user\"/>\n                        )}\n                    </FormItem>\n\n\n                </Form>\n            </Modal>\n        );\n    }\n}\n\nexport default Form.create()(EditGroup)","import React, {Component} from 'react';\nimport \"./Groups.less\"\nimport styles from \"./Groups.module.less\";\nimport {Avatar, Button, List, Skeleton, Spin} from \"antd\";\nimport NewGroup from \"./NewGroup/NewGroup\";\nimport EditGroup from \"./EditGroup/EditGroup\";\n\nclass Groups extends Component {\n\n    state = {\n        newGroupModal: false,\n        editGroupModal: false,\n        selectedGroupToEdit: {}\n    };\n\n\n    ////// ADD GROUP\n    handleAddGroup = (newGroup) => {\n        this.props.addGroup(newGroup);\n        this.setState({newGroupModal: false});\n    };\n\n    handleAddGroupCancel = () => this.setState({newGroupModal: false});\n\n    showNewGroupModal = () => this.setState({newGroupModal: true});\n\n\n    ////// EDIT GROUP\n    handleEditGroup = (editedGroup) => {\n        this.props.editGroup(editedGroup);\n        this.setState({editGroupModal: false, selectedGroupToEdit: {}});\n    };\n\n    handleEditGroupCancel = () => this.setState({editGroupModal: false});\n\n    showEditGroupModal = (item) => this.setState({editGroupModal: true, selectedGroupToEdit: item});\n\n    ////// DELETE GROUP\n    handleDeleteGroup = (deletedGroup) => {\n        this.props.deleteGroup(deletedGroup);\n        this.setState({editGroupModal: false, selectedGroupToEdit: {}});\n    };\n\n\n    render() {\n        return (\n            <div className={styles.Panel}>\n                <div className={styles.Panel_Header}>\n                    <div>\n                        <h3>Flow Groups</h3>\n                    </div>\n                    <div>\n                        <Button className={styles.Panel_Header_Button} type=\"primary\" icon=\"plus\"\n                                onClick={this.showNewGroupModal}>\n                            Add Group\n                        </Button>\n\n                        <NewGroup visible={this.state.newGroupModal}\n                                  handleCancel={this.handleAddGroupCancel}\n                                  handleSave={this.handleAddGroup}/>\n                    </div>\n                </div>\n\n\n                <div className={styles.Panel_Body}>\n                    {\n                        this.props.isLoading ?\n                            <Spin><Skeleton active={true}/></Spin>\n                            :\n                            <List\n                                itemLayout=\"horizontal\"\n                                dataSource={this.props.groupsList}\n                                renderItem={item => (\n                                    <List.Item actions={[<Button icon={'edit'}\n                                                                 onClick={() => this.showEditGroupModal(item)}/>]}>\n                                        <List.Item.Meta\n                                            onClick={() => this.props.selectGroup(item)}\n                                            className={styles.groupsList}\n                                            avatar={<Avatar icon=\"ordered-list\" style={{backgroundColor: '#9254de'}}/>}\n                                            title={item.name}\n                                            description={item.description}\n                                        />\n                                    </List.Item>\n                                )}\n                            />\n                    }\n                </div>\n\n                <EditGroup group={this.state.selectedGroupToEdit}\n                           visible={this.state.editGroupModal}\n                           handleCancel={this.handleEditGroupCancel}\n                           handleUpdate={this.handleEditGroup}\n                           handleDelete={this.handleDeleteGroup}/>\n            </div>\n        );\n    }\n}\n\nexport default Groups;\n","import React, {Component} from 'react';\nimport {Row, Col, Collapse, Divider, Button, Card, Tag, Checkbox} from \"antd\";\n\nconst Panel = Collapse.Panel;\nconst {Meta} = Card;\n\nclass Block extends Component {\n\n    editBlock(block) {\n        console.log('this block needs to be edited', block)\n        this.props.editBlock(block)\n    }\n\n    deleteBlock(block) {\n        console.log('this block needs to be delete', block)\n        this.props.deleteBlock(block)\n    }\n\n    render() {\n        const {block} = this.props;\n        return (\n            <Collapse bordered={true}>\n                <Panel header={(\n                    <>\n                        {block.type} <Divider type=\"vertical\"/>\n                        {block.content.text} <Divider type=\"vertical\"/>\n\n                        <Button icon={'edit'} size={\"small\"} onClick={() => this.editBlock(block)}/>\n                        <Divider type=\"vertical\"/>\n                        <Button icon={'delete'} size={\"small\"} type={\"danger\"}\n                                onClick={() => this.deleteBlock(block)}/>\n                    </>\n                )}\n                       key={this.props.key}>\n\n                    {block.content.text ?\n                        <Row>\n                            <Col span={6}>Question:</Col>\n                            <Col span={12}>{block.content.text}</Col>\n                            <Divider/>\n                        </Row>\n                        : null\n                    }\n\n                    {block.content.blockToGoID ?\n                        <Row>\n                            <Col span={6}>block To Go ID:</Col>\n                            <Col span={12}>{block.content.blockToGoID}</Col>\n                            <Divider/>\n                        </Row>\n                        : null\n                    }\n\n                    {block.content.validation ?\n                        <Row>\n                            <Col span={6}>validation</Col>\n                            <Col span={12}>{block.content.validation}</Col>\n                            <Divider/>\n                        </Row>\n                        : null\n                    }\n\n                    {block.content.action ?\n                        <Row>\n                            <Col span={6}>action</Col>\n                            <Col span={12}>{block.content.action}</Col>\n                            <Divider/>\n                        </Row>\n                        : null\n                    }\n\n                    {block.content.afterMessage ?\n                        <Row>\n                            <Col span={6}>after Message</Col>\n                            <Col span={12}>{block.content.afterMessage}</Col>\n                            <Divider/>\n                        </Row>\n                        : null\n                    }\n\n                    {block.content.showTop ?\n                        <Row>\n                            <Col span={6}>show Top</Col>\n                            <Col span={12}>{block.content.showTop}</Col>\n                            <Divider/>\n                        </Row>\n                        : null\n                    }\n\n                    {block.content.storeInDB ?\n                        <Row>\n                            <Col span={6}>Stroe in DB:</Col>\n                            <Col span={6}><Checkbox checked={block.content.storeInDB}></Checkbox></Col>\n\n                            <Col span={6}>Skippable:</Col>\n                            <Col span={6}><Checkbox checked={block.content.isSkippable}></Checkbox></Col>\n                            <Divider/>\n                        </Row>\n                        : null\n                    }\n\n                    {block.content.answers ?\n                        <div>\n                            Answers:\n                            {\n                                block.content.answers.map((answer, i) =>\n                                    <Card key={i} style={{margin: 5, width: 300}}>\n                                        <Meta\n                                            title={answer.text}\n                                            description={\n                                                (<>Keywords: {answer.keywords.map((keyword, i) =>\n                                                    <Tag key={i}>{keyword}</Tag>)}</>)\n                                            }\n                                        />\n                                        <Row>\n                                            <Divider/>\n                                            <Col span={6}>Action:</Col>\n                                            <Col span={12}>{answer.action}</Col>\n                                        </Row>\n\n                                        <Row>\n                                            <Divider/>\n                                            <Col span={6}>After Message</Col>\n                                            <Col span={12}>{answer.afterMessage}</Col>\n                                        </Row>\n\n                                    </Card>\n                                )\n                            }\n                        </div>\n                        : null\n                    }\n\n                </Panel>\n            </Collapse>\n        );\n    }\n\n}\n\nexport default Block;\n\n","import React, {Component} from 'react';\nimport {Button, Card, Checkbox, Form, Input, Select, Spin} from \"antd\";\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nclass UserInput extends Component {\n\n    state = {\n        showGoToBlock: false,\n        showGoToGroup: false\n    };\n\n    onSubmit = () => {\n        return this.props.form.validateFields((err, values) => {\n            // If from is valid crete the new block following User Input block type format\n            if (!err) {\n                this.props.handleNewBlock({\n                    block: {\n                        type: 'User Input',\n                        groupID: this.props.options.currentGroup.id,\n                        storeInDB: values.storeInDB,\n                        isSkippable: values.isSkippable,\n                        labels: '',\n                        content: {\n                            text: values.text,\n                            blockToGoID: values.blockToGoID || values.blockToGoIDGroup || null,\n                            validation: values.validation,\n                            action: values.action,\n                            afterMessage: values.afterMessage\n                        }\n                    }\n                })\n            }\n        })\n    };\n\n    onCancel = () => this.props.handleNewBlock(false);\n\n    onSelectAction = (action) => {\n        if (action === \"Go To Specific Block\")\n            this.setState({showGoToBlock: true, showGoToGroup: false});\n        else if (action === \"Go To Group\")\n            this.setState({showGoToBlock: false, showGoToGroup: true});\n        else\n            this.setState({showGoToBlock: false, showGoToGroup: false});\n    };\n\n    render() {\n        const {blockTypes, blocks, allGroups} = this.props.options;\n        let blockOptions = {};\n        // extract the correct blockType from blockTypes[]\n        for (const blockType of blockTypes)\n            if (blockType.name === 'User Input')\n                blockOptions = blockType;\n\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <Card style={{width: '100%'}}\n                  actions={[\n                      <Button key=\"cancel\" onClick={this.onCancel}>Cancel</Button>,\n                      <Button key=\"submit\" type=\"primary\" onClick={this.onSubmit}>Add</Button>]}\n            >\n                <Form layout='horizontal'>\n                    <FormItem label=\"Question\"\n                              extra=\"The above text will be shown in a bubble inside the chat\"\n                              {...this.props.options.layout}>\n                        {getFieldDecorator('text', {\n                            rules: [{\n                                required: true,\n                                message: \"Please input question field\",\n                            }],\n                        })(\n                            <Input placeholder=\"Ex: Where are you from?\"/>\n                        )}\n                    </FormItem>\n\n                    <FormItem label=\"Validation\"\n                              {...this.props.options.layout}>\n                        {\n                            blockOptions.validations ?\n                                getFieldDecorator('validation', {\n                                    rules: [{\n                                        required: true,\n                                        message: \"Please field validation\",\n                                    }]\n                                })(\n                                    <Select placeholder=\"Will validate the input\">{\n                                        blockOptions.validations.map((validation, i) =>\n                                            <Option key={i} value={validation}>{validation}</Option>)\n                                    }</Select>\n                                )\n                                : <Spin><Select placeholder=\"Will validate the input\"></Select></Spin>\n                        }\n                    </FormItem>\n\n                    <FormItem label=\"Action\"\n                              {...this.props.options.layout}>\n                        {\n                            blockOptions.actions ?\n                                getFieldDecorator('action', {\n                                    rules: [{\n                                        required: true,\n                                        message: \"Please input question field\",\n                                    }],\n                                })(\n                                    <Select onSelect={this.onSelectAction}\n                                            placeholder=\"The next step after this block\">{\n                                        blockOptions.actions.map((action, i) =>\n                                            <Option key={i}\n                                                    value={action}>{action}</Option>)\n                                    }</Select>\n                                )\n                                : <Spin><Select placeholder=\"The next step after this block\"></Select></Spin>\n                        }\n                    </FormItem>\n\n                    {this.state.showGoToBlock ?\n                        (<FormItem label=\"Go To Specific Block\" {...this.props.options.layout}>\n                            {\n                                getFieldDecorator('blockToGoID',\n                                    {\n                                        rules: [{required: true, message: \"Please select your next block\"}]\n\n                                    }\n                                )(\n                                    <Select placeholder=\"The next step after this block\">{\n                                        blocks.map((block, i) =>\n                                            <Option key={i} value={block.id}>\n                                                {`${block.id}- (${block.type}) ${block.content.text ? block.content.text : ''}`}\n                                            </Option>\n                                        )\n                                    }</Select>\n                                )\n                            }\n                        </FormItem>)\n                        : null\n                    }\n\n                    {this.state.showGoToGroup ?\n                        (<FormItem label=\"Go To Specific Group\"\n                                   extra=\"The selected group will start from its first block\"\n                                   {...this.props.options.layout}>\n                            {\n                                getFieldDecorator('blockToGoIDGroup',\n                                    {\n                                        rules: [{required: true, message: \"Please select your next group\"}]\n                                    }\n                                )(\n                                    <Select placeholder=\"The next block after this block\">{\n                                        allGroups.map((group, i) => {\n                                                if (group.blocks[0])\n                                                    return <Option key={i} value={group.blocks[0].id}>\n                                                        {`${group.name}`}\n                                                    </Option>;\n                                                else\n                                                    return <Option disabled key={i} value={group.name}>\n                                                        {`${group.name}`}\n                                                    </Option>\n                                            }\n                                        )\n                                    }</Select>\n                                )\n                            }\n                        </FormItem>)\n                        : null\n                    }\n\n\n                    <FormItem label=\"After message\"\n                              extra=\"This message will display straight after the user's response\"\n                              {...this.props.options.layout}>\n                        {getFieldDecorator('afterMessage', {\n                            rules: [{\n                                required: true,\n                                message: \"Please input question field\",\n                            }],\n                        })(\n                            <Input placeholder=\"Ex: Your input is recorded\"/>\n                        )}\n                    </FormItem>\n\n                    <Form.Item\n                        label=\"Skippable?\"\n                        {...this.props.options.layout}>\n                        {getFieldDecorator('isSkippable', {\n                            valuePropName: 'checked',\n                            initialValue: false,\n                        })(\n                            <Checkbox>Users can skip answering this question</Checkbox>\n                        )}\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Store responses?\"\n                        {...this.props.options.layout}>\n                        {getFieldDecorator('storeInDB', {\n                            valuePropName: 'checked',\n                            initialValue: blockOptions.alwaysStoreInDB,\n                        })(\n                            <Checkbox disabled={blockOptions.alwaysStoreInDB}>\n                                Users' responses should be recorded</Checkbox>\n                        )}\n                    </Form.Item>\n\n                </Form>\n            </Card>\n        );\n    }\n}\n\nexport default Form.create()(UserInput);\n\n","import React, {Component} from 'react';\nimport {Button, Card, Checkbox, Form, Icon, Input, Modal, Select, Spin, Tag, Tooltip} from \"antd\";\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nclass Question extends Component {\n\n    state = {\n        showGoToBlock: false,\n        showGoToGroup: false,\n        modalVisible: false,\n\n        tags: [],\n        inputVisible: false,\n        inputValue: '',\n        answers: []\n    };\n\n    onSubmit = () => {\n        return this.props.form.validateFields(['text', 'isSkippable', 'storeInDB'], (err, values) => {\n\n            // If from is valid crete the new block following User Input block type format\n            if (!err) {\n                this.props.handleNewBlock({\n                    block: {\n                        type: 'Question',\n                        groupID: this.props.options.currentGroup.id,\n                        storeInDB: values.storeInDB,\n                        isSkippable: values.isSkippable,\n                        labels: '',\n                        content: {\n                            text: values.text,\n                            answers: this.state.answers\n                        }\n                    }\n                })\n            }\n        })\n    };\n\n    onCancel = () => this.props.handleNewBlock(false);\n\n    onSelectAction = (action) => {\n        if (action === \"Go To Specific Block\")\n            this.setState({showGoToBlock: true, showGoToGroup: false});\n        else if (action === \"Go To Group\")\n            this.setState({showGoToBlock: false, showGoToGroup: true});\n        else\n            this.setState({showGoToBlock: false, showGoToGroup: false});\n    };\n\n\n    addAnswer = () => {\n        this.props.form.validateFields(['answer', 'action', 'blockToGoID', 'blockToGoIDGroup', 'afterMessage'], (err, values) => {\n            if (!err) {\n                const answer = {\n                    text: values.answer,\n                    keywords: this.state.tags,\n                    blockToGoID: values.blockToGoID || values.blockToGoIDGroup || null,\n                    action: values.action,\n                    afterMessage: values.afterMessage\n                };\n                this.setState({tags: []});\n                const answers = this.state.answers;\n                answers.push(answer);\n                this.setState({answers});\n                this.hideAddAnswer();\n                console.log(this.state.answers)\n            }\n        })\n\n    };\n\n    showAddAnswer = () => this.setState({modalVisible: true});\n    hideAddAnswer = () => this.setState({modalVisible: false});\n    removeAnswer = () => {\n        console.log(\"TODO\")\n    };\n\n// Tags component's functions\n    removeTag = (removedTag) => this.setState({tags: this.state.tags.filter(tag => tag !== removedTag)});\n    showInput = () => this.setState({inputVisible: true}, () => this.input.focus());\n    handleInputChange = e => this.setState({inputValue: e.target.value});\n    saveInputRef = input => this.input = input;\n    handleInputConfirm = () => {\n        const inputValue = this.state.inputValue;\n        let tags = this.state.tags;\n        if (inputValue && tags.indexOf(inputValue) === -1)\n            tags = [...tags, inputValue];\n        this.setState({tags, inputVisible: false, inputValue: '',});\n    };\n\n// END Tags component's functions\n\n\n    render() {\n        const {blockTypes, blocks, allGroups} = this.props.options;\n        let blockOptions = {};\n        // extract the correct blockType from blockTypes[]\n        for (const blockType of blockTypes)\n            if (blockType.name === 'Question')\n                blockOptions = blockType;\n\n        const {getFieldDecorator} = this.props.form;\n\n        const {tags, inputVisible, inputValue} = this.state;\n\n        return (\n            <Card style={{width: '100%'}}\n                  actions={[\n                      <Button key=\"cancel\" onClick={this.onCancel}>Cancel</Button>,\n                      <Button key=\"submit\" type=\"primary\" onClick={this.onSubmit}>Add</Button>]}>\n                <Form layout='horizontal'>\n                    <FormItem label=\"Question\"\n                              extra=\"The above text will be shown in a bubble inside the chat\"\n                              {...this.props.options.layout}>\n                        {getFieldDecorator('text', {\n                            rules: [{\n                                required: true,\n                                message: \"Please input question field\",\n                            }],\n                        })(\n                            <Input placeholder=\"Ex: Where are you from?\"/>\n                        )}\n                    </FormItem>\n\n                    <FormItem label=\"Answers\"\n                              {...this.props.options.layout}>\n                        <Button onClick={this.showAddAnswer}\n                                type=\"primary\" icon=\"plus\" shape=\"circle\" size={\"small\"}></Button>\n                        {\n                            this.state.answers.map((answer, i) => (\n                                <Card title={answer.text}\n                                      key={i}\n                                      extra={<Button onClick={this.removeAnswer}\n                                                     type=\"danger\" icon=\"delete\" shape=\"circle\"\n                                                     size={\"small\"}></Button>}\n                                      style={{width: 200, margin: 10}}>\n                                    <p>Action: {answer.action}</p>\n                                    Tags: <br/>\n                                    {answer.keywords.map((keyword, i) => <Tag key={i}>{keyword}</Tag>)}\n\n                                </Card>\n                            ))\n                        }\n                    </FormItem>\n\n                    <Form.Item\n                        label=\"Skippable?\"\n                        {...this.props.options.layout}>\n                        {getFieldDecorator('isSkippable', {\n                            valuePropName: 'checked',\n                            initialValue: false,\n                        })(\n                            <Checkbox>Users can skip answering this question</Checkbox>\n                        )}\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Store responses?\"\n                        {...this.props.options.layout}>\n                        {getFieldDecorator('storeInDB', {\n                            valuePropName: 'checked',\n                            initialValue: blockOptions.alwaysStoreInDB,\n                        })(\n                            <Checkbox disabled={blockOptions.alwaysStoreInDB}>\n                                Users' responses should be recorded</Checkbox>\n                        )}\n                    </Form.Item>\n\n                </Form>\n\n\n                {/*ADDING ANSWER*/}\n                <Modal\n                    title=\"Add Answer\"\n                    width={700}\n                    destroyOnClose={true}\n                    visible={this.state.modalVisible}\n                    onOk={this.addAnswer}\n                    onCancel={this.hideAddAnswer}>\n\n                    <Form>\n                        <FormItem label=\"Answer\"\n                                  extra=\"This will be shown as answer in chatbot\"\n                                  {...this.props.options.layout}>\n                            {getFieldDecorator('answer', {\n                                rules: [{\n                                    required: true,\n                                    message: \"Please input answer field\",\n                                }],\n                            })(\n                                <Input placeholder=\"Ex: Yes I need it :)\"/>\n                            )}\n                        </FormItem>\n\n                        <FormItem label=\"Tags\" {...this.props.options.layout}>\n                            <div>\n                                {tags.map((tag) => {\n                                    const isLongTag = tag.length > 20;\n                                    const tagElem = (\n                                        <Tag key={tag} closable={true} afterClose={() => this.removeTag(tag)}>\n                                            {isLongTag ? `${tag.slice(0, 20)}...` : tag}\n                                        </Tag>\n                                    );\n                                    return isLongTag ? <Tooltip title={tag} key={tag}>{tagElem}</Tooltip> : tagElem;\n                                })}\n                                {inputVisible && (\n                                    <Input\n                                        ref={this.saveInputRef}\n                                        type=\"text\"\n                                        size=\"small\"\n                                        style={{width: 78}}\n                                        value={inputValue}\n                                        onChange={this.handleInputChange}\n                                        onBlur={this.handleInputConfirm}\n                                        onPressEnter={this.handleInputConfirm}\n                                    />\n                                )}\n                                {!inputVisible && (\n                                    <Tag\n                                        onClick={this.showInput}\n                                        style={{background: '#fff', borderStyle: 'dashed'}}>\n                                        <Icon type=\"plus\"/> New Tag\n                                    </Tag>\n                                )}\n                            </div>\n                        </FormItem>\n\n                        <FormItem label=\"Action\"{...this.props.options.layout}>{\n                            blockOptions.actions ?\n                                getFieldDecorator('action', {\n                                    rules: [{\n                                        required: true,\n                                        message: \"Please input action field\",\n                                    }],\n                                })(\n                                    <Select onSelect={this.onSelectAction}\n                                            placeholder=\"The next step after this block\">{\n                                        blockOptions.actions.map((action, i) =>\n                                            <Option key={i}\n                                                    value={action}>{action}</Option>)\n                                    }</Select>\n                                )\n                                : <Spin><Select placeholder=\"The next step after this block\"></Select></Spin>\n                        }</FormItem>\n\n                        {this.state.showGoToBlock ?\n                            (<FormItem label=\"Go To Specific Block\" {...this.props.options.layout}>\n                                {\n                                    getFieldDecorator('blockToGoID',\n                                        {\n                                            rules: [{required: true, message: \"Please select your next block\"}],\n                                        }\n                                    )(\n                                        <Select placeholder=\"The next step after this block\">{\n                                            blocks.map((block, i) =>\n                                                <Option key={i} value={block.id}>\n                                                    {`${block.id}- (${block.type}) ${block.content.text ? block.content.text : ''}`}\n                                                </Option>\n                                            )\n                                        }</Select>\n                                    )\n                                }\n                            </FormItem>)\n                            : null\n                        }\n\n                        {this.state.showGoToGroup ?\n                            (<FormItem label=\"Go To Specific Group\"\n                                       extra=\"The selected group will start from its first block\"\n                                       {...this.props.options.layout}>\n                                {\n                                    getFieldDecorator('blockToGoIDGroup',\n                                        {\n                                            rules: [{required: true, message: \"Please select your next group\"}]\n                                        }\n                                    )(\n                                        <Select placeholder=\"The next block after this block\">{\n                                            allGroups.map((group, i) => {\n                                                    if (group.blocks[0])\n                                                        return <Option key={i} value={group.blocks[0].id}>\n                                                            {`${group.name}`}\n                                                        </Option>;\n                                                    else\n                                                        return <Option disabled key={i} value={group.name}>\n                                                            {`${group.name}`}\n                                                        </Option>\n                                                }\n                                            )\n                                        }</Select>\n                                    )\n                                }\n                            </FormItem>)\n                            : null\n                        }\n\n                        <FormItem label=\"After message\"\n                                  extra=\"This message will display straight after the user's response\"\n                                  {...this.props.options.layout}>\n                            {getFieldDecorator('afterMessage', {\n                                rules: [{\n                                    required: true,\n                                    message: \"Please input after message field\",\n                                }],\n                            })(\n                                <Input placeholder=\"Ex: Your input is recorded\"/>\n                            )}\n                        </FormItem>\n                    </Form>\n\n                </Modal>\n            </Card>\n        );\n    }\n\n}\n\n\nexport default Form.create()(Question);\n\n","import React, {Component} from 'react';\nimport {Button, Card, Checkbox, Form, Input, Select, Spin} from \"antd\";\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nconst CheckboxGroup = Checkbox.Group;\n\nclass FileUpload extends Component {\n\n    state = {\n        showGoToBlock: false,\n        showGoToGroup: false,\n        fileTypes: []\n    };\n\n    onSubmit = () => {\n        return this.props.form.validateFields((err, values) => {\n            if (!err) {\n                this.props.handleNewBlock({\n                    block: {\n                        type: 'File Upload',\n                        groupID: this.props.options.currentGroup.id,\n                        storeInDB: values.storeInDB,\n                        isSkippable: values.isSkippable,\n                        labels: '',\n                        content: {\n                            text: values.text,\n                            action: values.action,\n                            fileTypes: this.state.fileTypes,\n                            blockToGoID: values.blockToGoID || values.blockToGoIDGroup || null,\n                            afterMessage: values.afterMessage\n                        }\n                    }\n                })\n            }\n        })\n    };\n\n    onCancel = () => this.props.handleNewBlock(false);\n\n    onSelectAction = (action) => {\n        if (action === \"Go To Specific Block\")\n            this.setState({showGoToBlock: true, showGoToGroup: false});\n        else if (action === \"Go To Group\")\n            this.setState({showGoToBlock: false, showGoToGroup: true});\n        else\n            this.setState({showGoToBlock: false, showGoToGroup: false});\n    };\n\n    onChange = (checkedValues) => this.setState({fileTypes: checkedValues});\n\n    render() {\n        const {blockTypes, blocks, allGroups} = this.props.options;\n        let blockOptions = {};\n        // extract the correct blockType from blockTypes[]\n\n        for (const blockType of blockTypes)\n            if (blockType.name === \"File Upload\")\n                blockOptions = blockType;\n        const {getFieldDecorator} = this.props.form;\n\n        const typesAllowed = blockOptions.typesAllowed;\n        return (\n            <Card style={{width: '100%'}}\n                  actions={[\n                      <Button key=\"cancel\" onClick={this.onCancel}>Cancel</Button>,\n                      <Button key=\"submit\" type=\"primary\" onClick={this.onSubmit}>Add</Button>]}>\n                <Form layout='horizontal'>\n                    <FormItem label=\"Question\"\n                              extra=\"The above text will be shown in a bubble inside the chat\"\n                              {...this.props.options.layout}>\n                        {getFieldDecorator('text', {\n                            rules: [{\n                                required: true,\n                                message: \"Please input question field\",\n                            }],\n                        })(\n                            <Input placeholder=\"Ex: Please upload you cv\"/>\n                        )}\n                    </FormItem>\n\n                    <FormItem label=\"File Types\"\n                              {...this.props.options.layout}>\n                        {\n                            blockOptions.typesAllowed ?\n                                getFieldDecorator('fileTypes', {\n                                    rules: [{\n                                        required: true,\n                                        message: \"Please select the accepted file type\",\n                                    }]\n                                })(\n                                    <CheckboxGroup options={typesAllowed} onChange={this.onChange}/>\n                                )\n                                : <Spin/>\n                        }\n                    </FormItem>\n\n                    <FormItem label=\"Action\"{...this.props.options.layout}>\n                        {\n                            blockOptions.actions ?\n                                getFieldDecorator('action', {\n                                    rules: [{\n                                        required: true,\n                                        message: \"Please input question field\",\n                                    }],\n                                })(\n                                    <Select onSelect={this.onSelectAction}\n                                            placeholder=\"The next step after this block\">{\n                                        blockOptions.actions.map((action, i) =>\n                                            <Option key={i}\n                                                    value={action}>{action}</Option>)\n                                    }</Select>\n                                )\n                                : <Spin><Select placeholder=\"The next step after this block\"></Select></Spin>\n                        }\n                    </FormItem>\n\n                    {this.state.showGoToBlock ?\n                        (<FormItem label=\"Go To Specific Block\" {...this.props.options.layout}>\n                            {\n                                getFieldDecorator('blockToGoID',\n                                    {\n                                        rules: [{required: true, message: \"Please select your next block\"}]\n\n                                    }\n                                )(\n                                    <Select placeholder=\"The next step after this block\">{\n                                        blocks.map((block, i) =>\n                                            <Option key={i} value={block.id}>\n                                                {`${block.id}- (${block.type}) ${block.content.text ? block.content.text : ''}`}\n                                            </Option>\n                                        )\n                                    }</Select>\n                                )\n                            }\n                        </FormItem>)\n                        : null\n                    }\n\n                    {this.state.showGoToGroup ?\n                        (<FormItem label=\"Go To Specific Group\"\n                                   extra=\"The selected group will start from its first block\"\n                                   {...this.props.options.layout}>\n                            {\n                                getFieldDecorator('blockToGoIDGroup',\n                                    {\n                                        rules: [{required: true, message: \"Please select your next group\"}]\n                                    }\n                                )(\n                                    <Select placeholder=\"The next block after this block\">{\n                                        allGroups.map((group, i) => {\n                                                if (group.blocks[0])\n                                                    return <Option key={i} value={group.blocks[0].id}>\n                                                        {`${group.name}`}\n                                                    </Option>;\n                                                else\n                                                    return <Option disabled key={i} value={group.name}>\n                                                        {`${group.name}`}\n                                                    </Option>\n                                            }\n                                        )\n                                    }</Select>\n                                )\n                            }\n                        </FormItem>)\n                        : null\n                    }\n\n\n                    <FormItem label=\"After message\"\n                              extra=\"This message will display straight after the user's response\"\n                              {...this.props.options.layout}>\n                        {getFieldDecorator('afterMessage', {\n                            rules: [{\n                                required: true,\n                                message: \"Please input question field\",\n                            }],\n                        })(\n                            <Input placeholder=\"Ex: Your input is recorded\"/>\n                        )}\n                    </FormItem>\n\n                    <Form.Item\n                        label=\"Skippable?\"\n                        {...this.props.options.layout}>\n                        {getFieldDecorator('isSkippable', {\n                            valuePropName: 'checked',\n                            initialValue: false,\n                        })(\n                            <Checkbox>Users can skip answering this question</Checkbox>\n                        )}\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Store responses?\"\n                        {...this.props.options.layout}>\n                        {getFieldDecorator('storeInDB', {\n                            valuePropName: 'checked',\n                            initialValue: blockOptions.alwaysStoreInDB,\n                        })(\n                            <Checkbox disabled={blockOptions.alwaysStoreInDB}>\n                                Users' responses should be recorded</Checkbox>\n                        )}\n                    </Form.Item>\n\n                </Form>\n            </Card>\n        );\n    }\n}\n\nexport default Form.create()(FileUpload);\n\n","import React, {Component} from 'react';\nimport {Button, Card, Checkbox, Form, Input, Select, Spin} from \"antd\";\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nclass Solutions extends Component {\n\n    state = {\n        showGoToBlock: false,\n        showGoToGroup: false\n    };\n\n    onSubmit = () => {\n        return this.props.form.validateFields((err, values) => {\n            // If from is valid crete the new block following User Input block type format\n            if (!err) {\n                const newBlock = {\n                    block: {\n                        type: 'Solutions',\n                        groupID: this.props.options.currentGroup.id,\n                        storeInDB: values.storeInDB,\n                        isSkippable: values.isSkippable,\n                        labels: '',\n                        content: {\n                            showTop: Number(values.showTop),\n                            action: values.action,\n                            blockToGoID: values.blockToGoID || values.blockToGoIDGroup || null,\n                            afterMessage: values.afterMessage,\n                        }\n                    }\n                };\n                this.props.handleNewBlock(newBlock)\n            }\n        })\n    };\n\n    onCancel = () => this.props.handleNewBlock(false);\n\n    onSelectAction = (action) => {\n        if (action === \"Go To Specific Block\")\n            this.setState({showGoToBlock: true, showGoToGroup: false});\n        else if (action === \"Go To Group\")\n            this.setState({showGoToBlock: false, showGoToGroup: true});\n        else\n            this.setState({showGoToBlock: false, showGoToGroup: false});\n    };\n\n    render() {\n        const {blockTypes, blocks, allGroups} = this.props.options;\n        let blockOptions = {};\n        // extract the correct blockType from blockTypes[]\n        for (const blockType of blockTypes)\n            if (blockType.name === 'User Input')\n                blockOptions = blockType;\n\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <Card style={{width: '100%'}}\n                  actions={[\n                      <Button key=\"cancel\" onClick={this.onCancel}>Cancel</Button>,\n                      <Button key=\"submit\" type=\"primary\" onClick={this.onSubmit}>Add</Button>]}\n            >\n                <Form layout='horizontal'>\n                    <FormItem label=\"Show Top Results\"\n                              extra=\"Number of results you want to return\"\n                              {...this.props.options.layout}>\n                        {getFieldDecorator('showTop', {\n                            rules: [{\n                                required: true,\n                                message: \"Please show top field\",\n                            }],\n                        })(\n                            <Input min=\"1\" type=\"number\" placeholder=\"Ex: Where are you from?\"/>\n                        )}\n                    </FormItem>\n\n\n                    <FormItem label=\"Action\"\n                              {...this.props.options.layout}>\n                        {\n                            blockOptions.actions ?\n                                getFieldDecorator('action', {\n                                    rules: [{\n                                        required: true,\n                                        message: \"Please input question field\",\n                                    }],\n                                })(\n                                    <Select onSelect={this.onSelectAction}\n                                            placeholder=\"The next step after this block\">{\n                                        blockOptions.actions.map((action, i) =>\n                                            <Option key={i}\n                                                    value={action}>{action}</Option>)\n                                    }</Select>\n                                )\n                                : <Spin><Select placeholder=\"The next step after this block\"></Select></Spin>\n                        }\n                    </FormItem>\n\n                    {this.state.showGoToBlock ?\n                        (<FormItem label=\"Go To Specific Block\" {...this.props.options.layout}>\n                            {\n                                getFieldDecorator('blockToGoID',\n                                    {\n                                        rules: [{required: true, message: \"Please select your next block\"}]\n\n                                    }\n                                )(\n                                    <Select placeholder=\"The next step after this block\">{\n                                        blocks.map((block, i) =>\n                                            <Option key={i} value={block.id}>\n                                                {`${block.id}- (${block.type}) ${block.content.text ? block.content.text : ''}`}\n                                            </Option>\n                                        )\n                                    }</Select>\n                                )\n                            }\n                        </FormItem>)\n                        : null\n                    }\n\n                    {this.state.showGoToGroup ?\n                        (<FormItem label=\"Go To Specific Group\"\n                                   extra=\"The selected group will start from its first block\"\n                                   {...this.props.options.layout}>\n                            {\n                                getFieldDecorator('blockToGoIDGroup',\n                                    {\n                                        rules: [{required: true, message: \"Please select your next group\"}]\n                                    }\n                                )(\n                                    <Select placeholder=\"The next block after this block\">{\n                                        allGroups.map((group, i) => {\n                                                if (group.blocks[0])\n                                                    return <Option key={i} value={group.blocks[0].id}>\n                                                        {`${group.name}`}\n                                                    </Option>;\n                                                else\n                                                    return <Option disabled key={i} value={group.name}>\n                                                        {`${group.name}`}\n                                                    </Option>\n                                            }\n                                        )\n                                    }</Select>\n                                )\n                            }\n                        </FormItem>)\n                        : null\n                    }\n\n                    <FormItem label=\"After message\"\n                              extra=\"This message will display straight after the user's response\"\n                              {...this.props.options.layout}>\n                        {getFieldDecorator('afterMessage', {\n                            rules: [{\n                                required: true,\n                                message: \"Please input after message field\",\n                            }],\n                        })(\n                            <Input placeholder=\"Ex: There you go :)\"/>\n                        )}\n                    </FormItem>\n\n\n                    <Form.Item\n                        label=\"Skippable?\"\n                        {...this.props.options.layout}>\n                        {getFieldDecorator('isSkippable', {\n                            valuePropName: 'checked',\n                            initialValue: false,\n                        })(\n                            <Checkbox>Users can skip answering this question</Checkbox>\n                        )}\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Store responses?\"\n                        {...this.props.options.layout}>\n                        {getFieldDecorator('storeInDB', {\n                            valuePropName: 'checked',\n                            initialValue: blockOptions.alwaysStoreInDB,\n                        })(\n                            <Checkbox disabled={blockOptions.alwaysStoreInDB}>\n                                Users' responses should be recorded</Checkbox>\n                        )}\n                    </Form.Item>\n\n                </Form>\n            </Card>\n        );\n    }\n}\n\nexport default Form.create()(Solutions);\n\n","import React, {Component} from 'react';\n\nimport {http} from \"../../../../../../../helpers\";\n\nimport {Icon, Modal, Tabs} from 'antd';\n\nimport UserInput from \"./Cards/UserInput\";\nimport Question from \"./Cards/Question\";\nimport FileUpload from \"./Cards/FileUpload\";\nimport Solutions from \"./Cards/Solutions\";\n\nconst TabPane = Tabs.TabPane;\n\nclass NewBlockModal extends Component {\n\n    state = {\n        layout: {\n            labelCol: {span: 6},\n            wrapperCol: {span: 14}\n        },\n        blockTypes: [],\n        blocks: [],\n        allGroups: [],\n        currentGroup: null\n    };\n\n    componentDidMount() {\n        http.get(`/assistant/flow/options`)\n            .then(res => this.setState({blockTypes: res.data.data.blockTypes}))\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            blocks: nextProps.blocks,\n            allGroups: nextProps.allGroups,\n            currentGroup: nextProps.currentGroup,\n        })\n    }\n\n    handleNewBlock = (newBlock) => {\n        if (newBlock)\n            this.props.handleAddBlock(newBlock);\n        this.props.closeModal();\n    };\n\n\n    onChangeTab = (currentTab) => this.setState({currentTab});\n\n    render() {\n        return (\n            <Modal width={800}\n                   title=\"Add New Block\"\n                   visible={this.props.visible}\n                   onCancel={this.props.closeModal}\n                   destroyOnClose={true}\n                   footer={null}>\n\n                <Tabs type=\"card\" onChange={this.onChangeTab}>\n                    <TabPane tab={<span><Icon type=\"form\"/>User Input</span>}\n                             key=\"UserInput\">\n                        <UserInput options={this.state}\n                                   handleNewBlock={this.handleNewBlock}/>\n                    </TabPane>\n\n                    <TabPane tab={<span><Icon type=\"question-circle\"/>Question</span>}\n                             key=\"Question\">\n                        <Question options={this.state}\n                                  handleNewBlock={this.handleNewBlock}/>\n                    </TabPane>\n\n                    <TabPane tab={<span><Icon type=\"file-add\"/>File Upload</span>}\n                             key=\"FileUpload\">\n                        <FileUpload options={this.state}\n                                    handleNewBlock={this.handleNewBlock}/>\n                    </TabPane>\n\n                    <TabPane tab={<span><Icon type=\"tag\"/>Solutions</span>}\n                             key=\"Solutions\">\n                        <Solutions options={this.state}\n                                   handleNewBlock={this.handleNewBlock}/>\n                    </TabPane>\n\n                </Tabs>\n            </Modal>\n        );\n    }\n}\n\n\nexport default NewBlockModal\n","import React, {Component} from 'react';\nimport {Button, Card, Checkbox, Form, Input, Select, Spin} from \"antd\";\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nclass UserInput extends Component {\n\n    state = {\n        showGoToBlock: false,\n        showGoToGroup: false,\n        groupName: ''\n    };\n\n    onSubmit = () => {\n        return this.props.form.validateFields((err, values) => {\n            if (!err)\n                this.props.handleEditBlock({\n                    type: 'User Input',\n                    groupID: this.props.options.currentGroup.id,\n                    id: this.props.options.block.id,\n                    order: this.props.options.block.order,\n                    isSkippable: values.isSkippable,\n                    labels: '',\n                    storeInDB: values.storeInDB,\n                    content: {\n                        text: values.text,\n                        blockToGoID: values.blockToGoID || values.blockToGoIDGroup || null,\n                        validation: values.validation,\n                        action: values.action,\n                        afterMessage: values.afterMessage,\n                    }\n                })\n        })\n    };\n\n    onCancel = () => this.props.handleEditBlock(false);\n\n    onSelectAction = (action) => {\n        if (action === \"Go To Specific Block\")\n            this.setState({showGoToBlock: true, showGoToGroup: false});\n        else if (action === \"Go To Group\")\n            this.setState({showGoToBlock: false, showGoToGroup: true});\n        else\n            this.setState({showGoToBlock: false, showGoToGroup: false});\n    };\n\n    componentDidMount() {\n        const {block, allGroups} = this.props.options;\n\n        if (block.content.action === \"Go To Specific Block\")\n            this.setState({showGoToBlock: true, showGoToGroup: false});\n        else if (block.content.action === \"Go To Group\") {\n            // because here we dont' have column in each block contains all the group\n            // this is a workaround to have the group name from the block id\n            this.setState({showGoToBlock: false, showGoToGroup: true});\n            const {blockToGoID} = block.content;\n            allGroups.map((group) => group.blocks[0].id === blockToGoID ? this.setState({groupName: group.name}) : null)\n        }\n        else\n            this.setState({showGoToBlock: false, showGoToGroup: false});\n    }\n\n\n    render() {\n        const {block, blockTypes, allBlocks, allGroups} = this.props.options;\n        let blockOptions = {};\n        // extract the correct blockType from blockTypes[]\n        for (const blockType of blockTypes)\n            if (blockType.name === 'User Input')\n                blockOptions = blockType;\n\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <Card style={{width: '100%'}}\n                  actions={[\n                      <Button key=\"delete\" type=\"danger\" onClick={() => console.log('needs to be implement')}>\n                          Delete\n                      </Button>,\n                      <Button key=\"cancel\" onClick={() => this.props.handleEditBlock(false)}>Cancel</Button>,\n                      <Button key=\"submit\" type=\"primary\" onClick={this.onSubmit}>\n                          Update\n                      </Button>]}\n            >\n                <Form layout='horizontal'>\n                    <FormItem label=\"Question\"\n                              extra=\"The above text will be shown in a bubble inside the chat\"\n                              {...this.props.options.layout}>\n                        {getFieldDecorator('text', {\n                            initialValue: block.content.text,\n                            rules: [{\n                                required: true,\n                                message: \"Please input question field\",\n                            }],\n                        })(\n                            <Input placeholder=\"Ex: Where are you from?\"/>\n                        )}\n                    </FormItem>\n\n                    <FormItem label=\"Validation\"\n                              {...this.props.options.layout}>\n                        {\n                            blockOptions.validations ?\n                                getFieldDecorator('validation', {\n                                    initialValue: block.content.validation,\n                                    rules: [{\n                                        required: true,\n                                        message: \"Please field validation\",\n                                    }]\n                                })(\n                                    <Select placeholder=\"Will validate the input\">{\n                                        blockOptions.validations.map((validation, i) =>\n                                            <Option key={i} value={validation}>{validation}</Option>)\n                                    }</Select>\n                                )\n                                : <Spin><Select placeholder=\"Will validate the input\"></Select></Spin>\n                        }\n                    </FormItem>\n\n                    <FormItem label=\"Action\"\n                              {...this.props.options.layout}>\n                        {\n                            blockOptions.actions ?\n                                getFieldDecorator('action', {\n                                    initialValue: block.content.action,\n                                    rules: [{\n                                        required: true,\n                                        message: \"Please input question field\",\n                                    }],\n                                })(\n                                    <Select onSelect={this.onSelectAction}\n                                            placeholder=\"The next step after this block\">{\n                                        blockOptions.actions.map((action, i) =>\n                                            <Option key={i}\n                                                    value={action}>{action}</Option>)\n                                    }</Select>\n                                )\n                                : <Spin><Select placeholder=\"The next step after this block\"></Select></Spin>\n                        }\n                    </FormItem>\n\n                    {this.state.showGoToBlock ?\n                        (<FormItem label=\"Go To Specific Block\" {...this.props.options.layout}>\n                            {\n                                getFieldDecorator('blockToGoID',\n                                    {\n                                        initialValue: block.content.blockToGoID,\n                                        rules: [{required: true, message: \"Please select your next block\"}]\n\n                                    }\n                                )(\n                                    <Select placeholder=\"The next step after this block\">{\n                                        allBlocks.map((block, i) =>\n                                            <Option key={i} value={block.id}>\n                                                {`${block.id}- (${block.type}) ${block.content.text ? block.content.text : ''}`}\n                                            </Option>\n                                        )\n                                    }</Select>\n                                )\n                            }\n                        </FormItem>)\n                        : null\n                    }\n\n                    {this.state.showGoToGroup ?\n                        (<FormItem label=\"Go To Specific Group\"\n                                   extra=\"The selected group will start from its first block\"\n                                   {...this.props.options.layout}>\n                            {\n                                getFieldDecorator('blockToGoIDGroup',\n                                    {\n                                        initialValue: this.state.groupName,\n                                        rules: [{required: true, message: \"Please select your next group\"}]\n                                    }\n                                )(\n                                    <Select placeholder=\"The next block after this block\">{\n                                        allGroups.map((group, i) => {\n                                                if (group.blocks[0])\n                                                    return <Option key={i} value={group.blocks[0].id}>\n                                                        {`${group.name}`}\n                                                    </Option>;\n                                                else\n                                                    return <Option disabled key={i} value={group.name}>\n                                                        {`${group.name}`}\n                                                    </Option>\n                                            }\n                                        )\n                                    }</Select>\n                                )\n                            }\n                        </FormItem>)\n                        : null\n                    }\n\n\n                    <FormItem label=\"After message\"\n                              extra=\"This message will display straight after the user's response\"\n                              {...this.props.options.layout}>\n                        {getFieldDecorator('afterMessage', {\n                            initialValue: block.content.afterMessage,\n                            rules: [{\n                                required: true,\n                                message: \"Please input after message field\",\n                            }],\n                        })(\n                            <Input placeholder=\"Ex: Your input is recorded\"/>\n                        )}\n                    </FormItem>\n\n                    <Form.Item\n                        label=\"Skippable?\"\n                        {...this.props.options.layout}>\n                        {getFieldDecorator('isSkippable', {\n                            valuePropName: 'checked',\n                            initialValue: block.isSkippable,\n                        })(\n                            <Checkbox>Users can skip answering this question</Checkbox>\n                        )}\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Store responses?\"\n                        {...this.props.options.layout}>\n                        {getFieldDecorator('storeInDB', {\n                            valuePropName: 'checked',\n                            initialValue: blockOptions.alwaysStoreInDB,\n                        })(\n                            <Checkbox disabled={blockOptions.alwaysStoreInDB}>\n                                Users' responses should be recorded</Checkbox>\n                        )}\n                    </Form.Item>\n\n                </Form>\n            </Card>\n        );\n    }\n}\n\nexport default Form.create()(UserInput);\n\n","import React, {Component} from 'react';\nimport {Button, Card, Checkbox, Form, Icon, Input, Modal, Select, Spin, Tag, Tooltip} from \"antd\";\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nclass Question extends Component {\n\n    state = {\n        showGoToBlock: false,\n        showGoToGroup: false,\n        modalVisible: false,\n\n        tags: [],\n        inputVisible: false,\n        inputValue: '',\n        answers: [],\n\n        groupName: ''\n    };\n\n    componentDidMount() {\n        this.setState({answers: this.props.options.block.content.answers});\n\n        const {block, allGroups} = this.props.options;\n\n        if (block.content.action === \"Go To Specific Block\")\n            this.setState({showGoToBlock: true, showGoToGroup: false});\n        else if (block.content.action === \"Go To Group\") {\n            // because here we dont' have column in each block contains all the group\n            // this is a workaround to have the group name from the block id\n            this.setState({showGoToBlock: false, showGoToGroup: true});\n            const {blockToGoID} = block.content;\n            allGroups.map((group) => group.blocks[0].id === blockToGoID ? this.setState({groupName: group.name}) : null)\n        }\n        else\n            this.setState({showGoToBlock: false, showGoToGroup: false});\n    }\n\n    onSelectAction = (action) => {\n        if (action === \"Go To Specific Block\")\n            this.setState({showGoToBlock: true, showGoToGroup: false});\n        else if (action === \"Go To Group\")\n            this.setState({showGoToBlock: false, showGoToGroup: true});\n        else\n            this.setState({showGoToBlock: false, showGoToGroup: false});\n    };\n\n    onSubmit = () => {\n        return this.props.form.validateFields(['text', 'isSkippable', 'storeInDB'], (err, values) => {\n\n            // If from is valid crete the new block following User Input block type format\n            if (!err) {\n                this.props.handleEditBlock({\n                    type: 'Question',\n                    groupID: this.props.options.currentGroup.id,\n                    id: this.props.options.block.id,\n                    order: this.props.options.block.order,\n                    storeInDB: values.storeInDB,\n                    isSkippable: values.isSkippable,\n                    labels: '',\n                    content: {\n                        text: values.text,\n                        answers: this.state.answers\n                    }\n                })\n            }\n        })\n    };\n\n    onCancel = () => this.props.handleNewBlock(false);\n\n\n    addAnswer = () => {\n        this.props.form.validateFields(['answer', 'action', 'blockToGoID', 'blockToGoIDGroup', 'afterMessage'], (err, values) => {\n            if (!err) {\n                const answer = {\n                    text: values.answer,\n                    keywords: this.state.tags,\n                    blockToGoID: values.blockToGoID || values.blockToGoIDGroup || null,\n                    action: values.action,\n                    afterMessage: values.afterMessage\n                };\n                this.setState({tags: []});\n                // I feel there is a bug\n                const answers = this.state.answers;\n                answers.push(answer);\n                this.setState({answers});\n                this.hideAddAnswer();\n                console.log(this.state.answers)\n            }\n        })\n\n    };\n\n    showAddAnswer = () => this.setState({modalVisible: true});\n    hideAddAnswer = () => this.setState({modalVisible: false});\n    removeAnswer = () => {\n        console.log(\"TODO\")\n    };\n\n// Tags component's functions\n    removeTag = (removedTag) => this.setState({tags: this.state.tags.filter(tag => tag !== removedTag)});\n    showInput = () => this.setState({inputVisible: true}, () => this.input.focus());\n    handleInputChange = e => this.setState({inputValue: e.target.value});\n    saveInputRef = input => this.input = input;\n    handleInputConfirm = () => {\n        const inputValue = this.state.inputValue;\n        let tags = this.state.tags;\n        if (inputValue && tags.indexOf(inputValue) === -1)\n            tags = [...tags, inputValue];\n        this.setState({tags, inputVisible: false, inputValue: '',});\n    };\n\n// END Tags component's functions\n\n\n    render() {\n        const {block, blockTypes, allBlocks, allGroups} = this.props.options;\n        let blockOptions = {};\n        // extract the correct blockType from blockTypes[]\n        for (const blockType of blockTypes)\n            if (blockType.name === 'Question')\n                blockOptions = blockType;\n\n        const {getFieldDecorator} = this.props.form;\n\n        const {tags, inputVisible, inputValue} = this.state;\n\n        return (\n            <Card style={{width: '100%'}}\n                  actions={[\n                      <Button key=\"delete\" type=\"danger\" onClick={() => console.log('needs to be implement')}>\n                          Delete\n                      </Button>,\n                      <Button key=\"cancel\" onClick={() => this.props.handleEditBlock(false)}>Cancel</Button>,\n                      <Button key=\"submit\" type=\"primary\" onClick={this.onSubmit}>\n                          Update\n                      </Button>]}\n            >\n                <Form layout='horizontal'>\n                    <FormItem label=\"Question\"\n                              extra=\"The above text will be shown in a bubble inside the chat\"\n                              {...this.props.options.layout}>\n                        {getFieldDecorator('text', {\n                            initialValue: block.content.text,\n                            rules: [{\n                                required: true,\n                                message: \"Please input question field\",\n                            }],\n                        })(\n                            <Input placeholder=\"Ex: Where are you from?\"/>\n                        )}\n                    </FormItem>\n\n                    <FormItem label=\"Answers\"\n                              {...this.props.options.layout}>\n                        <Button onClick={this.showAddAnswer}\n                                type=\"primary\" icon=\"plus\" shape=\"circle\" size={\"small\"}></Button>\n                        {\n                            this.state.answers.map((answer, i) => (\n                                <Card title={answer.text}\n                                      key={i}\n                                      extra={<Button onClick={this.removeAnswer}\n                                                     type=\"danger\" icon=\"delete\" shape=\"circle\"\n                                                     size={\"small\"}></Button>}\n                                      style={{width: 200, margin: 10}}>\n                                    <p>Action: {answer.action}</p>\n                                    Tags: <br/>\n                                    {answer.keywords.map((keyword, i) => <Tag key={i}>{keyword}</Tag>)}\n\n                                </Card>\n                            ))\n                        }\n                    </FormItem>\n\n                    <Form.Item\n                        label=\"Skippable?\"\n                        {...this.props.options.layout}>\n                        {getFieldDecorator('isSkippable', {\n                            valuePropName: 'checked',\n                            initialValue: block.isSkippable,\n                        })(\n                            <Checkbox>Users can skip answering this question</Checkbox>\n                        )}\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Store responses?\"\n                        {...this.props.options.layout}>\n                        {getFieldDecorator('storeInDB', {\n                            valuePropName: 'checked',\n                            initialValue: blockOptions.alwaysStoreInDB,\n                        })(\n                            <Checkbox disabled={blockOptions.alwaysStoreInDB}>\n                                Users' responses should be recorded</Checkbox>\n                        )}\n                    </Form.Item>\n\n                </Form>\n\n\n                {/*ADDING ANSWER*/}\n                <Modal\n                    title=\"Add Answer\"\n                    width={700}\n                    destroyOnClose={true}\n                    visible={this.state.modalVisible}\n                    onOk={this.addAnswer}\n                    onCancel={this.hideAddAnswer}>\n\n                    <Form>\n                        <FormItem label=\"Answer\"\n                                  extra=\"This will be shown as answer in chatbot\"\n                                  {...this.props.options.layout}>\n                            {getFieldDecorator('answer', {\n                                rules: [{\n                                    required: true,\n                                    message: \"Please input answer field\",\n                                }],\n                            })(\n                                <Input placeholder=\"Ex: Yes I need it :)\"/>\n                            )}\n                        </FormItem>\n\n                        <FormItem label=\"Tags\" {...this.props.options.layout}>\n                            <div>\n                                {tags.map((tag) => {\n                                    const isLongTag = tag.length > 20;\n                                    const tagElem = (\n                                        <Tag key={tag} closable={true} afterClose={() => this.removeTag(tag)}>\n                                            {isLongTag ? `${tag.slice(0, 20)}...` : tag}\n                                        </Tag>\n                                    );\n                                    return isLongTag ? <Tooltip title={tag} key={tag}>{tagElem}</Tooltip> : tagElem;\n                                })}\n                                {inputVisible && (\n                                    <Input\n                                        ref={this.saveInputRef}\n                                        type=\"text\"\n                                        size=\"small\"\n                                        style={{width: 78}}\n                                        value={inputValue}\n                                        onChange={this.handleInputChange}\n                                        onBlur={this.handleInputConfirm}\n                                        onPressEnter={this.handleInputConfirm}\n                                    />\n                                )}\n                                {!inputVisible && (\n                                    <Tag\n                                        onClick={this.showInput}\n                                        style={{background: '#fff', borderStyle: 'dashed'}}>\n                                        <Icon type=\"plus\"/> New Tag\n                                    </Tag>\n                                )}\n                            </div>\n                        </FormItem>\n\n                        <FormItem label=\"Action\"{...this.props.options.layout}>{\n                            blockOptions.actions ?\n                                getFieldDecorator('action', {\n                                    rules: [{\n                                        required: true,\n                                        message: \"Please input action field\",\n                                    }],\n                                })(\n                                    <Select onSelect={this.onSelectAction}\n                                            placeholder=\"The next step after this block\">{\n                                        blockOptions.actions.map((action, i) =>\n                                            <Option key={i}\n                                                    value={action}>{action}</Option>)\n                                    }</Select>\n                                )\n                                : <Spin><Select placeholder=\"The next step after this block\"></Select></Spin>\n                        }</FormItem>\n\n                        {this.state.showGoToBlock ?\n                            (<FormItem label=\"Go To Specific Block\" {...this.props.options.layout}>\n                                {\n                                    getFieldDecorator('blockToGoID',\n                                        {\n                                            rules: [{required: true, message: \"Please select your next block\"}],\n                                        }\n                                    )(\n                                        <Select placeholder=\"The next step after this block\">{\n                                            allBlocks.map((block, i) =>\n                                                <Option key={i} value={block.id}>\n                                                    {`${block.id}- (${block.type}) ${block.content.text ? block.content.text : ''}`}\n                                                </Option>\n                                            )\n                                        }</Select>\n                                    )\n                                }\n                            </FormItem>)\n                            : null\n                        }\n\n                        {this.state.showGoToGroup ?\n                            (<FormItem label=\"Go To Specific Group\"\n                                       extra=\"The selected group will start from its first block\"\n                                       {...this.props.options.layout}>\n                                {\n                                    getFieldDecorator('blockToGoIDGroup',\n                                        {\n                                            rules: [{required: true, message: \"Please select your next group\"}]\n                                        }\n                                    )(\n                                        <Select placeholder=\"The next block after this block\">{\n                                            allGroups.map((group, i) => {\n                                                    if (group.blocks[0])\n                                                        return <Option key={i} value={group.blocks[0].id}>\n                                                            {`${group.name}`}\n                                                        </Option>;\n                                                    else\n                                                        return <Option disabled key={i} value={group.name}>\n                                                            {`${group.name}`}\n                                                        </Option>\n                                                }\n                                            )\n                                        }</Select>\n                                    )\n                                }\n                            </FormItem>)\n                            : null\n                        }\n\n                        <FormItem label=\"After message\"\n                                  extra=\"This message will display straight after the user's response\"\n                                  {...this.props.options.layout}>\n                            {getFieldDecorator('afterMessage', {\n                                rules: [{\n                                    required: true,\n                                    message: \"Please input after message field\",\n                                }],\n                            })(\n                                <Input placeholder=\"Ex: Your input is recorded\"/>\n                            )}\n                        </FormItem>\n                    </Form>\n\n                </Modal>\n            </Card>\n        );\n    }\n\n}\n\n\nexport default Form.create()(Question);\n\n","import React, {Component} from 'react';\nimport {Button, Card, Checkbox, Form, Input, Select, Spin} from \"antd\";\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nconst CheckboxGroup = Checkbox.Group;\n\nclass FileUpload extends Component {\n\n    state = {\n        showGoToBlock: false,\n        showGoToGroup: false,\n        fileTypes: [],\n        groupName: ''\n    };\n\n    onSubmit = () => {\n        return this.props.form.validateFields((err, values) => {\n            if (!err) {\n                this.props.handleEditBlock({\n                    type: 'File Upload',\n                    groupID: this.props.options.currentGroup.id,\n                    id: this.props.options.block.id,\n                    order: this.props.options.block.order,\n                    storeInDB: values.storeInDB,\n                    isSkippable: values.isSkippable,\n                    labels: '',\n                    content: {\n                        text: values.text,\n                        action: values.action,\n                        fileTypes: this.state.fileTypes,\n                        blockToGoID: values.blockToGoID || values.blockToGoIDGroup || null,\n                        afterMessage: values.afterMessage\n                    }\n                })\n            }\n        })\n    };\n\n    onCancel = () => this.props.handleEditBlock(false);\n\n    onSelectAction = (action) => {\n        if (action === \"Go To Specific Block\")\n            this.setState({showGoToBlock: true, showGoToGroup: false});\n        else if (action === \"Go To Group\")\n            this.setState({showGoToBlock: false, showGoToGroup: true});\n        else\n            this.setState({showGoToBlock: false, showGoToGroup: false});\n    };\n\n    componentDidMount() {\n        const {block, allGroups} = this.props.options;\n\n        if (block.content.action === \"Go To Specific Block\")\n            this.setState({showGoToBlock: true, showGoToGroup: false});\n        else if (block.content.action === \"Go To Group\") {\n            // because here we dont' have column in each block contains all the group\n            // this is a workaround to have the group name from the block id\n            this.setState({showGoToBlock: false, showGoToGroup: true});\n            const {blockToGoID} = block.content;\n            allGroups.map((group) => group.blocks[0].id === blockToGoID ? this.setState({groupName: group.name}) : null)\n        }\n        else\n            this.setState({showGoToBlock: false, showGoToGroup: false});\n    }\n\n    onChange = (checkedValues) => this.setState({fileTypes: checkedValues});\n\n    render() {\n        const {block, blockTypes, allBlocks, allGroups} = this.props.options;\n        let blockOptions = {};\n        // extract the correct blockType from blockTypes[]\n\n        for (const blockType of blockTypes)\n            if (blockType.name === \"File Upload\")\n                blockOptions = blockType;\n        const {getFieldDecorator} = this.props.form;\n\n        const typesAllowed = blockOptions.typesAllowed;\n        return (\n            <Card style={{width: '100%'}}\n                  actions={[\n                      <Button key=\"delete\" type=\"danger\" onClick={() => console.log('needs to be implement')}>\n                          Delete\n                      </Button>,\n                      <Button key=\"cancel\" onClick={() => this.props.handleEditBlock(false)}>Cancel</Button>,\n                      <Button key=\"submit\" type=\"primary\" onClick={this.onSubmit}>\n                          Update\n                      </Button>]}\n            >\n                <Form layout='horizontal'>\n                    <FormItem label=\"Question\"\n                              extra=\"The above text will be shown in a bubble inside the chat\"\n                              {...this.props.options.layout}>\n                        {getFieldDecorator('text', {\n                            initialValue: block.content.text,\n                            rules: [{\n                                required: true,\n                                message: \"Please input question field\",\n                            }],\n                        })(\n                            <Input placeholder=\"Ex: Please upload you cv\"/>\n                        )}\n                    </FormItem>\n\n                    <FormItem label=\"File Types\"\n                              {...this.props.options.layout}>\n                        {\n                            blockOptions.typesAllowed ?\n                                getFieldDecorator('fileTypes', {\n                                    initialValue: block.content.fileTypes,\n                                    rules: [{\n                                        required: true,\n                                        message: \"Please select the accepted file type\",\n                                    }]\n                                })(\n                                    <CheckboxGroup options={typesAllowed} onChange={this.onChange}/>\n                                )\n                                : <Spin/>\n                        }\n                    </FormItem>\n\n                    <FormItem label=\"Action\"{...this.props.options.layout}>\n                        {\n                            blockOptions.actions ?\n                                getFieldDecorator('action', {\n                                    initialValue: block.content.action,\n                                    rules: [{\n                                        required: true,\n                                        message: \"Please input question field\",\n                                    }],\n                                })(\n                                    <Select onSelect={this.onSelectAction}\n                                            placeholder=\"The next step after this block\">{\n                                        blockOptions.actions.map((action, i) =>\n                                            <Option key={i}\n                                                    value={action}>{action}</Option>)\n                                    }</Select>\n                                )\n                                : <Spin><Select placeholder=\"The next step after this block\"></Select></Spin>\n                        }\n                    </FormItem>\n\n                    {this.state.showGoToBlock ?\n                        (<FormItem label=\"Go To Specific Block\" {...this.props.options.layout}>\n                            {\n                                getFieldDecorator('blockToGoID',\n                                    {\n                                        initialValue: block.content.blockToGoID,\n                                        rules: [{required: true, message: \"Please select your next block\"}]\n\n                                    }\n                                )(\n                                    <Select placeholder=\"The next step after this block\">{\n                                        allBlocks.map((block, i) =>\n                                            <Option key={i} value={block.id}>\n                                                {`${block.id}- (${block.type}) ${block.content.text ? block.content.text : ''}`}\n                                            </Option>\n                                        )\n                                    }</Select>\n                                )\n                            }\n                        </FormItem>)\n                        : null\n                    }\n\n                    {this.state.showGoToGroup ?\n                        (<FormItem label=\"Go To Specific Group\"\n                                   extra=\"The selected group will start from its first block\"\n                                   {...this.props.options.layout}>\n                            {\n                                getFieldDecorator('blockToGoIDGroup',\n                                    {\n                                        initialValue: this.state.groupName,\n                                        rules: [{required: true, message: \"Please select your next group\"}]\n                                    }\n                                )(\n                                    <Select placeholder=\"The next block after this block\">{\n                                        allGroups.map((group, i) => {\n                                                if (group.blocks[0])\n                                                    return <Option key={i} value={group.blocks[0].id}>\n                                                        {`${group.name}`}\n                                                    </Option>;\n                                                else\n                                                    return <Option disabled key={i} value={group.name}>\n                                                        {`${group.name}`}\n                                                    </Option>\n                                            }\n                                        )\n                                    }</Select>\n                                )\n                            }\n                        </FormItem>)\n                        : null\n                    }\n\n                    <FormItem label=\"After message\"\n                              extra=\"This message will display straight after the user's response\"\n                              {...this.props.options.layout}>\n                        {getFieldDecorator('afterMessage', {\n                            initialValue: block.content.afterMessage,\n                            rules: [{\n                                required: true,\n                                message: \"Please input after message field\",\n                            }],\n                        })(\n                            <Input placeholder=\"Ex: Your input is recorded\"/>\n                        )}\n                    </FormItem>\n\n                    <Form.Item\n                        label=\"Skippable?\"\n                        {...this.props.options.layout}>\n                        {getFieldDecorator('isSkippable', {\n                            valuePropName: 'checked',\n                            initialValue: block.isSkippable,\n                        })(\n                            <Checkbox>Users can skip answering this question</Checkbox>\n                        )}\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Store responses?\"\n                        {...this.props.options.layout}>\n                        {getFieldDecorator('storeInDB', {\n                            valuePropName: 'checked',\n                            initialValue: blockOptions.alwaysStoreInDB,\n                        })(\n                            <Checkbox disabled={blockOptions.alwaysStoreInDB}>\n                                Users' responses should be recorded</Checkbox>\n                        )}\n                    </Form.Item>\n\n                </Form>\n            </Card>\n        );\n    }\n}\n\nexport default Form.create()(FileUpload);\n\n","import React, {Component} from 'react';\nimport {Button, Card, Checkbox, Form, Input, Select, Spin} from \"antd\";\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nclass Solutions extends Component {\n\n    state = {\n        showGoToBlock: false,\n        showGoToGroup: false,\n        groupName: ''\n    };\n\n    onSubmit = () => {\n        return this.props.form.validateFields((err, values) => {\n            // If from is valid crete the new block following User Input block type format\n            if (!err) {\n                this.props.handleEditBlock({\n                    type: 'Solutions',\n                    groupID: this.props.options.currentGroup.id,\n                    id: this.props.options.block.id,\n                    order: this.props.options.block.order,\n                    storeInDB: values.storeInDB,\n                    isSkippable: values.isSkippable,\n                    labels: '',\n                    content: {\n                        showTop: Number(values.showTop),\n                        action: values.action,\n                        blockToGoID: values.blockToGoID || values.blockToGoIDGroup || null,\n                        afterMessage: values.afterMessage,\n                    }\n                })\n            }\n        })\n    };\n\n    onCancel = () => this.props.handleEditBlock(false);\n\n    onSelectAction = (action) => {\n        if (action === \"Go To Specific Block\")\n            this.setState({showGoToBlock: true, showGoToGroup: false});\n        else if (action === \"Go To Group\")\n            this.setState({showGoToBlock: false, showGoToGroup: true});\n        else\n            this.setState({showGoToBlock: false, showGoToGroup: false});\n    };\n\n    componentDidMount() {\n        const {block, allGroups} = this.props.options;\n\n        if (block.content.action === \"Go To Specific Block\")\n            this.setState({showGoToBlock: true, showGoToGroup: false});\n        else if (block.content.action === \"Go To Group\") {\n            // because here we dont' have column in each block contains all the group\n            // this is a workaround to have the group name from the block id\n            this.setState({showGoToBlock: false, showGoToGroup: true});\n            const {blockToGoID} = block.content;\n            allGroups.map((group) => group.blocks[0].id === blockToGoID ? this.setState({groupName: group.name}) : null)\n        }\n        else\n            this.setState({showGoToBlock: false, showGoToGroup: false});\n    };\n\n    render() {\n        const {block, blockTypes, allBlocks, allGroups} = this.props.options;\n        let blockOptions = {};\n        // extract the correct blockType from blockTypes[]\n        for (const blockType of blockTypes)\n            if (blockType.name === 'User Input')\n                blockOptions = blockType;\n\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <Card style={{width: '100%'}}\n                  actions={[\n                      <Button key=\"delete\" type=\"danger\" onClick={() => console.log('needs to be implement')}>\n                          Delete\n                      </Button>,\n                      <Button key=\"cancel\" onClick={() => this.props.handleEditBlock(false)}>Cancel</Button>,\n                      <Button key=\"submit\" type=\"primary\" onClick={this.onSubmit}>\n                          Update\n                      </Button>]}\n            >\n                <Form layout='horizontal'>\n                    <FormItem label=\"Show Top Results\"\n                              extra=\"Number of results you want to return\"\n                              {...this.props.options.layout}>\n                        {getFieldDecorator('showTop', {\n                            initialValue: block.content.showTop,\n                            rules: [{\n                                required: true,\n                                message: \"Please show top field\",\n                            }],\n                        })(\n                            <Input min=\"1\" type=\"number\" placeholder=\"Ex: Where are you from?\"/>\n                        )}\n                    </FormItem>\n\n\n                    <FormItem label=\"Action\"\n                              {...this.props.options.layout}>\n                        {\n                            blockOptions.actions ?\n                                getFieldDecorator('action', {\n                                    initialValue: block.content.action,\n                                    rules: [{\n                                        required: true,\n                                        message: \"Please input question field\",\n                                    }],\n                                })(\n                                    <Select onSelect={this.onSelectAction}\n                                            placeholder=\"The next step after this block\">{\n                                        blockOptions.actions.map((action, i) =>\n                                            <Option key={i}\n                                                    value={action}>{action}</Option>)\n                                    }</Select>\n                                )\n                                : <Spin><Select placeholder=\"The next step after this block\"></Select></Spin>\n                        }\n                    </FormItem>\n\n                    {this.state.showGoToBlock ?\n                        (<FormItem label=\"Go To Specific Block\" {...this.props.options.layout}>\n                            {\n                                getFieldDecorator('blockToGoID',\n                                    {\n                                        initialValue: block.content.blockToGoID,\n                                        rules: [{required: true, message: \"Please select your next block\"}]\n\n                                    }\n                                )(\n                                    <Select placeholder=\"The next step after this block\">{\n                                        allBlocks.map((block, i) =>\n                                            <Option key={i} value={block.id}>\n                                                {`${block.id}- (${block.type}) ${block.content.text ? block.content.text : ''}`}\n                                            </Option>\n                                        )\n                                    }</Select>\n                                )\n                            }\n                        </FormItem>)\n                        : null\n                    }\n\n                    {this.state.showGoToGroup ?\n                        (<FormItem label=\"Go To Specific Group\"\n                                   extra=\"The selected group will start from its first block\"\n                                   {...this.props.options.layout}>\n                            {\n                                getFieldDecorator('blockToGoIDGroup',\n                                    {\n                                        initialValue: this.state.groupName,\n                                        rules: [{required: true, message: \"Please select your next group\"}]\n                                    }\n                                )(\n                                    <Select placeholder=\"The next block after this block\">{\n                                        allGroups.map((group, i) => {\n                                                if (group.blocks[0])\n                                                    return <Option key={i} value={group.blocks[0].id}>\n                                                        {`${group.name}`}\n                                                    </Option>;\n                                                else\n                                                    return <Option disabled key={i} value={group.name}>\n                                                        {`${group.name}`}\n                                                    </Option>\n                                            }\n                                        )\n                                    }</Select>\n                                )\n                            }\n                        </FormItem>)\n                        : null\n                    }\n\n\n                    <FormItem label=\"After message\"\n                              extra=\"This message will display straight after the user's response\"\n                              {...this.props.options.layout}>\n                        {getFieldDecorator('afterMessage', {\n                            initialValue: block.content.afterMessage,\n                            rules: [{\n                                required: true,\n                                message: \"Please input after message field\",\n                            }],\n                        })(\n                            <Input placeholder=\"Ex: Your input is recorded\"/>\n                        )}\n                    </FormItem>\n\n                    <Form.Item\n                        label=\"Skippable?\"\n                        {...this.props.options.layout}>\n                        {getFieldDecorator('isSkippable', {\n                            valuePropName: 'checked',\n                            initialValue: block.isSkippable,\n                        })(\n                            <Checkbox>Users can skip answering this question</Checkbox>\n                        )}\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Store responses?\"\n                        {...this.props.options.layout}>\n                        {getFieldDecorator('storeInDB', {\n                            valuePropName: 'checked',\n                            initialValue: blockOptions.alwaysStoreInDB,\n                        })(\n                            <Checkbox disabled={blockOptions.alwaysStoreInDB}>\n                                Users' responses should be recorded</Checkbox>\n                        )}\n                    </Form.Item>\n                </Form>\n            </Card>\n        );\n    }\n}\n\nexport default Form.create()(Solutions);\n\n","import React, {Component} from 'react';\n\nimport {http} from \"../../../../../../../helpers\";\n\nimport {Modal} from 'antd';\nimport UserInput from \"./Cards/UserInput\";\nimport Question from \"./Cards/Question\";\nimport FileUpload from \"./Cards/FileUpload\";\nimport Solutions from \"./Cards/Solutions\";\n\nclass EditBlockModal extends Component {\n\n    state = {\n        layout: {\n            labelCol: {span: 6},\n            wrapperCol: {span: 14}\n        },\n        blockTypes: [],\n        allBlocks: [],\n        allGroups: [],\n        currentGroup: null\n    };\n\n    componentDidMount() {\n        http.get(`/assistant/flow/options`)\n            .then(res => this.setState({blockTypes: res.data.data.blockTypes}))\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            block: nextProps.block,\n\n            allBlocks: nextProps.blocks,\n            allGroups: nextProps.allGroups,\n            currentGroup: nextProps.currentGroup\n        })\n    }\n\n    handleEditBlock = (edittedBlock) => {\n        if (edittedBlock)\n            this.props.handleEditBlock(edittedBlock);\n        this.props.closeModal();\n    };\n\n    render() {\n        return (\n            <Modal width={800}\n                   title=\"Edit Block\"\n                   visible={this.props.visible}\n                   onCancel={this.props.closeModal}\n                   destroyOnClose={true}\n                   footer={null}>\n\n                {this.props.block.type === \"User Input\" ?\n                    <UserInput options={this.state} handleEditBlock={this.handleEditBlock}/> : null}\n                {this.props.block.type === \"Question\" ?\n                    <Question options={this.state} handleEditBlock={this.handleEditBlock}/> : null}\n                {this.props.block.type === \"File Upload\" ?\n                    <FileUpload options={this.state} handleEditBlock={this.handleEditBlock}/> : null}\n                {this.props.block.type === \"Solutions\" ?\n                    <Solutions options={this.state} handleEditBlock={this.handleEditBlock}/> : null}\n            </Modal>\n        );\n    }\n}\n\n\nexport default EditBlockModal\n","import React, {Component} from 'react';\n\nimport \"./Blocks.less\"\nimport styles from \"./Blocks.module.less\";\nimport {Button, Form, Modal} from \"antd\";\n\nimport Block from \"./Block/Block\";\nimport {DragDropContext, Draggable, Droppable} from 'react-beautiful-dnd';\nimport NewBlockModal from \"./NewBlockModal/NewBlockModal\";\nimport EditBlockModal from \"./EditBlockModal/EditBlockModal1\";\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\nconst getItemStyle = draggableStyle => ({margin: `0 0 8px 0`, ...draggableStyle});\nconst confirm = Modal.confirm;\n\nclass Blocks extends Component {\n\n    state = {\n        addBlockVisible: false,\n        editBlockVisible: false,\n        deleteBlockVisible: false,\n        blocks: [],\n        edittedBlock: {},\n        deletedBlock: {content: {}}\n    };\n\n    constructor(props) {\n        super(props);\n        this.onDragEnd = this.onDragEnd.bind(this);\n    }\n\n    onDragEnd(result) {\n        // dropped outside the list\n        if (!result.destination) return;\n\n        let blocks = reorder(this.state.blocks, result.source.index, result.destination.index);\n        for (const i in blocks) blocks[i].order = Number(i) + 1;\n        this.setState({blocks});\n        // send a request to the server\n        this.props.reorderBlocks(blocks, this.props.currentGroup.id)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // This handles when updating the selected group to show its blocks\n        if (nextProps.currentGroup !== this.state.currentGroup && nextProps.currentGroup.blocks)\n            this.setState({blocks: nextProps.currentGroup.blocks})\n    }\n\n\n    ///////////////////////////////////////////////////\n\n    // ADD BLOCK MODAL CONFIGS\n    showAddBlockModal = () => this.setState({addBlockVisible: true});\n    closeAddBlockModal = () => this.setState({addBlockVisible: false});\n    handleAddBlock = (newBlock) => this.props.addBlock(newBlock, this.props.currentGroup.id);\n\n\n    // EDIT BLOCK MODAL CONFIGS\n    // this called from block.js when you click on edit block button\n    editBlock = (edittedBlock) => this.setState({edittedBlock, editBlockVisible: true});\n    closeEditBlockModal = () => this.setState({edittedBlock: {}, editBlockVisible: false});\n    handleEditBlock = (edittedBlock) => this.props.editBlock(edittedBlock, this.props.currentGroup.id);\n\n    // DELETE BLOCK MODAL CONFIGS\n    // this called from block.js when you click on delete block button\n    deleteBlock = (deletedBlock) => confirm({\n        title: `Delete block with type: ${deletedBlock.type}`,\n        content: `You can't get back to the deleted block after click ok`,\n        onOk: () => this.handleDeleteBlock(deletedBlock)\n    });\n    handleDeleteBlock = (deletedBlock) => {\n        this.props.deleteBlock(deletedBlock, this.props.currentGroup.id);\n\n        // Remove the deletedBlock\n        let blocks = this.state.blocks.filter((block) => block.id !== deletedBlock.id);\n        // Update order\n        for (const i in blocks) blocks[i].order = Number(i) + 1;\n        this.setState({blocks});\n        // send a request to the server\n        this.props.reorderBlocks(blocks, this.props.currentGroup.id)\n    };\n\n\n\n    render() {\n        return (\n            <div className={styles.Panel}>\n                <div className={styles.Panel_Header}>\n                    <div>\n                        <h3>{this.props.currentGroup.name} Blocks</h3>\n                    </div>\n                    <div>\n                        <Button className={styles.Panel_Header_Button} type=\"primary\" icon=\"plus\"\n                                onClick={this.showAddBlockModal} disabled={!this.props.currentGroup.id}>\n                            Add Block\n                        </Button>\n                    </div>\n                </div>\n\n                <div className={styles.Panel_Body}>\n                    <div style={{height: \"100%\", width: '100%', overflowY: 'auto'}}>\n\n                        <DragDropContext onDragEnd={this.onDragEnd}>\n                            <Droppable droppableId=\"droppable\">\n                                {(provided) => (\n                                    <div ref={provided.innerRef}>\n                                        {this.state.blocks.map((block, index) => (\n                                            <Draggable key={block.id} draggableId={block.order} index={index}>\n                                                {(provided) => (\n                                                    <div ref={provided.innerRef} {...provided.draggableProps}\n                                                         {...provided.dragHandleProps}\n                                                         style={getItemStyle(provided.draggableProps.style)}>\n                                                        <Block block={block}\n                                                               editBlock={this.editBlock}\n                                                               deleteBlock={this.deleteBlock}\n                                                        />\n                                                    </div>\n                                                )}\n                                            </Draggable>\n                                        ))}\n                                        {provided.placeholder}\n                                    </div>\n                                )}\n                            </Droppable>\n                        </DragDropContext>\n                    </div>\n                </div>\n\n                <NewBlockModal visible={this.state.addBlockVisible}\n                               handleAddBlock={this.handleAddBlock}\n                               closeModal={this.closeAddBlockModal}\n\n                               blocks={this.state.blocks}\n                               currentGroup={this.props.currentGroup}\n                               allGroups={this.props.allGroups}/>\n\n                <EditBlockModal visible={this.state.editBlockVisible}\n                                handleEditBlock={this.handleEditBlock}\n                                closeModal={this.closeEditBlockModal}\n\n                                block={this.state.edittedBlock}\n                                blocks={this.state.blocks}\n                                currentGroup={this.props.currentGroup}\n                                allGroups={this.props.allGroups}/>\n            </div>\n        );\n    }\n}\n\nexport default Form.create()(Blocks);\n","import React, {Component} from 'react';\n\nimport styles from \"./Header.module.less\";\nimport {Button} from \"antd\";\nimport PropTypes from 'prop-types';\n\n\nclass Header extends Component {\n    static contextTypes = {\n        router: PropTypes.object\n    };\n\n    render() {\n\n        return (\n            <div style={{height: 56, marginBottom: 10}}>\n                <div className={styles.Panel}>\n                    <div className={styles.Panel_Header}>\n                        <div style={{display: '-webkit-inline-box'}}>\n                            <Button onClick={this.context.router.history.goBack}\n                                    type=\"primary\" icon=\"left\" shape=\"circle\" size={\"small\"}></Button>\n                            <h3>{this.props.assistantName || this.props.display}</h3>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Header;\n","import React, {Component} from 'react';\nimport \"./Flow.less\"\n\nimport Groups from \"./Groups/Groups\";\nimport Blocks from \"./Blocks/Blocks\";\nimport Header from \"../../../../../components/Header/Header\";\nimport {flowActions} from \"../../../../../store/actions\";\nimport connect from \"react-redux/es/connect/connect\";\nimport styles from \"./Flow.module.less\"\nclass Flow extends Component {\n\n    state = {\n        currentGroup: {blocks: []}\n    };\n\n    componentDidMount() {\n        const {assistant} = this.props.location.state;\n        this.props.dispatch(flowActions.fetchFlowRequest(assistant.ID))\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.blockGroups !== this.props.blockGroups)\n            nextProps.blockGroups.map((group) => {\n                if (group.id === this.state.currentGroup.id)\n                    this.setState({currentGroup: group})\n            })\n    }\n\n    selectGroup = (currentGroup) => this.setState({currentGroup});\n\n\n    // GROUPS\n    addGroup = (newGroup) => {\n        const {assistant} = this.props.location.state;\n        this.props.dispatch(flowActions.addGroupRequest({ID: assistant.ID, newGroup: newGroup}));\n    };\n\n    editGroup = (editedGroup) => {\n        const {assistant} = this.props.location.state;\n        this.props.dispatch(flowActions.editGroupRequest({ID: assistant.ID, editedGroup: editedGroup}));\n    };\n\n    deleteGroup = (deletedGroup) => {\n        const {assistant} = this.props.location.state;\n        this.props.dispatch(flowActions.deleteGroupRequest({assistantID: assistant.ID, deletedGroup: deletedGroup}));\n    };\n\n\n    // BLOCKS\n    addBlock = (newBlock, groupID) => {\n        const {assistant} = this.props.location.state;\n        this.props.dispatch(flowActions.addBlockRequest({newBlock, groupID, assistantID: assistant.ID}));\n    };\n\n    editBlock = (edittedBlock, groupID) => {\n        const {assistant} = this.props.location.state;\n        this.props.dispatch(flowActions.editBlockRequest({edittedBlock, groupID, assistantID: assistant.ID}));\n    };\n\n    deleteBlock = (deletedBlock, groupID) => {\n        const {assistant} = this.props.location.state;\n        this.props.dispatch(flowActions.deleteBlockRequest({deletedBlock, groupID, assistantID: assistant.ID}));\n    };\n\n    reorderBlocks = (newBlocksOrder, groupID) => {\n        const {assistant} = this.props.location.state;\n        this.props.dispatch(flowActions.updateBlocksOrderRequest({newBlocksOrder, groupID, assistantID: assistant.ID}));\n    };\n\n    render() {\n        const {assistant} = this.props.location.state;\n\n        return (\n            <div style={{height: '100%'}}>\n                <Header display={assistant.Name}/>\n\n                <div className={styles.Panel_Body_Only}>\n                    <div style={{margin: '0 5px 0 0', width: '30%'}}>\n                        <Groups selectGroup={this.selectGroup}\n                                isLoading={this.props.isLoading}\n                                groupsList={this.props.blockGroups}\n                                addGroup={this.addGroup}\n                                editGroup={this.editGroup}\n                                deleteGroup={this.deleteGroup}/>\n                    </div>\n                    <div style={{margin: '0 0 0 5px', width: '70%'}}>\n                        <Blocks addBlock={this.addBlock}\n                                editBlock={this.editBlock}\n                                deleteBlock={this.deleteBlock}\n                                reorderBlocks={this.reorderBlocks}\n                                currentGroup={this.state.currentGroup}\n                                allGroups={this.props.blockGroups}/>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n\n}\n\nfunction mapStateToProps(state) {\n    return {\n        blockGroups: state.flow.blockGroups,\n        isLoading: state.flow.isLoading,\n\n        addSuccessMsg: state.flow.addSuccessMsg,\n        editSuccessMsg: state.flow.editSuccessMsg,\n        deleteSuccessMsg: state.flow.deleteSuccessMsg,\n\n        isAddingGroup: state.flow.isAddingGroup,\n        isEditingGroup: state.flow.isEditingGroup,\n        isDeletingGroup: state.flow.isDeletingGroup,\n\n        isAddingBlock: state.flow.isAddingBlock,\n\n    };\n}\n\n\nexport default connect(mapStateToProps)(Flow);\n","import React from \"react\";\nimport {Button, Form, Input} from \"antd\";\nimport {isEmpty} from \"lodash\";\n\nconst FormItem = Form.Item;\n\nclass ProfileDetails extends React.Component {\n\n    state= {\n        name: \"\",\n        email: \"\",\n        companyName: \"\"\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                this.props.saveProfileDetails(values);\n            }\n        });\n    };\n\n    componentWillReceiveProps(nextProps){\n        const data = nextProps.profileData;\n        if(!isEmpty(data)){\n            if(data.user && data.user.email !== this.state.email){\n                this.setState({\n                    name: data.user.Firstname + \" \" + data.user.Surname,\n                    email: data.user.Email,\n                    companyName: data.company.Name\n                });\n            }\n        }\n    }\n\n    render() {\n        const {getFieldDecorator} = this.props.form;\n\n        const formItemLayout = {\n            labelCol: {span: 6},\n            wrapperCol: {span: 14}\n        };\n\n        return (\n            <Form onSubmit={this.handleSubmit}>\n                <FormItem\n                    label={\"Name:\"}\n                    extra={\"Enter your name here\"}\n                    {...formItemLayout}>\n                    {getFieldDecorator(\"name\", {\n                        initialValue: this.state.name,\n                        rules: [{\n                            required: true,\n                            message: \"Please enter your first and last name here\"\n                        }],\n                    })(\n                        <Input/>\n                    )}\n                </FormItem>\n\n                <FormItem\n                    label={\"Email:\"}\n                    extra={\"Enter your email here (For your security we have temporarily disabled this box)\"}\n                    {...formItemLayout}>\n                    {getFieldDecorator(\"email\", {\n                        initialValue: this.state.email,\n                        rules: [{\n                            required: true,\n                            message: \"Please enter a valid email\"\n                        }],\n                    })(\n                        <Input readOnly={true}/>\n                    )}\n                </FormItem>\n\n                <FormItem\n                    label={\"Company Name:\"}\n                    extra={\"Enter your company name here\"}\n                    {...formItemLayout}>\n                    {getFieldDecorator(\"companyName\", {\n                        initialValue: this.state.companyName,\n                        rules: [{\n                            required: true,\n                            message: \"Please enter your company name\"\n                        }],\n                    })(\n                        <Input/>\n                    )}\n                </FormItem>\n\n                <br/>\n\n                <div style={{textAlign: \"center\"}}><Button htmlType={\"submit\"}\n                                                           className={\"ant-btn-primary\"}>Update</Button>\n                </div>\n            </Form>\n        )\n    }\n}\n\nexport default Form.create()(ProfileDetails)","import React from \"react\";\nimport {Button, Form, Input} from \"antd\";\nimport {isEmpty} from \"lodash\";\n\nconst FormItem = Form.Item;\n\nclass DataSettings extends React.Component {\n    state = {\n        newsletters: false,\n        statNotifications: false,\n        trackData: false,\n        techSupport: false,\n        accountSpecialist: false,\n        initialRender: false\n    };\n\n    static getDerivedStateFromProps(newProps, prevState){\n        if(prevState.initialRender){\n            return newProps\n        }\n\n        const data = newProps.profileData;\n        if(!isEmpty(data)){\n            if(data.userSettings){\n                return ({\n                    newsletters: data.newsletters,\n                    statNotifications: data.userSettings.UserInputNotifications,\n                    trackData: data.userSettings.TrackingData,\n                    techSupport: data.userSettings.TechnicalSupport,\n                    accountSpecialist: data.userSettings.AccountSpecialist,\n                    initialRender: true\n                })\n            } else {\n                return ({\n                    newsletters: data.newsletters,\n                    statNotifications: false,\n                    trackData: false,\n                    techSupport: false,\n                    accountSpecialist: false,\n                    initialRender: true\n                })\n            }\n        }\n        return ({\n            newsletters: false,\n            statNotifications: false,\n            trackData: false,\n            techSupport: false,\n            accountSpecialist: false,\n            initialRender: false\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n        console.log(\"VALUES: \", values)\n            if (!err) {\n                this.props.saveDataSettings(values);\n            }\n        });\n    };\n\n    handleChange = (e) => {\n        let name = e.target.name;\n        let checked = e.target.checked;\n        this.setState({[name]: checked});\n    };\n\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        const formItemLayout = {\n            labelCol: {span: 6},\n            wrapperCol: {span: 14}\n        };\n\n        return(\n            <Form onSubmit={this.handleSubmit}>\n                <h2>Data Sharing Settings</h2>\n                <p>Any data that you collect, process and store on TheSearchBase platform is kept\n                    secure\n                    and confidential at all times. The data that you collect is data that enables\n                    our\n                    software to work at its optimum level.</p>\n                <h4>This part of the website enables you to control what settings you may share with\n                    us.</h4>\n\n                <br/>\n\n                <FormItem\n                    label={\"Newsletters:\"}\n                    extra={\"We would like to keep you updated with the latest software updates and features available to\\n\" +\n                            \"you, If you decide to not subscribe you may miss on important features and announcements.\"}\n                    {...formItemLayout}>\n                    {getFieldDecorator(\"newsletters\", {\n                        initialValue: this.state.newsletters,\n                    })(\n                        <Input type={\"checkbox\"} name={\"newsletters\"} onChange={this.handleChange} checked={this.state.newsletters}/>\n                    )}\n                </FormItem>\n\n                <br/>\n\n                <FormItem\n                    label={\"New Users Counter:\"}\n                    extra={\"If allowed we will send you the number of new user records your assistants \" +\n                              \"have stored every 12 hours through email.\"}\n                    {...formItemLayout}>\n                    {getFieldDecorator(\"statNotifications\", {\n                        initialValue: this.state.statNotifications,\n                    })(\n                        <Input type={\"checkbox\"} name={\"statNotifications\"} onChange={this.handleChange} checked={this.state.statNotifications}/>\n                    )}\n                </FormItem>\n\n                <br/>\n\n                <strong>Erasing data</strong>\n                <p>If you decide to stop using our platform, we will simply delete\n                    your information after a year of inactivity.</p>\n\n                <br/>\n\n                <FormItem\n                    label={\"Tracking Data:\"}\n                    extra={\"We do not in any way track your information for marketing purposes. However we would recommend \" +\n                    \"allowing us to contact you if we see that there are ways we could enhance your bot or use of our software.\"}\n                    {...formItemLayout}>\n                    {getFieldDecorator(\"trackData\", {\n                        initialValue: this.state.trackData,\n                    })(\n                        <Input type={\"checkbox\"} name={\"trackData\"} onChange={this.handleChange} checked={this.state.trackData}/>\n                    )}\n                </FormItem>\n\n                <br/>\n\n                <FormItem\n                    label={\"Technical Support:\"}\n                    extra={\"Let our team view your errors and problems in order for us to solve your issues.\"}\n                    {...formItemLayout}>\n                    {getFieldDecorator(\"techSupport\", {\n                        initialValue: this.state.techSupport,\n                    })(\n                        <Input type={\"checkbox\"} name={\"techSupport\"} onChange={this.handleChange} checked={this.state.techSupport}/>\n                    )}\n                </FormItem>\n\n                <br/>\n\n                <FormItem\n                    label={\"Account Specialist:\"}\n                    extra={\"Let our team contact you to help make recommendations as to how you can make your bots more \" +\n                    \"successful and ways to collect more valuable data. If you don't have a sales specialist, we recommend \" +\n                    \"you enable this so we can help you make the most of our software.\"}\n                    {...formItemLayout}>\n                    {getFieldDecorator(\"accountSpecialist\", {\n                        initialValue: this.state.accountSpecialist,\n                    })(\n                        <Input type={\"checkbox\"} name={\"accountSpecialist\"} onChange={this.handleChange} checked={this.state.accountSpecialist}/>\n                    )}\n                </FormItem>\n\n                <br/>\n\n                <div style={{textAlign: \"center\"}}><Button htmlType={\"submit\"}\n                                                           className={\"ant-btn-primary\"}>Update</Button>\n                </div>\n            </Form>\n        )\n    }\n}\n\nexport default Form.create()(DataSettings)","import React from 'react';\nimport {Form, Button, message, Tabs} from \"antd\";\nimport {connect} from 'react-redux';\nimport {isEmpty} from \"lodash\";\n\nimport \"./Profile.less\"\nimport styles from \"./Profile.module.less\"\nimport ProfileDetails from \"./profileComponents/ProfileDetails/ProfileDetails\";\nimport DataSettings from \"./profileComponents/DataSettings/DataSettings\";\n\nimport {profileActions} from \"../../../store/actions/profile.actions\";\nconst TabPane = Tabs.TabPane;\n\nclass Profile extends React.Component {\n    // state = {\n    //     password: {\n    //         old: \"\",\n    //         new: \"\",\n    //         repeat: \"\"\n    //     }\n    // };\n\n    saveProfileDetails = (values) => {\n        this.props.dispatch(profileActions.saveProfileDetails(values));\n    };\n\n    saveDataSettings = (values) => {\n        this.props.dispatch(profileActions.saveDataSettings(values));\n    };\n\n    componentDidMount() {\n        this.props.dispatch(profileActions.getProfile());\n    }\n\n    render() {\n\n        return (\n            <div style={{height: '100%'}}>\n                <div className={styles.Panel}>\n                    <div className={styles.Panel_Header}>\n                        <div>\n                            <h3>User Profile</h3>\n                            <p>Here you can edit your details and how we handle your data.</p>\n                        </div>\n                    </div>\n\n                    <div className={styles.Panel_Body} style={{overflowY: \"auto\"}}>\n                        <Tabs defaultActiveKey={\"1\"}>\n                            <TabPane tab={\"Profile Details\"} key={\"1\"}>\n                                <ProfileDetails profileData={this.props.profileData} saveProfileDetails={this.saveProfileDetails}/>\n                            </TabPane>\n\n                            <TabPane tab={\"Data Settings\"} key={\"2\"}>\n                                <DataSettings profileData={this.props.profileData} saveDataSettings={this.saveDataSettings}/>\n                            </TabPane>\n\n                            {/*<TabPane tab={\"Change Password\"} key={\"3\"}>*/}\n\n                                {/*<Form onSubmit={this.handleSubmit}>*/}\n                                    {/*<ProfileInput title={\"Old Password\"} name=\"password.old\"*/}\n                                                  {/*rules={{*/}\n                                                      {/*required: true,*/}\n                                                      {/*message: \"Please enter your old password\"*/}\n                                                  {/*}}*/}\n                                                  {/*getFieldDecorator={getFieldDecorator} formItemLayout={formItemLayout}*/}\n                                                  {/*handleChange={this.handleChange}*/}\n                                                  {/*form={this.props.form}*/}\n                                                  {/*description={\"Enter your old password here\"}*/}\n                                    {/*/>*/}\n\n                                    {/*<ProfileInput title={\"New Password\"} name=\"password.new\"*/}\n                                                  {/*rules={{*/}\n                                                      {/*required: true,*/}\n                                                      {/*message: \"Please enter your new password\"*/}\n                                                  {/*}}*/}\n                                                  {/*getFieldDecorator={getFieldDecorator} formItemLayout={formItemLayout}*/}\n                                                  {/*handleChange={this.handleChange}*/}\n                                                  {/*form={this.props.form}*/}\n                                                  {/*description={\"Enter your new password here\"}*/}\n                                    {/*/>*/}\n\n                                    {/*<ProfileInput title={\"Repeat Password\"} name=\"password.repeat\"*/}\n                                                  {/*rules={{*/}\n                                                      {/*required: true,*/}\n                                                      {/*message: \"Passwords must match\"*/}\n                                                  {/*}}*/}\n                                                  {/*getFieldDecorator={getFieldDecorator} formItemLayout={formItemLayout}*/}\n                                                  {/*handleChange={this.handleChange}*/}\n                                                  {/*form={this.props.form}*/}\n                                                  {/*description={\"Enter your new password again here\"}*/}\n                                    {/*/>*/}\n\n                                    {/*<br/>*/}\n\n                                    {/*<div style={{textAlign: \"center\"}}><Button htmlType={\"submit\"}*/}\n                                                                               {/*className={\"ant-btn-primary\"}>Update</Button>*/}\n                                    {/*</div>*/}\n                                {/*</Form>*/}\n                            {/*</TabPane>*/}\n                        </Tabs>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        profileData: state.profile.profile\n    };\n}\n\nexport default connect(mapStateToProps)(Form.create()(Profile));\n","import React from 'react';\n\nimport {Button, Col, Input, Row} from \"antd\";\nimport Header from \"../../../../../components/Header/Header\"\n\nimport styles from \"./Integration.module.less\"\nimport ReactDOMServer from 'react-dom/server'\nimport {hasher} from \"../../../../../helpers\"\nimport {SwatchesPicker} from 'react-color';\n\nimport \"./Integration.less\"\n\nconst {TextArea} = Input;\n\n\nclass Integration extends React.Component {\n\n    state = {\n        source: \"\",\n        dataName: \"tsb-widget\",\n        dataID: \"assistantid\",\n        // dataIcon: \"#ffffff\",\n        dataCircle: \"#9254de\",\n        async: true,\n        defer: true\n    };\n\n    componentDidMount() {\n        this.setState({\n            dataID: hasher.encode(this.props.match.params.id),\n            source: this.getWidgetSrc()\n        });\n    }\n\n    componentWillUnmount(){\n        this.removeChatbot();\n    }\n\n    handleChange = (color) => this.setState({dataCircle: color.hex || color.target.value});\n\n    removeChatbot = () => {\n        let oldBot = document.getElementById(\"TheSearchBase_Chatbot\");\n        if (oldBot) oldBot.remove();\n        let oldBotScript = document.getElementById(\"oldBotScript\");\n        if (oldBotScript) oldBotScript.remove();\n    };\n\n    copyScriptPaste = () => {\n        const pasteArea = document.getElementById(\"pasteArea\");\n        pasteArea.select();\n        document.execCommand(\"copy\");\n    };\n\n    testIntegration = () => {\n        this.removeChatbot();\n        const script = document.createElement(\"script\");\n\n        script.src = this.state.source;\n        script.async = this.state.async;\n        script.defer = this.state.defer;\n        script.setAttribute(\"data-name\", this.state.dataName);\n        script.setAttribute(\"data-id\", this.state.dataID);\n        // script.setAttribute(\"data-icon\", this.state.dataIcon);\n        script.setAttribute(\"data-circle\", this.state.dataCircle);\n        script.setAttribute(\"id\", \"oldBotScript\");\n\n        document.body.appendChild(script);\n    };\n\n\n    getWidgetSrc = () => {\n        // include the colon if there is port number, which means localhost and not real server\n        let colon = \"\";\n        if (window.location.port !== \"\") {colon = \":\";}\n        const {protocol, port, hostname} = window.location;\n        return protocol + '//' + hostname + colon + port + \"/userdownloads/widget.js\";\n    };\n\n    generateDirectLink = () => {\n        const {protocol, port, hostname} = window.location;\n        let colon = \"\";\n        if (window.location.port !== \"\") colon = \":\";\n        if (port === \"3000\")\n            window.open(`${protocol}//${hostname}${colon}5000/assistant/YJkLo/chatbot_direct_link`);\n        else\n            window.open(`${protocol}//${hostname}${colon}${port}/assistant/YJkLo/chatbot_direct_link`);\n\n    };\n\n    getChatbotScript = () => {\n        return <script src={this.getWidgetSrc()}\n                       data-name={this.state.dataName}\n                       data-id={this.state.dataID}\n                       // data-icon={this.state.dataIcon}\n                       data-circle={this.state.dataCircle}\n                       async={this.state.async}\n                       defer={this.state.defer}/>\n    };\n\n    render() {\n        return (\n            <div style={{height: '100%'}}>\n                <Header display={`Integration`}/>\n\n                <div className={styles.Panel_Body_Only}>\n                    <div style={{marginRight: 5, width: '45%'}} className={styles.Panel}>\n\n                        <div className={styles.Panel_Header} style={{position: \"inherit\"}}>\n                            <h3>Choosing your Assistant's looks</h3>\n                        </div>\n\n                        <div className={styles.Panel_Body}>\n                            <Row type=\"flex\" justify=\"center\">\n                                <Col>\n                                    <p> Currently you can edit the colour setting of your assistant's button.\n                                        Simply pick your preferred one bellow.</p>\n                                </Col>\n                            </Row>\n\n                            <br/>\n\n                            <Row type=\"flex\" justify=\"center\" style={{marginBottom: 50}}>\n                                <Col>\n                                    <SwatchesPicker color={this.state.dataCircle} onChange={this.handleChange}/>\n                                </Col>\n                            </Row>\n\n                            <Row type=\"flex\" justify=\"center\">\n                                <Col>\n                                    <p style={{lineHeight: '27px', marginRight: 5}}>Selected Color:</p>\n                                </Col>\n                                <Col>\n                                    <Input style={{padding: \"3px\", width: \"60px\"}} type=\"color\" name=\"dataCircle\"\n                                           value={this.state.dataCircle} onChange={this.handleChange}/>\n                                </Col>\n\n                            </Row>\n                        </div>\n                    </div>\n\n\n                    <div style={{marginLeft: 5, width: '55%'}} className={styles.Panel}>\n\n                        <div className={styles.Panel_Header} style={{position: \"inherit\"}}>\n                            <h3>Connecting your assistant</h3>\n                        </div>\n\n                        <div className={styles.Panel_Body} style={{textAlign: 'center'}}>\n                            <p style={{textAlign: 'left'}}>\n                                To integrate your assistant, you must paste the pre-made code into any part of your\n                                HTML\n                                source code.\n                            </p>\n\n                            <TextArea value={ReactDOMServer.renderToString(this.getChatbotScript())}\n                                      id={\"pasteArea\"}\n                                      style={{width: \"100%\", height: \"110px\", fontWeight: \"600\", margin: \"1.5% 0\"}}\n                                      readOnly/>\n                            <Button onClick={this.copyScriptPaste} className={\"ant-btn-primary\"}>Copy</Button>\n                            <Button style={{marginLeft: \"5px\"}} onClick={this.testIntegration}\n                                    className={\"ant-btn-primary\"}>Test</Button>\n                            <Button style={{marginLeft: \"5px\"}} onClick={this.generateDirectLink}\n                                    className={\"ant-btn-primary\"}>Generate Direct Link</Button>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default (Integration);","import React, {Component} from 'react';\nimport \"./ViewModal.less\"\nimport {Button, Modal, Table} from \"antd\";\nimport {http, alertError} from '../../../../../../helpers';\nimport saveAs from 'file-saver';\n\n\nclass ViewModal extends Component {\n\n    state = {\n        fileNames: []\n    };\n    counter = -1;\n    columns = [{\n        title: 'Question',\n        key: 'questionText',\n        render: (text, record, index) => (<p>{record.questionText}</p>),\n    }, {\n        title: 'Input',\n        key: 'input',\n        render: (text, record, index) => {\n\n            if (record.input === '&FILE_UPLOAD&') {\n                this.counter+=1;\n                return (<Button hreftype=\"primary\" data-index={this.counter} icon=\"download\" size=\"small\"\n                                onClick={(e) => {this.downloadFile(e)}}>\n                    Download File\n                </Button>);\n            }\n\n            else {\n               return (<p>\n                   {record.input}\n               </p>);\n            }\n        },\n    }];\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if(nextProps.record && nextProps.record.FilePath){\n            this.setState({fileNames: nextProps.record.FilePath.split(',')})\n        }\n    }\n\n    downloadFile = (e) => {\n        // Get file name by index. indexes stored in each button corresponds to filenames stored in the state\n        const fileName = this.state.fileNames[e.target.getAttribute('data-index')];\n        if (!fileName){\n            alertError(\"File Error\", \"Sorry, but file doesn't exist!\");\n            return;\n        }\n\n        http({\n            url: `/assistant/${this.props.assistant.ID}/userinput/${fileName}`,\n            method: 'GET',\n            responseType: 'blob', // important\n        }).then((response) => {\n            saveAs(new Blob([response.data]), fileName);\n        }).catch(error => {\n            alertError(\"File Error\", \"Sorry, cannot download this file!\")\n        });\n    };\n\n    render() {\n        const {record} = this.props;\n        console.log(this.state);\n        return (\n            <Modal\n                width={800}\n                title=\"User Inputs\"\n                destroyOnClose={true}\n                visible={this.props.visible}\n                onCancel={this.props.closeViewModal}\n                onOk={this.props.closeViewModal}\n                footer={[\n                    <Button key=\"Cancel\" onClick={this.props.closeViewModal}>OK</Button>\n                ]}>\n                {this.props.record ? (\n                    <Table columns={this.columns}\n                           dataSource={record.Data.collectedInformation}\n                           size='middle'\n                           pagination={false}\n                    />\n                ) : (<p>No Data</p>)}\n\n            </Modal>\n        );\n    }\n}\n\nexport default ViewModal;","import React from 'react';\nimport \"./UserInput.less\"\nimport styles from \"./UserInput.module.less\"\nimport Header from \"../../../../../components/Header/Header\";\n\nimport {userInputActions} from \"../../../../../store/actions\";\nimport connect from \"react-redux/es/connect/connect\";\nimport ViewModal from \"./ViewModal/ViewModal\";\nimport { Table, Button, Modal } from 'antd';\nimport moment from 'moment';\n\nconst confirm = Modal.confirm;\n\n\nclass UserInput extends React.Component {\n\n    state = {\n        viewModal: false,\n        selectedRecord: null\n    };\n\n    columns = [{\n        title: '#',\n        dataIndex: '#',\n        key: '#',\n        render: (text, record, index) => (<p>{index+1}</p>),\n    }, {\n        title: 'Date & Time',\n        dataIndex: 'DateTime',\n        key: 'DateTime',\n        render: (text, record) => (<p>{moment(record.DateTime).format(\"llll\")}</p>),\n    }, {\n        title: 'Questions Answered',\n        dataIndex: 'QuestionsAnswered',\n        key: 'QuestionsAnswered',\n    }, {\n        title: 'Solutions Returned',\n        dataIndex: 'SolutionsReturned',\n    }, {\n        title: 'Time Spent',\n        dataIndex: 'TimeSpent',\n        key: 'TimeSpent',\n        render: (text, record) => (<p>{\n            moment.duration(parseInt(text), 'seconds').asMinutes().toFixed(2) + \" minute(s)\"\n        }\n        </p>),\n\n    }, {\n        title: 'Action',\n        key: 'action',\n        render: (text, record, index) => (\n            <span>\n              <a onClick={()=> {\n                  this.setState({viewModal: true, selectedRecord: record})\n                }\n              }> View</a>\n              {/*<Divider type=\"vertical\" />*/}\n              {/*<a>Delete</a>*/}\n            </span>\n        ),\n    }];\n\n    componentDidMount() {\n        const {assistant} = this.props.location.state;\n        this.props.dispatch(userInputActions.fetchUserInputs(assistant.ID))\n    }\n\n    closeViewModal = () => {\n        this.setState({viewModal: false, selectedRecord: null})\n    };\n\n    clearAllUserInputs = () => {\n        const {assistant} = this.props.location.state;\n        this.props.dispatch(userInputActions.clearAllUserInputs(assistant.ID))\n    };\n\n    showConfirmForClearing = () => {\n        const clear = this.clearAllUserInputs;\n        confirm({\n            title: 'Do you want to delete all records?',\n            content: 'By clicking OK, there will be no way to get these records back!',\n            okType: 'danger',\n            onOk() {clear()},\n            onCancel() {},\n        });\n    };\n\n\n    render() {\n        const {assistant} = this.props.location.state;\n        console.log(this.props.userInputs);\n        return (\n\n            <div style={{height: '100%'}}>\n\n                <Header display={assistant.Name}/>\n\n                <div className={styles.Panel}>\n                    <div className={styles.Panel_Header}>\n                        <div>\n                            <h3>{assistant.Name}: User Inputs</h3>\n                            <p>Here you can find all the responses to your assistant's chatbot</p>\n                        </div>\n                    </div>\n\n                    <div className={styles.Panel_Body} style={{overflowY: \"auto\"}}>\n                        <Button className={styles.ClearAllBtn} type=\"primary\" icon=\"delete\"\n                                onClick={this.showConfirmForClearing} loading={this.props.isClearingAll}>\n                            Clear All\n                        </Button>\n                        <Table columns={this.columns}\n                               dataSource={this.props.userInputs.data}\n                               loading={this.props.isLoading}\n                               size='middle'\n                        />\n\n                    </div>\n                </div>\n\n                <ViewModal visible={this.state.viewModal}\n                           closeViewModal={this.closeViewModal}\n                           filesPath={this.props.userInputs.filesPath}\n                           record={this.state.selectedRecord}\n                           assistant={assistant}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state =>  {\n    const {userInput} = state;\n    return {\n        userInputs: userInput.userInputs,\n        isLoading: userInput.isLoading,\n        errorMsg: userInput.errorMsg,\n\n        isClearingAll: userInput.isClearingAll\n    };\n};\n\n\nexport default connect(mapStateToProps)(UserInput);","import React from 'react';\nimport \"./SolutionModal.less\"\nimport {Button, Modal, Form, Input, Select, Tabs, Icon, Upload} from \"antd\";\nimport {isEmpty} from \"lodash\";\n\nconst FormItem = Form.Item;\nconst TabPane = Tabs.TabPane;\nconst OptGroup = Select.OptGroup;\nconst Option = Select.Option;\n\nclass SolutionModal extends React.Component {\n\n    state = {\n        connectionType: \"none\",\n        uploadFile: undefined\n    };\n\n    handleSave = () => this.props.form.validateFields((err, values) => {\n        if (err || (this.state.uploadFile === undefined && !this.props.edit)){\n            return false;\n        }\n        values[\"uploadFile\"] = this.state.uploadFile;\n        const formData = new FormData();\n        for (let key in values) {\n            // skip loop if the property is from prototype\n            if (!values.hasOwnProperty(key)) continue;\n\n            formData.append(key, values[key]);\n        }\n        this.props.handleSave(formData, this.props.edit);\n    });\n\n    changeTypeHandler = (e) => {\n        if (e === \"RDB XML File Export\") {\n            this.setState({connectionType: \"fileUpload\"});\n        }\n        else if (e === \"Bullhorn\" || e === \"RDB\") {\n            this.setState({connectionType: \"CRMConnection\"});\n        } else {\n            this.setState({connectionType: \"none\"});\n        }\n    };\n\n    onFileChange = (e) => {\n      const file = e.target.files[0];\n      this.setState({uploadFile: file})\n    };\n\n    componentWillReceiveProps(){\n        if(!this.props.visible){\n            this.setState({uploadFile: undefined, connectionType: \"none\"});\n            this.changeTypeHandler(\"none\");\n        }\n    }\n\n    closeModal = () => {\n        this.props.handleCancel();\n    };\n\n    render() {\n        const formItemLayout = {\n            labelCol: {span: 6},\n            wrapperCol: {span: 14},\n        };\n        const {getFieldDecorator} = this.props.form;\n\n        const solutionExists = this.props.edit;\n        if(solutionExists && this.state.connectionType === \"none\"){\n            this.changeTypeHandler(this.props.solutionToEdit.Solution.Type);\n        }\n        return (\n            <Modal\n                width={800}\n                title=\"Create New Solution\"\n                destroyOnClose={true}\n                visible={this.props.visible}\n                onOk={this.props.handleSave}\n                onCancel={this.props.handleCancel}\n                footer={[\n                    <Button key=\"Cancel\" onClick={this.closeModal}>Cancel</Button>,\n                    <Button key=\"submit\" type=\"primary\" onClick={this.handleSave}>\n                        {solutionExists ? \"Update\" : \"Add\"}\n                    </Button>\n                ]}>\n                <Form layout='horizontal'>\n                    <FormItem\n                        label=\"Solution Name\"\n                        extra=\"Enter a name for your solution to easily identify it in the solution list\"\n                        {...formItemLayout}>\n                        {getFieldDecorator('name', {\n                            initialValue: solutionExists ? this.props.solutionToEdit.Solution.Name : \"\",\n                            rules: [{\n                                required: true,\n                                message: 'Please enter your solution name',\n                            }],\n                        })(\n                            <Input placeholder=\"Ex: Jobs file, Bullhorn connection\"/>\n                        )}\n                    </FormItem>\n\n                    <FormItem\n                        label=\"Solution Type\"\n                        extra=\"The type of File or CRM you want to connect\"\n                        {...formItemLayout}>\n                        {getFieldDecorator('type', {\n                            initialValue: solutionExists ? this.props.solutionToEdit.Solution.Type : \"\",\n                            rules: [{\n                                required: true,\n                                message: 'Please select what type of connection you are making',\n                            }],\n                        })(\n                            <Select onChange={this.changeTypeHandler}>\n                                <OptGroup label={\"File Upload\"}>\n                                    {\n                                        this.props.databaseFileTypes.map(fileType => (\n                                                <Option key={fileType} value={fileType}>{fileType}</Option>\n                                            )\n                                        )\n                                    }\n                                </OptGroup>\n                                {/*<OptGroup label={\"CRM Connection\"}>*/}\n                                    {/*{*/}\n                                        {/*this.props.databaseCRMTypes.map(CRMType => (*/}\n                                                {/*<Option key={CRMType} value={CRMType}>{CRMType}</Option>*/}\n                                            {/*)*/}\n                                        {/*)*/}\n                                    {/*}*/}\n                                {/*</OptGroup>*/}\n                            </Select>\n                        )}\n                    </FormItem>\n\n                    <Tabs activeKey={this.state.connectionType} tabBarStyle={{display:\"none\"}}>\n                        <TabPane tab={\"none\"} key={\"none\"}>\n                            <div style={{height: \"86px\", width:\"752px\"}}/>\n                        </TabPane>\n                        <TabPane tab={\"fileUpload\"} key={\"fileUpload\"}>\n                            {/*<Button htmlFor={\"fileUpload\"}><Icon type={\"upload\"}/>Click to Upload</Button>*/}\n                            <FormItem\n                                label= {solutionExists ? \"Upload File\" : \"Upload File\"}\n                                extra=\"Select the file you wish to upload\"\n                                {...formItemLayout}>\n\n                                <Input type={\"file\"} id={\"fileUpload\"} hidden={true} onChange={this.onFileChange}/>\n                                <Button onClick={() => {document.getElementById(\"fileUpload\").click()}}>\n                                    <Icon type={\"upload\"}/>Select File\n                                </Button> <label>{this.state.uploadFile ? this.state.uploadFile.name : \"No File Chosen\"}</label>\n\n                            </FormItem>\n                        </TabPane>\n                        <TabPane tab={\"CRMConnection\"} key={\"CRMConnection\"}>\n                            <FormItem\n                                label=\"CRM Connection Link\"\n                                extra=\"Please paste your connection link\"\n                                {...formItemLayout}>\n                                {getFieldDecorator('CRMLink', {\n                                    rules: [{\n                                        required: this.state.connectionType === \"CRMConnection\",\n                                        message: 'Please paste the connection link for your CRM provided to you by us or your CRM manager',\n                                    }],\n                                })(\n                                    <Input placeholder=\"\"/>\n                                )}\n                            </FormItem>\n                        </TabPane>\n                    </Tabs>\n                </Form>\n            </Modal>\n        );\n    }\n}\n\nexport default Form.create()(SolutionModal)","import React from 'react';\nimport styles from \"../Solutions.module.less\";\nimport {Avatar, Button, List, Skeleton, Spin} from \"antd\";\nimport SolutionModal from \"./SolutionModal/SolutionModal\";\n\nclass SolutionsDisplay extends React.Component{\n    state = {\n        SolutionModal: false,\n        editMode: false,\n        selectedSolutionToEdit: {}\n    };\n\n    handleSolution = (Solution, edit) => {\n        if(!edit){\n            this.props.addSolution(Solution);\n            this.setState({SolutionModal: false, editMode:false});\n        } else {\n            this.props.editSolution(Solution);\n            this.setState({SolutionModal: false, editMode:false});\n        }\n    };\n\n    handleSolutionCancel = () => this.setState({SolutionModal: false, editMode:false});\n\n    showSolutionModal = () => this.setState({SolutionModal: true});\n\n    selectSolution = (item) => {\n        this.setState({selectedSolutionToEdit: item, editMode:true, SolutionModal:true});\n    };\n\n    // ////// DELETE GROUP\n    // handleDeleteSolution = (deletedSolution) => {\n    //     this.props.deleteSolution(deletedSolution);\n    //     this.setState({editSolutionModal: false, selectedSolutionToEdit: {}});\n    // };\n\n    render (){\n        return(\n            <div className={styles.Panel}>\n                <div className={styles.Panel_Header}>\n                    <div>\n                        <h3>Solutions List</h3>\n                    </div>\n                    <div>\n                        <Button className={styles.Panel_Header_Button} type=\"primary\" icon=\"plus\"\n                                onClick={this.showSolutionModal}>\n                            Add Solution\n                        </Button>\n                    </div>\n                </div>\n\n\n                <div className={styles.Panel_Body}>\n                    {\n                        this.props.isLoading ?\n                            <Spin><Skeleton active={true}/></Spin>\n                            :\n                            <List\n                                itemLayout=\"horizontal\"\n                                dataSource={this.props.solutionsData}\n                                renderItem={item => (\n                                    <List.Item\n                                        actions={[<Button icon={'edit'}\n                                                          onClick={() => this.selectSolution(item)}/>]}>\n                                        <List.Item.Meta\n                                            onClick={() => this.props.selectSolution(item)}\n                                            className={styles.groupsList}\n                                            avatar={<Avatar icon=\"database\"\n                                                            style={{backgroundColor: '#9254de'}}/>}\n                                            title={item.Solution.Name}\n                                            description={item.description}\n                                        />\n                                    </List.Item>\n                                )}\n                            />\n                    }\n                </div>\n\n                <SolutionModal visible={this.state.SolutionModal}\n                                     handleCancel={this.handleSolutionCancel}\n                                     handleSave={this.handleSolution}\n                                     databaseFileTypes={this.props.databaseFileTypes}\n                                     databaseCRMTypes={this.props.databaseCRMTypes}\n                                     edit={this.state.editMode}\n                                     solutionToEdit={this.state.editMode ? this.state.selectedSolutionToEdit : {}}\n                        />\n            </div>\n        )\n    }\n}\n\nexport default SolutionsDisplay","import React from \"react\";\nimport {Button, Form, Select} from \"antd\";\nimport styles from \"../SolutionsSettings.module.less\";\nimport QueueAnim from \"rc-queue-anim\";\nimport {isEmpty} from \"lodash\";\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nclass ITDForm extends React.Component {\n\n    state = {\n        solutionID: undefined,\n        chosenDisplays: []\n    };\n\n    addNewDisplaySelect = () => {\n        let chosenDisplays = [...this.state.chosenDisplays];\n        chosenDisplays.push(undefined);\n        this.setState({chosenDisplays: chosenDisplays});\n    };\n\n    static getDerivedStateFromProps(newProps, prevState){\n        if(newProps.currentSolution.Solution.ID === prevState.solutionID){ return null; }\n        if(newProps.currentSolution.Solution === undefined){ return null; }\n        if(newProps.currentSolution.Solution.DisplayTitles === null){ return null; }\n\n        const chosenDisplays = [...newProps.currentSolution.Solution.DisplayTitles.titleValues];\n        return ({chosenDisplays: chosenDisplays, solutionID: newProps.currentSolution.Solution.ID});\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if(!err){\n                this.props.updateInformationToDisplay(values);\n            }\n        });\n    };\n\n    render(){\n        const {getFieldDecorator} = this.props.form;\n\n        return (\n            <Form style={{textAlign:\"center\"}} onSubmit={this.handleSubmit}>\n                <p>From here you can choose which part of your information you want to be displayed inside the solution box.\n                    If you are unsure what data is inside those titles simply have a look at the Raw Data section.</p>\n                <Button className={styles.Button} type=\"primary\" onClick={this.addNewDisplaySelect}>Add More Information</Button>\n                <QueueAnim>\n                {\n                    this.state.chosenDisplays.map((record, index) => {\n                        return (\n                            <FormItem style={{marginBottom: \"5px\"}} key={index}>\n                                {getFieldDecorator(\"displaySelect\" + String(index), {\n                                    initialValue: record,\n                                    rules: [{\n                                        required: true,\n                                        message: 'Please select a header',\n                                    }],\n                                })(\n                                    <Select className={styles.Select}>\n                                        {\n                                            this.props.currentSolution.DisplayTitles.map((record, index) => {\n                                                return <Option key={index} value={record}>{record}</Option>\n                                            })\n                                        }\n                                    </Select>\n                                )}\n                            </FormItem>\n                        )\n                    })\n                }\n                </QueueAnim>\n                <Button htmlType={\"submit\"} className={\"ant-btn-primary\"} style={{marginTop:\"10px\"}}>Update</Button>\n            </Form>\n        )\n    }\n};\n\nexport default Form.create()(ITDForm)","import React from \"react\";\nimport {Button, Form, Input, Select} from \"antd\";\nimport styles from \"../SolutionsSettings.module.less\";\nimport {isEmpty} from \"lodash\";\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nclass ButtonLink extends React.Component {\n\n    state = {\n        webLink: \"\",\n        IDHeader: \"\",\n    };\n\n    static getDerivedStateFromProps(newProps){\n        if(this !== undefined) {\n            if (!isEmpty(this.props.currentSolution)) {\n                if (this.props.currentSolution.Solution.ID === newProps.currentSolution.Solution.ID) {\n                    return ({webLink: \"\", IDHeader: \"\"});\n                }\n            }\n        }\n\n        if(newProps.currentSolution.Solution === undefined){ return ({webLink: \"\", IDHeader: \"\"}); }\n\n        return ({webLink: newProps.currentSolution.Solution.WebLink, IDHeader: newProps.currentSolution.Solution.IDReference});\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if(!err){\n                this.props.updateButtonLink(values);\n            }\n        });\n    };\n\n    render(){\n        const {getFieldDecorator} = this.props.form;\n\n\n        return (\n            <Form style={{textAlign:\"center\"}} onSubmit={this.handleSubmit}>\n                <p>In order to be able to direct users to your solutions at your home website we will need some input from you.\n                    We would need the page part that holds all the solutions and then the solution reference. For example that\n                    can be http://mycoolwebsite.com/jobs/JobID* . To create the bridge between us we would need that information\n                    in the bellow text inputs. <br />\n                    <strong>To do that just contact us and we will find them for you.</strong><br />\n                    Alternatively you can try finding them on your own. To do that please provide us with the link (ex. \"http://mycoolwebsite.com/jobs/\")\n                    and then the reference to the JobID which you can find in your upload file(add @ in front of it) or Raw Data bellow.<br />\n                    For example: \"@JobID\" : C2143. <br />You can also take your solution ID and use Ctrl + F on this page to find the\n                    corresponding title in the Raw Data.</p>\n\n                <FormItem style={{margin: \"15px 0 5px 0\"}}>\n                    {getFieldDecorator(\"webLink\", {\n                        initialValue: this.state.webLink,\n                        rules: [{\n                            required: true,\n                            message: 'Please paste the link without the solution ID here',\n                        }],\n                    })(\n                        <Input className={styles.Input} placeholder={\"https://jobwebsite.com/jobs/\"}/>\n                    )}\n                </FormItem>\n\n                <FormItem style={{marginBottom: \"5px\"}}>\n                    {getFieldDecorator(\"IDHeader\", {\n                        initialValue: this.state.IDHeader,\n                        rules: [{\n                            required: true,\n                            message: 'Please select the header that holds the job ID',\n                        }],\n                    })(\n                        <Select className={styles.Select} placeholder={\"@JobID\"}>\n                            {\n                                this.props.currentSolution.DisplayTitles.map((record, index) => {\n                                    return <Option key={index} value={record}>{record}</Option>\n                                })\n                            }\n                        </Select>\n                    )}\n                </FormItem>\n                <Button htmlType={\"submit\"} className={\"ant-btn-primary\"} style={{marginTop:\"10px\"}}>Update</Button>\n            </Form>\n        )\n    }\n}\n\nexport default Form.create()(ButtonLink)","import React from \"react\";\nimport {Button, Switch} from \"antd\";\nimport styles from \"../SolutionsSettings.module.less\";\n\nclass EmailAutomatch extends React.Component {\n\n\n    render() {\n        return (\n            <div style={{textAlign:\"center\"}}>\n\n                <p>You can send emails to your clients when a new Solution suited for them has been added to your records.\n                    This can be done manually by clicking the button bellow or by ticking the box which will check\n                    and send them every time you update your data.</p>\n\n                <Button onClick={this.props.sendSolutionAlerts} className={styles.Button} type={\"primary\"}>Send Matches</Button><br />\n\n                <label>Automatic Matching on Record Update:</label><br />\n                <Switch loading={false} checkedChildren={\"On\"} unCheckedChildren={\"Off\"}\n                        defaultChecked={this.props.currentSolution.Solution.automaticSolutionAlerts} onChange={this.props.submitAutomaticAlerts}/>\n\n\n            </div>\n        )\n    }\n}\n\nexport default EmailAutomatch","import React from \"react\";\nimport styles from \"./SolutionsSettings.module.less\";\nimport {Tabs, Form, Select, Button, Input, Switch} from \"antd\";\nimport QueueAnim from \"rc-queue-anim\";\nimport Animate from \"rc-animate\";\nimport {isEmpty} from \"lodash\";\nimport {profileActions} from \"../../../../../../store/actions\";\nimport ITDForm from \"./InformationToDisplay/InformationToDisplay\";\nimport BTForm from \"./ButtonLink/ButtonLink\";\nimport EAmForm from \"./EmailAutomatch/EmailAutomatch\";\n\nconst TabPane = Tabs.TabPane;\n\nclass SolutionsSettings extends React.Component{\n\n    render (){\n\n        return(\n            <div className={styles.Panel}>\n                <div className={styles.Panel_Header}>\n                    <div>\n                        <h3 style={{height:\"32px\"}}>Solution Settings</h3>\n                    </div>\n                </div>\n\n\n                <div className={styles.Panel_Body}>\n                    <Animate transitionName=\"fade\" transitionAppear>\n                    {isEmpty(this.props.currentSolution) ? null :\n                        <Tabs defaultActiveKey={\"1\"}>\n\n                            <TabPane tab={\"Information to Display\"} key={\"1\"}>\n\n                                <ITDForm\n                                    currentSolution={this.props.currentSolution}\n                                    updateInformationToDisplay={this.props.updateInformationToDisplay}\n                                />\n\n                            </TabPane>\n\n                            <TabPane tab={\"Button Link\"} key={\"2\"}>\n\n                                <BTForm\n                                    currentSolution={this.props.currentSolution}\n                                    updateButtonLink={this.props.updateButtonLink}\n                                />\n\n                            </TabPane>\n\n                            {/*<TabPane tab={\"Results' Filters\"} key={\"3\"}>*/}\n                                {/*Coming soon...*/}\n                            {/*</TabPane>*/}\n\n                            <TabPane tab={\"Email Auto-match\"} key={\"4\"}>\n\n                                <EAmForm\n                                    currentSolution={this.props.currentSolution}\n                                    sendSolutionAlerts={this.props.sendSolutionAlerts}\n                                    submitAutomaticAlerts={(e) => {this.props.updateAutomaticAlerts(e)}}\n                                />\n\n                            </TabPane>\n\n                        </Tabs>\n                    }\n                    </Animate>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Form.create()(SolutionsSettings)","import React from 'react'\nimport connect from \"react-redux/es/connect/connect\";\nimport styles from \"../../Assistants.module.less\";\nimport Header from \"../../../../../components/Header/Header\"\nimport SolutionsDisplay from \"./SolutionsDisplay/SolutionsDisplay\";\nimport SolutionsSettings from \"./SolutionsSettings/SolutionsSettings\";\nimport {solutionsActions} from \"../../../../../store/actions\";\nimport {isEmpty} from \"lodash\";\n\nclass Solutions extends React.Component{\n    state = {\n        currentSolution: {},\n        databaseFileTypes: [\"RDB XML File Export\"],\n        databaseCRMTypes: [\"Bullhorn\", \"RDB\"]\n    };\n\n    componentDidMount() {\n        const {assistant} = this.props.location.state;\n        this.props.dispatch(solutionsActions.getSolutions(assistant.ID))\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.solutions !== this.props.solutions) {\n            nextProps.solutionsData.map((solution) => {\n                if (solution.id === this.state.currentSolution.id)\n                    this.setState({currentSolution: solution})\n            })\n        }\n    }\n\n    selectSolution = (currentSolution) => this.setState({currentSolution});\n\n    addSolution = (newSolution) => {\n        const {assistant} = this.props.location.state;\n        this.props.dispatch(solutionsActions.addSolution({ID: assistant.ID, newSolution: newSolution}));\n    };\n\n    editSolution = (editedSolution) => {\n        const {assistant} = this.props.location.state;\n        this.props.dispatch(solutionsActions.editSolution({ID: assistant.ID, editedSolution: editedSolution}));\n    };\n\n    deleteSolution = (deletedSolution) => {\n        // const {assistant} = this.props.location.state;\n        // this.props.dispatch(flowActions.deleteSolutionRequest({ID: assistant.ID, deletedSolution: deletedSolution}));\n    };\n\n    updateInformationToDisplay = (information) => {\n        this.props.dispatch(solutionsActions.updateSolutionInformationToDisplay({\n            solutionID: this.state.currentSolution.Solution.ID,\n            information: information\n        }));\n    };\n\n    updateButtonLink = (information) => {\n        this.props.dispatch(solutionsActions.updateButtonLink({\n            solutionID: this.state.currentSolution.Solution.ID,\n            information: information\n        }));\n    };\n\n    sendSolutionAlerts = () => {\n        const {assistant} = this.props.location.state;\n        this.props.dispatch(solutionsActions.sendSolutionAlert({\n            assistantID: assistant,\n            solutionID: this.state.currentSolution.Solution.ID\n        }));\n    };\n\n    updateAutomaticAlerts = (switchState) => {\n        this.props.dispatch(solutionsActions.updateAutomaticSolutions({\n                solutionID: this.state.currentSolution.Solution.ID,\n                information: {\"setTo\": switchState}\n            }));\n    };\n\n    render(){\n        return (\n             <div style={{height: '100%'}}>\n                <div style={{padding: '0 5px'}}>\n                    <div style={{width: '100%', height: 56, marginBottom: 10}}>\n                        <Header display={\"Solutions\"}/>\n                    </div>\n                </div>\n\n                <div style={{height: 'calc(100% - 66px)', width: '100%', display: 'flex'}}>\n                    <div style={{margin: 5, width: '30%'}}>\n\n                        <SolutionsDisplay\n                            selectSolution={this.selectSolution}\n                            isLoading={this.props.isLoading}\n                            solutionsData={this.props.solutionsData}\n                            addSolution={this.addSolution}\n                            editSolution={this.editSolution}\n                            deleteSolution={this.deleteSolution}\n                            databaseFileTypes={this.state.databaseFileTypes}\n                            databaseCRMTypes={this.state.databaseCRMTypes}\n                        />\n\n                    </div>\n\n                    <div style={{margin: 5, width: '70%'}}>\n\n                        <SolutionsSettings\n                            currentSolution={this.state.currentSolution}\n                            updateInformationToDisplay={this.updateInformationToDisplay}\n                            updateButtonLink={this.updateButtonLink}\n                            updateAutomaticAlerts={this.updateAutomaticAlerts}\n                            sendSolutionAlerts={this.sendSolutionAlerts}\n                        />\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        solutionsData: state.solutions.solutionsData,\n        isLoading: state.solutions.isLoading,\n        errorMsg: state.solutions.errorMsg,\n    };\n}\n\nexport default connect(mapStateToProps)(Solutions)","import React from 'react';\nimport \"./Home.less\"\nimport styles from \"./Home.module.less\"\n\nclass Home extends React.Component {\n\n    state = {\n\n    };\n\n    render() {\n        return (\n\n            <div style={{height: '100%'}}>\n                <div className={styles.Panel}>\n                    <div className={styles.Panel_Header}>\n\n                    </div>\n\n                    <div className={styles.Panel_Body} style={{overflowY: \"auto\"}}>\n                        <h1>Welcome to the Dashboard.</h1>\n                        <h3>Use your side navigation to navigate the application.</h3>\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React, {Component} from 'react';\n\nimport {Avatar, Dropdown, Icon, Layout, Menu} from 'antd';\nimport \"./Dashboard.less\"\nimport styles from \"./Dashboard.module.less\"\nimport Assistants from './Assistants/Assistants';\nimport {getUser, history} from '../../helpers';\nimport {Route, Switch} from 'react-router-dom';\nimport Flow from \"./Assistants/Assistant/Flow/Flow\";\nimport Profile from \"./Profile/Profile\";\nimport Integration from \"./Assistants/Assistant/Integration/Integration\";\nimport UserInput from \"./Assistants/Assistant/UserInput/UserInput\";\nimport Solutions from \"./Assistants/Assistant/Solutions/Solutions\";\nimport Home from \"./Home/Home\";\nimport {authActions} from \"../../store/actions\";\nimport store from '../../store/store';\nimport {connect} from 'react-redux';\n\n\nconst {SubMenu} = Menu;\nconst {Divider} = Menu;\nconst {Header, Content, Footer, Sider} = Layout;\n\n\nclass Dashboard extends Component {\n    state = {\n        collapsed: false,\n        marginLeft: 200,\n    };\n\n    toggle = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        }, () => this.setState({marginLeft: this.state.collapsed ? 81 : 200}));\n    };\n\n    handleMenuClick = (e) => {\n        if (e.key === 'logout'){this.logout()}\n        e.key === 'dashboard' ? history.push(`/dashboard`) : history.push(`/dashboard/${e.key}`)\n    };\n\n    logout = () => {\n        store.dispatch(authActions.logout());\n    };\n\n    getInitials = (username) => {\n        const initials = username.match(/\\b\\w/g) || [];\n        return ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\n    };\n\n    render() {\n\n        const {match} = this.props;\n        const user = getUser();\n        let userInfo = null;\n\n        // User Information at the top\n        if (!user) {\n            this.logout();\n        } else {\n\n            let avatar = (\n                <Avatar size=\"large\" style={{ backgroundColor: '#9254de', verticalAlign: 'middle' }}>\n                    {this.getInitials(user.username || '')}\n                </Avatar>\n            );\n            let userInfoMenu = (\n                <Menu onClick={this.handleMenuClick}>\n                    <Menu.Item key=\"profile\">\n                        <div style={{display:'flex', marginTop:'10px'}}>\n                            {avatar}\n                            <div style={{marginLeft:'10px'}}>\n                                <h3>{user.username}</h3>\n                                <p>{user.email}</p>\n                            </div>\n                        </div>\n                    </Menu.Item>\n                    <Menu.Divider />\n                    <Menu.Item key=\"logout\" >\n                        <Icon type=\"logout\"/>\n                        <span>Logout</span>\n                    </Menu.Item>\n                </Menu>\n            );\n\n            userInfo = (\n                <Dropdown overlay={userInfoMenu} overlayStyle={{width:'255px'}}>\n                    {avatar}\n                </Dropdown>\n            );\n        }\n        // End of User Information\n\n\n        return (\n            <Layout style={{height: '100%'}}>\n                <Sider\n                    trigger={null}\n                    collapsible\n                    collapsed={this.state.collapsed}\n                    className={styles.Sider}>\n\n                    <div className={styles.Logo}>\n                        <div style={{display: 'flex'}}>\n                            <Icon type=\"cloud\" theme=\"twoTone\" twoToneColor=\"#9254de\" style={{fontSize: 44}}/>\n                            <div style={{lineHeight: '43px', marginLeft: 25}}>TheSearchBase</div>\n                        </div>\n                    </div>\n\n                    <Menu theme=\"light\" defaultSelectedKeys={['dashboard']} mode=\"inline\" onClick={this.handleMenuClick}>\n                        <Menu.Item key=\"dashboard\">\n                            <Icon type=\"home\"/>\n                            <span>Home</span>\n                        </Menu.Item>\n\n                        <Menu.Item key=\"assistants\">\n                            <Icon type=\"robot\"/>\n                            <span>Assistants</span>\n                        </Menu.Item>\n\n                        <Divider/>\n\n                        <SubMenu key=\"sub2\"\n                                 title={<span><Icon type=\"user\"/><span>Account Details</span></span>}>\n                            <Menu.Item key=\"profile\">\n                                <Icon type=\"profile\"/>\n                                Profile\n                            </Menu.Item>\n                            <Menu.Item key=\"users-management\" style={{fontSize: '9pt'}}>\n                                <Icon type=\"usergroup-add\"/>Users Management\n                            </Menu.Item>\n                        </SubMenu>\n\n                        {/*<Menu.Item key=\"billing\">*/}\n                            {/*<Icon type=\"dollar\"/>*/}\n                            {/*<span>Billing</span>*/}\n                        {/*</Menu.Item>*/}\n                        <Menu.Item key=\"support\">\n                            <Icon type=\"question-circle\"/>\n                            <span>Support</span>\n                        </Menu.Item>\n                    </Menu>\n                </Sider>\n\n                <Layout style={{marginLeft: this.state.marginLeft, height: '100%'}}>\n\n                    <Header className={styles.Header}>\n                        <Icon\n                            className={styles.Trigger}\n                            type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\n                            onClick={this.toggle}\n                        />\n                        <div className={styles.UserInfo}>\n                            {userInfo}\n                        </div>\n                    </Header>\n\n                    {/*HERE GOES ALL THE ROUTES*/}\n                    <Content style={{margin: 16, marginTop: 10, marginBottom: 0, height: '100%'}}>\n                        <Switch>\n                            <Route path={`${match.path}/assistants/:id/flow`} component={Flow}/>\n                            <Route path={`${match.path}/assistants/:id/integration`} component={Integration}/>\n                            <Route path={`${match.path}/assistants/:id/userInput`} component={UserInput}/>\n                            <Route path={`${match.path}/assistants/:id/solutions`} component={Solutions}/>\n                            <Route path={`${match.path}/assistants`} component={Assistants} exact/>\n                            <Route path={`${match.path}/profile`} component={Profile} exact/>\n                            <Route path=\"/dashboard\" component={Home}/>\n                        </Switch>\n                    </Content>\n\n                    <Footer style={{textAlign: 'center', padding: 10}}>\n                        Copyright TheSearchBase Limited 2019. All rights reserved.\n                    </Footer>\n                </Layout>\n            </Layout>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        profile: state.profile.profile\n    };\n}\n\nexport default connect(mapStateToProps)(Dashboard);","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {authActions} from '../../store/actions/index';\nimport styles from './Login.module.less';\nimport './Login.less';\n\nimport {Button, Col, Form, Icon, Input, Row, Spin} from 'antd';\n\n\nconst FormItem = Form.Item;\nclass Login extends React.Component {\n\n    state = {\n        isLoggin: false\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                //this.setState({isLoggin: true});\n                console.log('Received values of form: ', values);\n                this.props.dispatch(authActions.login(values.email, values.password));\n            }\n        });\n    };\n\n    handleLogout = () => {\n        this.props.dispatch(authActions.logout());\n    };\n\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <div className={styles.LoginBackground}>\n                <div className={[styles.LoginPanel, styles.fadeIn].join(' ')}>\n                    <Spin spinning={this.state.isLoggin}>\n                        <Row type=\"flex\" justify=\"center\">\n                            <Col>\n                                <h1>Login Page</h1>\n                            </Col>\n                        </Row>\n\n                        <Row type=\"flex\" justify=\"center\">\n                            <Col>\n                                <img width={100}\n                                     src=\"https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/login_jdch.svg\"\n                                     alt=\"\"/>\n                            </Col>\n                        </Row>\n\n                        <br/>\n\n                        <Row type=\"flex\" justify=\"center\">\n                            <Col>\n                                <Form onSubmit={this.handleSubmit} layout={'horizontal'}>\n                                    <FormItem>\n                                        {getFieldDecorator('email', {\n                                            rules: [{required: true, message: 'Please input your email!'}],\n                                        })(\n                                            <Input prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                                   placeholder=\"Email\"/>\n                                        )}\n                                    </FormItem>\n                                    <FormItem>\n                                        {getFieldDecorator('password', {\n                                            rules: [{required: true, message: 'Please input your Password!'}],\n                                        })(\n                                            <Input prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                                   type=\"password\"\n                                                   placeholder=\"Password\"/>\n                                        )}\n                                    </FormItem>\n                                </Form>\n                            </Col>\n                        </Row>\n\n                        <Row type=\"flex\" justify=\"center\">\n                            <Col span={12}>\n                                <Button type=\"primary\" htmlType=\"submit\"\n                                        style={{width: '100%'}}\n                                        onClick={this.handleSubmit}>\n                                    Log in\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br/>\n\n                        <Row type=\"flex\" justify=\"center\">\n                            <Col>\n                                <a className=\"login-form-forgot\" href=\"account/resetpassword\">Forgot password?</a>\n                            </Col>\n                        </Row>\n\n\n                        <br/>\n                    </Spin>\n                </div>\n            </div>\n        );\n\n\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        isLoggingIn: state.auth.isLoggingIn\n    };\n}\n\nconst loginForm = Form.create()(Login);\nexport default connect(mapStateToProps)(loginForm);\n","import React, {Component} from 'react';\nimport {Switch, Route, withRouter, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {history} from './helpers';\nimport {notification} from 'antd';\nimport './App.less';\n\nimport {PrivateRoute} from './hoc';\nimport Dashboard from \"./application/Dashboard/Dashboard\";\nimport Login from './application/Login/Login'\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        history.listen((location, action) => {\n            // Clear recent notifications boxes when route changes\n            notification.destroy();\n        });\n    }\n\n    render() {\n        return (\n            <Switch>\n                {/* <Route exact path=\"/\" component={Home} /> */}\n                <Route path=\"/login\" component={Login}/>\n                <PrivateRoute path=\"/dashboard\" component={Dashboard}/>\n                <Redirect to={{pathname: '/dashboard'}}/>\n            </Switch>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const {alert} = state;\n    return {\n        alert,\n    };\n};\nexport default withRouter(connect(mapStateToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.less';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport {history} from './helpers'\nimport store from './store/store'\n\n\nconst app = (\n\n    <Provider store={store}>\n        <Router history={history} >\n            <App />\n        </Router>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"SolutionsSettings_Logo__-M3TE\",\"Trigger\":\"SolutionsSettings_Trigger__2uKYf\",\"Header\":\"SolutionsSettings_Header__2u5U6\",\"Sider\":\"SolutionsSettings_Sider__8yC7m\",\"Panel\":\"SolutionsSettings_Panel__3JrMw\",\"Panel_With_Header\":\"SolutionsSettings_Panel_With_Header__3vCaR\",\"Panel_Header\":\"SolutionsSettings_Panel_Header__5GrWU\",\"Panel_Body\":\"SolutionsSettings_Panel_Body__rSfYL\",\"Panel_Body_Only\":\"SolutionsSettings_Panel_Body_Only__goB2o\",\"Panel_Header_Button\":\"SolutionsSettings_Panel_Header_Button__2xRGw\",\"Select\":\"SolutionsSettings_Select__1r6J2\",\"Input\":\"SolutionsSettings_Input__N3-xY\",\"Button\":\"SolutionsSettings_Button__MOWTM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Integration_Logo__95x6p\",\"Trigger\":\"Integration_Trigger__2Se00\",\"Header\":\"Integration_Header__1BlRc\",\"Sider\":\"Integration_Sider__2KM_8\",\"Panel\":\"Integration_Panel__YQm7V\",\"Panel_With_Header\":\"Integration_Panel_With_Header__1vwGy\",\"Panel_Header\":\"Integration_Panel_Header__3fTNI\",\"Panel_Body\":\"Integration_Panel_Body__4hmlE\",\"Panel_Body_Only\":\"Integration_Panel_Body_Only__2uxaX\",\"Panel_Header_Button\":\"Integration_Panel_Header_Button__2re5I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Assistants_Logo__1_c55\",\"Trigger\":\"Assistants_Trigger__2L37K\",\"Header\":\"Assistants_Header__1p-1G\",\"Sider\":\"Assistants_Sider__206sR\",\"Panel\":\"Assistants_Panel__1ntI9\",\"Panel_With_Header\":\"Assistants_Panel_With_Header__2KVCE\",\"Panel_Header\":\"Assistants_Panel_Header__29BDR\",\"Panel_Body\":\"Assistants_Panel_Body__2GgUc\",\"Panel_Body_Only\":\"Assistants_Panel_Body_Only__3T20i\",\"Panel_Header_Button\":\"Assistants_Panel_Header_Button__3zsj3\",\"AssistantsList\":\"Assistants_AssistantsList__Q3wG3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Dashboard_Logo__1tX2D\",\"Trigger\":\"Dashboard_Trigger__3AedD\",\"Header\":\"Dashboard_Header__3Btdm\",\"Sider\":\"Dashboard_Sider__2ZI11\",\"Panel\":\"Dashboard_Panel__3xGal\",\"Panel_With_Header\":\"Dashboard_Panel_With_Header__223E9\",\"Panel_Header\":\"Dashboard_Panel_Header__WjA5O\",\"Panel_Body\":\"Dashboard_Panel_Body__2CCNs\",\"Panel_Body_Only\":\"Dashboard_Panel_Body_Only__1ghhm\",\"Panel_Header_Button\":\"Dashboard_Panel_Header_Button__3e-Uv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Groups_Logo__1Xp0E\",\"Trigger\":\"Groups_Trigger__3Ucdo\",\"Header\":\"Groups_Header__62fiz\",\"Sider\":\"Groups_Sider__2qjgl\",\"Panel\":\"Groups_Panel__2qp5F\",\"Panel_With_Header\":\"Groups_Panel_With_Header__1JGwO\",\"Panel_Header\":\"Groups_Panel_Header__r-Yxh\",\"Panel_Body\":\"Groups_Panel_Body__6n_iM\",\"Panel_Body_Only\":\"Groups_Panel_Body_Only__2bKFB\",\"Panel_Header_Button\":\"Groups_Panel_Header_Button__1lCxR\",\"groupsList\":\"Groups_groupsList__30oXd\"};"],"sourceRoot":""}