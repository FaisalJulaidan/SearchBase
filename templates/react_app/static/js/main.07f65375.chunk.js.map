{"version":3,"sources":["application/Dashboard/Profile/Profile.module.less","application/Dashboard/Assistants/Assistant/Flow/Header/Header.module.less","application/Dashboard/Assistants/Assistant/Assistant.less","application/Login/Login.module.less","index.less","App.less","application/Dashboard/Dashboard.less","application/Dashboard/Assistants/Assistants.less","application/Dashboard/Assistants/Assistant/AssistantSettings/AssistantSettingsModal/AssistantSettingsModal.less","application/Dashboard/Assistants/NewAssistantModal/NewAssistantModal.less","application/Dashboard/Assistants/Assistant/Flow/Flow.less","application/Dashboard/Assistants/Assistant/Flow/Groups/Groups.less","application/Dashboard/Assistants/Assistant/Flow/Groups/NewGroup/NewGroup.less","application/Dashboard/Assistants/Assistant/Flow/Blocks/Blocks.less","application/Dashboard/Assistants/Assistant/Flow/Header/Header.less","application/Dashboard/Profile/Profile.less","application/Login/Login.less","helpers/history.js","helpers/auth.js","store/actions/actionTypes.js","store/utility.js","store/reducers/auth.reducer.js","store/reducers/assistant.reducer.js","store/reducers/flow.reducer.js","store/reducers/assistantSettings.reducer.js","store/reducers/index.js","store/actions/auth.actions.js","store/actions/assistant.actions.js","store/actions/flow.actions.js","store/actions/assistantSettings.actions.js","store/sagas/auth.saga.js","store/sagas/assistant.saga.js","store/sagas/flow.saga.js","store/sagas/assistantSettings.saga.js","store/store.js","helpers/http.js","hoc/PrivateRoute.js","application/Dashboard/Assistants/Assistant/AssistantSettings/AssistantSettingsModal/AssistantSettingsModal.js","application/Dashboard/Assistants/Assistant/AssistantSettings/AssistantSettings.js","application/Dashboard/Assistants/Assistant/Assistant.js","application/Dashboard/Assistants/NewAssistantModal/NewAssistantModal.js","application/Dashboard/Assistants/Assistants.js","application/Dashboard/Assistants/Assistant/Flow/Groups/NewGroup/NewGroup.js","application/Dashboard/Assistants/Assistant/Flow/Groups/EditGroup/EditGroup.js","application/Dashboard/Assistants/Assistant/Flow/Groups/Groups.js","application/Dashboard/Assistants/Assistant/Flow/Blocks/Block/Block.js","application/Dashboard/Assistants/Assistant/Flow/Blocks/NewBlockModal/Cards/UserInput.js","application/Dashboard/Assistants/Assistant/Flow/Blocks/NewBlockModal/Cards/Question.js","application/Dashboard/Assistants/Assistant/Flow/Blocks/NewBlockModal/Cards/FileUpload.js","application/Dashboard/Assistants/Assistant/Flow/Blocks/NewBlockModal/Cards/Solutions.js","application/Dashboard/Assistants/Assistant/Flow/Blocks/NewBlockModal/NewBlockModal.js","application/Dashboard/Assistants/Assistant/Flow/Blocks/Blocks.js","application/Dashboard/Assistants/Assistant/Flow/Header/Header.js","application/Dashboard/Assistants/Assistant/Flow/Flow.js","application/Dashboard/Profile/Profile.js","application/Dashboard/Dashboard.js","application/Login/Login.js","App.js","serviceWorker.js","index.js","application/Dashboard/Assistants/Assistant/Flow/Flow.module.less","application/Dashboard/Assistants/Assistants.module.less","application/Dashboard/Dashboard.module.less"],"names":["module","exports","__webpack_require__","p","history","createBrowserHistory","authHeader","token","localStorage","getItem","refresh","Authorization","checkAuthenticity","user","JSON","parse","getUser","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","AUTH_CHECK_TIMEOUT","REFRESH_TOKEN","FETCH_ASSISTANTS_REQUEST","ADD_ASSISTANT_REQUEST","UPDATE_ASSISTANT_SETTINGS_REQUEST","FETCH_FLOW_REQUEST","ADD_GROUP_REQUEST","EDIT_GROUP_REQUEST","DELETE_GROUP_REQUEST","updateObject","oldObject","updatedValues","Object","objectSpread","initialState","isAuthenticated","assistantList","isLoading","errorMsg","blockGroups","rootReducer","combineReducers","auth","state","arguments","length","undefined","action","type","actionTypes","isLoggingIn","error","msg","assistant","isAdding","successMsg","flow","isAddingGroup","addSuccessMsg","isEditingGroup","editSuccessMsg","isDeletingGroup","deleteSuccessMsg","settings","authActions","login","email","password","loginSuccess","loginFailure","logout","refreshToken","checkAuthTimeout","expirationTime","assistantActions","fetchAssistants","fetchAssistantsSuccess","fetchAssistantsFailure","addAssistant","newAssistant","addAssistantSuccess","addAssistantFailure","flowActions","fetchFlowRequest","ID","fetchFlowSuccess","args","fetchFlowFailure","addGroupRequest","values","newGroup","addGroupSuccess","addGroupFailure","editGroupRequest","editedGroup","editGroupSuccess","editGroupFailure","deleteGroupRequest","deletedGroup","deleteGroupSuccess","deleteGroupFailure","assistantSettingsActions","updateAssistantSettingsRequest","updateAssistantSettingsSuccess","updateAssistantSettingsFailure","watchCheckAuthTimeout","watchLogin","watchLogout","watchRefreshToken","authSaga","_ref","regenerator_default","a","wrap","_context","prev","next","delay","put","stop","_marked","this","_context2","takeEvery","_marked2","_ref2","res","_ref3","expiresIn","secondsToExpire","_context3","axios","post","headers","Content-Type","sent","data","setItem","stringify","Date","getTime","push","t0","console","log","response","_marked3","_context4","takeLatest","_marked4","_context5","clear","_marked5","_context6","_marked6","_ref4","_res$data$data","_context7","Error","_marked7","_context8","_marked8","_context9","all","_marked9","watchFetchAssistants","watchAddAssistant","assistantSaga","http","get","abrupt","assistant_saga_marked","assistant_saga_marked2","assistant_saga_marked3","assistant_saga_marked4","assistant_saga_marked5","fetchFlow","addGroup","editGroup","deleteGroup","watchFetchFlow","watchAddGroup","watchEditGroup","watchDeleteGroup","flowSaga","concat","flow_saga_marked","flow_saga_marked2","flow_saga_marked3","delete","id","flow_saga_marked4","flow_saga_marked5","flow_saga_marked6","flow_saga_marked7","flow_saga_marked8","flow_saga_marked9","updateAssistantSettings","watchUpdateAssistantSettings","settingsSage","updatedSettings","assistantSettings_saga_marked","assistantSettings_saga_marked2","assistantSettings_saga_marked3","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","create","baseURL","interceptors","request","use","config","header","Promise","reject","status","dispatch","PrivateRoute","Component","component","rest","objectWithoutProperties","react_default","createElement","Route","assign","render","props","Redirect","to","pathname","from","location","FormItem","Form","Item","AssistantSettingsModal","isPopupDisabled","_this","SecondsUntilPopup","togglePopupSwitch","setState","handleSave","form","validateFields","err","secondsUntilPopup","inputValue","formItemLayout","labelCol","span","wrapperCol","getFieldDecorator","modal","title","visible","width","destroyOnClose","onCancel","handleCancel","footer","es_button","key","onClick","es_form","layout","label","extra","initialValue","Name","rules","required","message","input","placeholder","Message","TopBarText","es_switch","checked","onChange","style","marginRight","input_number","disabled","min","className","AssistantSettings","hideModal","AssistantSettings_AssistantSettingsModal_AssistantSettingsModal","connect","Meta","Card","covers","Assistant","showModal","Fragment","card","loading","margin","float","height","cover","alt","src","Math","floor","random","defaultChecked","Active","actions","icon","Link","dropdown","overlay","es_menu","Divider","menu","trigger","description","Assistant_AssistantSettings_AssistantSettings","Option","Select","NewAssistantModal","handleAdd","prevProps","destroy","success","onOk","handleOk","NewAssistantModal_FormItem","es_select","value","Assistants","Boolean","successSettings","errorSettings","_this2","styles","Panel","Panel_Header","Panel_Header_Button","Panel_Body","AssistantsList","map","i","Assistants_Assistant_Assistant","index","skeleton","active","Assistants_NewAssistantModal_NewAssistantModal","NewGroup","NewGroup_FormItem","EditGroup","handleUpdate","group","name","handleDelete","EditGroup_FormItem","Groups","newGroupModal","editGroupModal","selectedGroupToEdit","handleAddGroup","handleAddGroupCancel","showNewGroupModal","handleEditGroup","handleEditGroupCancel","showEditGroupModal","item","handleDeleteGroup","Header","PanelButton","Groups_NewGroup_NewGroup","Body","spin","es_list","itemLayout","dataSource","groupsList","renderItem","avatar","backgroundColor","selectGroup","Groups_EditGroup_EditGroup","Collapse","Block","block","collapse","bordered","content","text","UserInput","nextProps","beforeAdd","handleNewBlock","blockTypes","options","blockOptions","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","blockType","return","UserInput_FormItem","validations","validation","UserInput_Option","Question","Question_FormItem","Question_Option","FileUpload","FileUpload_FormItem","FileUpload_Option","Solutions","Solutions_FormItem","Solutions_Option","TabPane","Tabs","NewBlockModal","currentTab","onBeforeAdd","addedBlock","closeModal","handleAddBlock","onChangeTab","then","tabs","tab","Cards_UserInput","Cards_Question","Cards_FileUpload","Cards_Solutions","Blocks","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","blocks","onDragEnd","bind","assertThisInitialized","result","destination","list","startIndex","endIndex","Array","_result$splice","splice","removed","slicedToArray","reorder","source","currentGroup","overflowY","react_beautiful_dnd_esm","droppableId","provided","ref","innerRef","draggableId","order","draggableProps","dragHandleProps","draggableStyle","Blocks_Block_Block","Blocks_NewBlockModal_NewBlockModal","display","context","router","goBack","shape","size","assistantName","contextTypes","PropTypes","object","Flow","addBlock","editBlock","deleteBlock","padding","marginBottom","Flow_Header_Header","Flow_Groups_Groups","Flow_Blocks_Blocks","Profile","SubMenu","Menu","Layout","Content","Footer","Sider","Dashboard","collapsed","marginLeft","toggle","handleMenuClick","e","match","collapsible","Logo","theme","twoToneColor","fontSize","lineHeight","defaultSelectedKeys","mode","Dashboard_Header","marginTop","Switch","path","exact","textAlign","Login","handleSubmit","preventDefault","handleLogout","onSubmit","Login_FormItem","prefix","color","htmlType","React","loginForm","App","listen","search","hash","PrivateRoute_PrivateRoute","withRouter","alert","hostname","app","es","Router","src_App_0","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.07f65375.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Profile.module.5377a583.less\";","module.exports = __webpack_public_path__ + \"static/media/Header.module.9429bcc5.less\";","module.exports = __webpack_public_path__ + \"static/media/Assistant.5b1ec137.less\";","module.exports = __webpack_public_path__ + \"static/media/Login.module.117e57c2.less\";","module.exports = __webpack_public_path__ + \"static/media/index.daecba26.less\";","module.exports = __webpack_public_path__ + \"static/media/App.affbd259.less\";","module.exports = __webpack_public_path__ + \"static/media/Dashboard.75097976.less\";","module.exports = __webpack_public_path__ + \"static/media/Assistants.d5ac313a.less\";","module.exports = __webpack_public_path__ + \"static/media/AssistantSettingsModal.7275d4cd.less\";","module.exports = __webpack_public_path__ + \"static/media/NewAssistantModal.80353ed2.less\";","module.exports = __webpack_public_path__ + \"static/media/Flow.ebf6eb74.less\";","module.exports = __webpack_public_path__ + \"static/media/Groups.d41d8cd9.less\";","module.exports = __webpack_public_path__ + \"static/media/NewGroup.d41d8cd9.less\";","module.exports = __webpack_public_path__ + \"static/media/Blocks.d41d8cd9.less\";","module.exports = __webpack_public_path__ + \"static/media/Header.d41d8cd9.less\";","module.exports = __webpack_public_path__ + \"static/media/Profile.d41d8cd9.less\";","module.exports = __webpack_public_path__ + \"static/media/Login.61a71afb.less\";","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();","\nexport const authHeader = () => {\n    // return authorization header with jwt token\n    let token = localStorage.getItem('token');\n    let refresh = localStorage.getItem('refresh');\n    if (!token || !refresh) {return null}\n    return {'Authorization': 'Bearer ' + token};\n}\n\n\nexport const getUser = () => {\n    // return user from local storage\n    let user = JSON.parse(localStorage.getItem('user'));\n    if(!user){return null;}\n    return user;\n}\n\nexport const checkAuthenticity = () => {\n    return !(!getUser() || !authHeader());\n\n}\n\n","export const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const LOGOUT = 'LOGOUT';\nexport const AUTH_CHECK_TIMEOUT = 'AUTH_CHECK_TIMEOUT';\nexport const REFRESH_TOKEN = 'REFRESH_TOKEN';\n\n\n\nexport const FETCH_ASSISTANTS_REQUEST = 'FETCH_ASSISTANTS_REQUEST';\nexport const FETCH_ASSISTANTS_SUCCESS = 'FETCH_ASSISTANTS_SUCCESS';\nexport const FETCH_ASSISTANTS_FAILURE = 'FETCH_ASSISTANTS_FAILURE';\n\n    export const ADD_ASSISTANT_REQUEST = 'ADD_ASSISTANTS_REQUEST';\n    export const ADD_ASSISTANT_SUCCESS = 'ADD_ASSISTANT_SUCCESS';\n    export const ADD_ASSISTANT_FAILURE = 'ADD_ASSISTANT_FAILURE';\n\n    export const UPDATE_ASSISTANT_SETTINGS_REQUEST = 'UPDATE_ASSISTANT_SETTINGS_REQUEST';\n    export const UPDATE_ASSISTANT_SETTINGS_SUCCESS = 'UPDATE_ASSISTANT_SETTINGS_SUCCESS';\n    export const UPDATE_ASSISTANT_SETTINGS_FAILURE = 'UPDATE_ASSISTANT_SETTINGS_FAILURE';\n\n\nexport const FETCH_FLOW_REQUEST = 'FETCH_FLOW_REQUEST';\nexport const FETCH_FLOW_SUCCESS = 'FETCH_FLOW_SUCCESS';\nexport const FETCH_FLOW_FAILURE = 'FETCH_FLOW_FAILURE';\n\n    export const ADD_GROUP_REQUEST = 'ADD_GROUP_REQUEST';\n    export const ADD_GROUP_SUCCESS = 'ADD_GROUP_SUCCESS';\n    export const ADD_GROUP_FAILURE = 'ADD_GROUP_FAILURE';\n\n    export const EDIT_GROUP_REQUEST = 'EDIT_GROUP_REQUEST';\n    export const EDIT_GROUP_SUCCESS = 'EDIT_GROUP_SUCCESS';\n    export const EDIT_GROUP_FAILURE = 'EDIT_GROUP_FAILURE';\n\n    export const DELETE_GROUP_REQUEST = 'DELETE_GROUP_REQUEST';\n    export const DELETE_GROUP_SUCCESS = 'DELETE_GROUP_SUCCESS';\n    export const DELETE_GROUP_FAILURE = 'DELETE_GROUP_FAILURE';\n\n\n\n\n","export const updateObject = (oldObject, updatedValues) => {\n    return {\n        ...oldObject,\n        ...updatedValues\n    }\n};\n","import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../utility';\n\nlet user = JSON.parse(localStorage.getItem('user'));\nconst initialState = user ? {isAuthenticated: true, user} : {isAuthenticated: false, user: null};\n\nexport const auth = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.LOGIN_REQUEST:\n            return updateObject(state, {\n                errorMsg: null,\n                isLoggingIn: true,\n            });\n        case actionTypes.LOGIN_SUCCESS:\n            return updateObject(state, {\n                isLoggingIn: false,\n                isAuthenticated: true,\n                user: action.user\n            });\n        case actionTypes.LOGIN_FAILURE:\n            return updateObject(state, {\n                isLoggingIn: false,\n                isAuthenticated: false,\n                user: null,\n                errorMsg: action.error.msg\n            });\n        case actionTypes.LOGOUT:\n            return updateObject(state, {\n                isLoggingIn: false,\n                isAuthenticated: false,\n                user: null,\n                errorMsg: null\n            });\n        default:\n            return state\n    }\n};","import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../utility';\n\nconst initialState = {assistantList: [], isLoading: false, errorMsg: null};\n\nexport const assistant = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.FETCH_ASSISTANTS_REQUEST:\n            return updateObject(state, {\n                assistantList: [],\n                errorMsg: null,\n                isLoading: true\n            });\n        case actionTypes.FETCH_ASSISTANTS_SUCCESS:\n            return updateObject(state, {\n                assistantList: action.assistantList,\n                isLoading: false\n            });\n        case actionTypes.FETCH_ASSISTANTS_FAILURE:\n            return updateObject(state, {\n                assistantList: [],\n                isLoading: false,\n                errorMsg: action.error.msg\n            });\n\n\n        case actionTypes.ADD_ASSISTANT_REQUEST:\n            return updateObject(state, {\n                errorMsg: null,\n                isAdding: true\n            });\n        case actionTypes.ADD_ASSISTANT_SUCCESS:\n            return updateObject(state, {\n                successMsg: action.successMsg,\n                isAdding: false\n            });\n        case actionTypes.ADD_ASSISTANT_FAILURE:\n            return updateObject(state, {\n                isAdding: false,\n                errorMsg: action.error.msg\n            });\n\n\n        default:\n            return state\n    }\n};","import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../utility';\n\nconst initialState = {isLoading: false, errorMsg: null, blockGroups: []};\n\nexport const flow = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.FETCH_FLOW_REQUEST:\n            return updateObject(state, {\n                isLoading: true\n            });\n        case actionTypes.FETCH_FLOW_SUCCESS:\n            return updateObject(state, {\n                isLoading: false,\n                blockGroups: action.blockGroups\n            });\n        case actionTypes.FETCH_FLOW_FAILURE:\n            return updateObject(state, {\n                isLoading: false,\n                errorMsg: action.error.msg\n            });\n\n\n        case actionTypes.ADD_GROUP_REQUEST:\n            return updateObject(state, {\n                isAddingGroup: true\n            });\n        case actionTypes.ADD_GROUP_SUCCESS:\n            return updateObject(state, {\n                isAddingGroup: false,\n                addSuccessMsg: action.msg\n            });\n        case actionTypes.ADD_GROUP_FAILURE:\n            return updateObject(state, {\n                isAddingGroup: false,\n                errorMsg: action.error.msg\n            });\n\n\n        case actionTypes.EDIT_GROUP_REQUEST:\n            return updateObject(state, {\n                isEditingGroup: true\n            });\n        case actionTypes.EDIT_GROUP_SUCCESS:\n            return updateObject(state, {\n                isEditingGroup: false,\n                editSuccessMsg: action.msg\n            });\n        case actionTypes.EDIT_GROUP_FAILURE:\n            return updateObject(state, {\n                isEditingGroup: false,\n                errorMsg: action.error.msg\n            });\n\n\n        case actionTypes.DELETE_GROUP_REQUEST:\n            return updateObject(state, {\n                isDeletingGroup: true\n            });\n        case actionTypes.DELETE_GROUP_SUCCESS:\n            return updateObject(state, {\n                isDeletingGroup: false,\n                deleteSuccessMsg: action.msg\n            });\n        case actionTypes.DELETE_GROUP_FAILURE:\n            return updateObject(state, {\n                isDeletingGroup: false,\n                errorMsg: action.error.msg\n            });\n\n\n        default:\n            return state\n    }\n};","import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../utility';\n\nconst initialState = {isLoading: false, errorMsg: null};\n\nexport const settings = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.UPDATE_ASSISTANT_SETTINGS_REQUEST:\n            return updateObject(state, {\n                successMsg: null,\n                errorMsg: null,\n                isLoading: true\n            });\n        case actionTypes.UPDATE_ASSISTANT_SETTINGS_SUCCESS:\n            return updateObject(state, {\n                successMsg: action.successMsg,\n                isLoading: false\n            });\n        case actionTypes.UPDATE_ASSISTANT_SETTINGS_FAILURE:\n            return updateObject(state, {\n                isLoading: false,\n                errorMsg: action.error.msg\n            });\n        default:\n            return state\n    }\n};","import {combineReducers} from 'redux';\nimport {auth} from './auth.reducer';\nimport {assistant} from \"./assistant.reducer\";\nimport {flow} from \"./flow.reducer\";\nimport {settings} from \"./assistantSettings.reducer\";\n\n\nconst rootReducer = combineReducers({\n    auth,\n    assistant,\n    flow,\n    settings\n});\n\nexport default rootReducer;","import * as actionTypes from './actionTypes';\n\n\nfunction login (email, password) {\n    return {\n        type: actionTypes.LOGIN_REQUEST,\n        email,\n        password\n    };\n}\n\nfunction loginSuccess (user) {\n    return {\n        type: actionTypes.LOGIN_SUCCESS,\n        user\n    };\n}\n\nfunction loginFailure (error) {\n    return {\n        type: actionTypes.LOGIN_FAILURE,\n        error\n    };\n}\n\n\nconst logout = () => {\n    return {\n        type: actionTypes.LOGOUT\n    };\n};\n\nconst checkAuthTimeout = (expirationTime, refresh) => {\n    return {\n        type: actionTypes.AUTH_CHECK_TIMEOUT,\n        expirationTime, refresh\n    };\n};\n\nconst refreshToken = (refresh) => {\n    return {\n        type: actionTypes.REFRESH_TOKEN,\n        refresh\n    };\n};\n\nexport const authActions = {\n    login,\n    loginSuccess,\n    loginFailure,\n    logout,\n    refreshToken,\n    checkAuthTimeout\n};","import * as actionTypes from './actionTypes';\n\n\nconst fetchAssistants = () => {\n    return {\n        type: actionTypes.FETCH_ASSISTANTS_REQUEST\n    };\n};\n\nconst fetchAssistantsSuccess = (assistantList) => {\n    return {\n        type: actionTypes.FETCH_ASSISTANTS_SUCCESS,\n        assistantList\n    };\n};\n\nconst fetchAssistantsFailure = (error) => {\n    return {\n        type: actionTypes.FETCH_ASSISTANTS_FAILURE,\n        error\n    };\n};\n\n\nconst addAssistant = (newAssistant) => {\n    return {\n        type: actionTypes.ADD_ASSISTANT_REQUEST,\n        newAssistant\n    };\n};\n\nconst addAssistantSuccess = (successMsg) => {\n    return {\n        type: actionTypes.ADD_ASSISTANT_SUCCESS,\n        successMsg\n    };\n};\n\nconst addAssistantFailure = (error) => {\n    return {\n        type: actionTypes.ADD_ASSISTANT_FAILURE,\n        error\n    };\n};\n\nexport const assistantActions = {\n    fetchAssistants,\n    fetchAssistantsSuccess,\n    fetchAssistantsFailure,\n    addAssistant,\n    addAssistantSuccess,\n    addAssistantFailure\n};","import * as actionTypes from './actionTypes';\n\n\nconst fetchFlowRequest = (ID) => {\n    return {\n        type: actionTypes.FETCH_FLOW_REQUEST,\n        ID\n    };\n};\n\nconst fetchFlowSuccess = (args) => {\n    return {\n        type: actionTypes.FETCH_FLOW_SUCCESS,\n        blockGroups: args.blockGroups\n    };\n};\n\nconst fetchFlowFailure = (error) => {\n    return {\n        type: actionTypes.FETCH_FLOW_FAILURE,\n        error\n    };\n};\n\n//////////////////////////////////////////\n\nconst addGroupRequest = (values) => {\n    return {\n        type: actionTypes.ADD_GROUP_REQUEST,\n        ID: values.ID,\n        newGroup: values.newGroup\n    };\n};\n\nconst addGroupSuccess = (msg) => {\n    return {\n        type: actionTypes.ADD_GROUP_SUCCESS,\n        msg\n    };\n};\n\nconst addGroupFailure = (error) => {\n    return {\n        type: actionTypes.ADD_GROUP_FAILURE,\n        error\n    };\n};\n\n//////////////////////////////////////////\n\nconst editGroupRequest = (values) => {\n    return {\n        type: actionTypes.EDIT_GROUP_REQUEST,\n        ID: values.ID,\n        editedGroup: values.editedGroup\n    };\n};\n\nconst editGroupSuccess = (msg) => {\n    return {\n        type: actionTypes.EDIT_GROUP_SUCCESS,\n        msg\n    };\n};\n\nconst editGroupFailure = (error) => {\n    return {\n        type: actionTypes.EDIT_GROUP_FAILURE,\n        error\n    };\n};\n\n//////////////////////////////////////////\n\nconst deleteGroupRequest = (values) => {\n    return {\n        type: actionTypes.DELETE_GROUP_REQUEST,\n        ID: values.ID,\n        deletedGroup: values.deletedGroup\n    };\n};\n\nconst deleteGroupSuccess = (msg) => {\n    return {\n        type: actionTypes.DELETE_GROUP_SUCCESS,\n        msg\n    };\n};\n\nconst deleteGroupFailure = (error) => {\n    return {\n        type: actionTypes.DELETE_GROUP_FAILURE,\n        error\n    };\n};\n\n//////////////////////////////////////////\n\n\nexport const flowActions = {\n    fetchFlowRequest,\n    fetchFlowSuccess,\n    fetchFlowFailure,\n\n    addGroupRequest,\n    addGroupSuccess,\n    addGroupFailure,\n\n    editGroupRequest,\n    editGroupSuccess,\n    editGroupFailure,\n\n    deleteGroupRequest,\n    deleteGroupSuccess,\n    deleteGroupFailure\n};","import * as actionTypes from './actionTypes';\n\n\nconst updateAssistantSettingsRequest = (args) => {\n    return {\n        type: actionTypes.UPDATE_ASSISTANT_SETTINGS_REQUEST,\n        ...args\n    };\n};\n\nconst updateAssistantSettingsSuccess = (successMsg) => {\n    return {\n        type: actionTypes.UPDATE_ASSISTANT_SETTINGS_SUCCESS,\n        successMsg\n    };\n};\n\nconst updateAssistantSettingsFailure = (error) => {\n    return {\n        type: actionTypes.UPDATE_ASSISTANT_SETTINGS_FAILURE,\n        error\n    };\n};\n\nexport const assistantSettingsActions = {\n    updateAssistantSettingsRequest,\n    updateAssistantSettingsSuccess,\n    updateAssistantSettingsFailure\n};","import * as actionTypes from '../actions/actionTypes';\nimport { delay } from \"redux-saga\";\nimport { put, takeEvery, takeLatest, all } from 'redux-saga/effects'\nimport { authActions } from \"../actions\";\nimport { history, checkAuthenticity } from '../../helpers'\nimport axios from 'axios';\n\n\nfunction* checkAuthTimeout({expirationTime, refresh}) {\n    yield delay(expirationTime * 1000);\n    yield put(authActions.refreshToken(refresh));\n}\n\nfunction* watchCheckAuthTimeout() {\n    yield takeEvery(actionTypes.AUTH_CHECK_TIMEOUT, checkAuthTimeout)\n}\n\nfunction* login({email, password}) {\n    try {\n        const res = yield axios.post(`/api/auth`, {email, password}, {\n            headers: {'Content-Type': 'application/json'},\n        });\n\n        const {user, token, refresh, expiresIn} = yield res.data.data;\n        yield localStorage.setItem(\"user\", JSON.stringify(user));\n        yield localStorage.setItem(\"token\", token);\n        yield localStorage.setItem(\"refresh\", refresh);\n        yield localStorage.setItem(\"expiresIn\", expiresIn);\n        // When access token expires in seconds\n        const secondsToExpire = yield (new Date(expiresIn).getTime() - new Date().getTime()) / 1000\n        // Dispatch actions\n        yield put(authActions.loginSuccess(user));\n        yield put(authActions.checkAuthTimeout(secondsToExpire, refresh)); // refresh to access token when expired\n        // Redirect to dashboard page\n        yield history.push('/dashboard');\n    } catch (error) {\n        console.log(error);\n        yield put(authActions.loginFailure(error.response.data));\n    }\n}\n\nfunction* watchLogin() {\n    yield takeLatest(actionTypes.LOGIN_REQUEST, login)\n}\n\nfunction* logout() {\n    // Clear local storage from user, token...\n    yield localStorage.clear();\n    yield history.push('/login');\n}\n\nfunction* watchLogout() {\n    yield takeLatest(actionTypes.LOGOUT, logout)\n}\n\nfunction* refreshToken({refresh}) {\n    try {\n        if(!checkAuthenticity()){throw new Error('Authentication Failed')}\n        const res = yield axios.post(`/api/auth/refresh`, null,{\n            headers: {'Authorization': 'Bearer ' + refresh},\n        });\n\n        const {token, expiresIn} = res.data.data;\n        yield localStorage.setItem(\"token\", token);\n        yield localStorage.setItem(\"expiresIn\", expiresIn);\n        const secondsToExpire = yield (new Date(expiresIn).getTime() - new Date().getTime()) / 1000;\n        yield put(authActions.checkAuthTimeout(secondsToExpire, refresh));\n\n\n    } catch (error) {\n        console.log(error);\n        // Log the user out\n        yield put(authActions.logout());\n    }\n}\n\nfunction* watchRefreshToken() {\n    yield takeEvery(actionTypes.REFRESH_TOKEN, refreshToken)\n}\n\nexport function* authSaga() {\n    yield all([\n        watchLogin(),\n        watchLogout(),\n        watchCheckAuthTimeout(),\n        watchRefreshToken()\n    ])\n}\n","import {put, takeEvery, all} from 'redux-saga/effects'\nimport * as actionTypes from '../actions/actionTypes';\nimport {assistantActions, authActions} from \"../actions\";\nimport {http} from \"../../helpers\";\n\nfunction* fetchAssistants() {\n    try {\n        const res = yield http.get(`/assistants`);\n        return yield put(assistantActions.fetchAssistantsSuccess(res.data.data))\n    } catch (error) {\n        console.log(error);\n        return yield put(assistantActions.fetchAssistantsFailure(error.response.data));\n    }\n\n}\n\nfunction* addAssistant({type, newAssistant}) {\n    try {\n        const res = yield http.post(`/assistants`, newAssistant);\n        yield put(assistantActions.addAssistantSuccess(res.data.msg));\n        return yield put(assistantActions.fetchAssistants())\n    } catch (error) {\n        console.log(error);\n        //\n        // yield localStorage.removeItem('user');\n        // yield put(authActions.logout());\n        // return yield put(assistantActions.fetchAssistantsFailure(error.response.data));\n    }\n\n}\n\nfunction* watchFetchAssistants() {\n    yield takeEvery(actionTypes.FETCH_ASSISTANTS_REQUEST, fetchAssistants)\n}\n\nfunction* watchAddAssistant() {\n    yield takeEvery(actionTypes.ADD_ASSISTANT_REQUEST, addAssistant)\n}\n\n\nexport function* assistantSaga() {\n    yield all([\n        watchFetchAssistants(),\n        watchAddAssistant()\n    ])\n}","import {put, takeEvery, all} from 'redux-saga/effects'\nimport * as actionTypes from '../actions/actionTypes';\nimport {flowActions} from \"../actions/flow.actions\";\nimport {http} from \"../../helpers\";\nimport {delay} from \"redux-saga\";\n\nfunction* fetchFlow(action) {\n    try {\n        const res = yield http.get(`/assistant/${action.ID}/flow`);\n        return yield put(flowActions.fetchFlowSuccess(res.data.data))\n    } catch (error) {\n        console.log(error);\n        return yield put(flowActions.fetchFlowFailure(error.response.data));\n    }\n\n}\n\nfunction* addGroup(action) {\n    try {\n        const res = yield http.post(`/assistant/${action.ID}/flow/group`, action.newGroup);\n        yield put(flowActions.addGroupSuccess(res.data.msg));\n        return yield put(flowActions.fetchFlowRequest(action.ID))\n    } catch (error) {\n        console.log(error);\n        return yield put(flowActions.addGroupFailure(error.response.data));\n    }\n\n}\n\nfunction* editGroup(action) {\n    try {\n        const res = yield http.put(`/assistant/${action.ID}/flow/group`, action.editedGroup);\n        yield put(flowActions.editGroupSuccess(res.data.msg));\n        return yield put(flowActions.fetchFlowRequest(action.ID))\n    } catch (error) {\n        console.log(error);\n        return yield put(flowActions.editGroupFailure(error.response.data));\n    }\n}\n\nfunction* deleteGroup({type, ID, deletedGroup}) {\n    try {\n        console.log(deletedGroup)\n        const res = yield http.delete(`/assistant/${ID}/flow/group`, { data: { id: deletedGroup.id } });\n        yield put(flowActions.deleteGroupSuccess(res.data.msg));\n        return yield put(flowActions.fetchFlowRequest(ID))\n    } catch (error) {\n        console.log(error);\n        return yield put(flowActions.deleteGroupFailure(error.response.data));\n    }\n}\n\n\nfunction* watchFetchFlow() {\n    yield takeEvery(actionTypes.FETCH_FLOW_REQUEST, fetchFlow)\n}\n\nfunction* watchAddGroup() {\n    yield takeEvery(actionTypes.ADD_GROUP_REQUEST, addGroup)\n}\n\nfunction* watchEditGroup() {\n    yield takeEvery(actionTypes.EDIT_GROUP_REQUEST, editGroup)\n}\n\nfunction* watchDeleteGroup() {\n    yield takeEvery(actionTypes.DELETE_GROUP_REQUEST, deleteGroup)\n}\n\n\nexport function* flowSaga() {\n    yield all([\n        watchFetchFlow(),\n        watchAddGroup(),\n        watchEditGroup(),\n        watchDeleteGroup()\n    ])\n}","import {put, takeEvery, all} from 'redux-saga/effects'\nimport * as actionTypes from '../actions/actionTypes';\nimport {http} from \"../../helpers\";\nimport {assistantActions, assistantSettingsActions} from \"../actions\";\n\nfunction* updateAssistantSettings(action) {\n    try {\n        const res = yield http.put(`assistant/${action.ID}`, action.updatedSettings);\n        yield put(assistantSettingsActions.updateAssistantSettingsSuccess(res.data.msg));\n        return yield put(assistantActions.fetchAssistants())\n    } catch (error) {\n        console.log(error);\n        return yield put(assistantSettingsActions.updateAssistantSettingsFailure(error.response.data));\n    }\n}\n\nfunction* watchUpdateAssistantSettings() {\n    yield takeEvery(actionTypes.UPDATE_ASSISTANT_SETTINGS_REQUEST, updateAssistantSettings)\n}\n\n\nexport function* settingsSage() {\n    yield all([\n        watchUpdateAssistantSettings()\n    ])\n}","import {createStore, applyMiddleware, compose} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './reducers';\nimport {assistantSaga, authSaga, flowSaga, settingsSage} from './sagas'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(flowSaga);\nsagaMiddleware.run(assistantSaga);\nsagaMiddleware.run(authSaga);\nsagaMiddleware.run(settingsSage);\n\n\nexport default store;","import axios from 'axios';\nimport {authHeader} from './auth';\nimport store from '../store/store';\nimport { authActions } from \"../store/actions\";\n\nexport const http = axios.create({\n    baseURL: '/api',\n    headers: {'Content-Type': 'application/json'},\n});\n\nhttp.interceptors.request.use(\n    function (config) {\n        const header = authHeader();\n        if (!header) throw new Error('Token required!');  \n        config.headers = header;\n        return config;\n    },\n    function (error) {\n        console.log(error);\n        return Promise.reject(error);\n    }\n);\n\nhttp.interceptors.response.use(response => {\n    return response;\n}, error => {\n    if (error.response.status === 401) {\n        console.log('Axios Unauthorised');\n        store.dispatch(authActions.logout());\n    }\n    return Promise.reject(error);\n});","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport {checkAuthenticity} from  '../helpers'\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\n    console.log(\"Check Authenticity\", checkAuthenticity());\n    return (\n        <Route {...rest} render={props => (\n            checkAuthenticity()\n                ? <Component {...props} />\n                : <Redirect to={{pathname: '/login', state: {from: props.location}}}/>\n        )}/>\n    )\n}","import React, {Component} from 'react';\nimport \"./AssistantSettingsModal.less\"\nimport {Button, Form, Input, InputNumber, Modal, Switch} from \"antd\";\n\nconst FormItem = Form.Item;\n\n\nclass AssistantSettingsModal extends Component {\n    state = {\n        isPopupDisabled: this.props.assistant.SecondsUntilPopup <= 0\n    };\n\n    togglePopupSwitch = () => {\n        this.setState({isPopupDisabled: !this.state.isPopupDisabled})\n    }\n\n\n    componentDidMount() {\n        this.setState({\n            inputValue: this.props.assistant.SecondsUntilPopup\n        });\n    }\n\n    handleSave = () => {\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                if(this.state.isPopupDisabled) {values.secondsUntilPopup = 0}\n                this.props.handleSave(values)\n            }\n        });\n    };\n\n    render() {\n        const formItemLayout = {\n            labelCol: {span: 6},\n            wrapperCol: {span: 14},\n        };\n        const {getFieldDecorator} = this.props.form;\n        const {assistant} = this.props;\n\n        const {inputValue} = this.state;\n        console.log(this.state.isPopupDisabled)\n        console.log(this.props.assistant.SecondsUntilPopup)\n\n        return (\n            <Modal\n                title=\"Edit Assistant\"\n                visible={this.props.visible}\n                width={800}\n                destroyOnClose={true}\n                onCancel={this.props.handleCancel}\n                footer={[\n                    <Button key=\"cancel\" onClick={this.props.handleCancel}>Cancel</Button>,\n                    <Button key=\"submit\" type=\"primary\" onClick={this.handleSave}>\n                        Save\n                    </Button>,\n                ]}>\n\n                <Form layout='horizontal'>\n                    <FormItem\n                        label=\"Assistant Name\"\n                        extra=\"Enter a name for your assistant to easily identify it in the dashboard\"\n                        {...formItemLayout}>\n                        {\n                            getFieldDecorator('assistantName', {\n                                initialValue: assistant.Name,\n                                rules: [{\n                                    required: true,\n                                    message: 'Please input your assistant name',\n                                }],\n                            })\n                            (<Input placeholder=\"Ex: My first assistant, Sales Assistant\"/>)\n                        }\n                    </FormItem>\n\n                    <FormItem\n                        label=\"Welcome Message\"\n                        extra=\"This will be sent as first message\"\n                        {...formItemLayout}>\n\n                        {\n                            getFieldDecorator('welcomeMessage', {\n                                initialValue: assistant.Message,\n                                rules: [{\n                                    required: true,\n                                    message: 'Please input your welcome message',\n                                }],\n                            })(\n                                <Input placeholder=\"Ex: Hey there, Welcome visitor\"/>\n                            )\n                        }\n                    </FormItem>\n\n                    <FormItem\n                        label=\"Header Title\"\n                        extra=\"This will apear on top of your chatbot\"\n                        {...formItemLayout}>\n                        {\n                            getFieldDecorator('topBarTitle', {\n                                initialValue: assistant.TopBarText,\n                                rules: [{\n                                    required: true,\n                                    message: 'Please input your header title',\n                                }],\n                            })(\n                                <Input placeholder=\"Ex: Recruiter Bot\"/>\n                            )\n                        }\n                    </FormItem>\n\n                    <FormItem\n                    {...formItemLayout}\n                    label=\"Time to Popup\"\n                    extra=\"This will enforce the assistants' (chatbot) to popup automatically\"\n                    >\n                    <Switch checked={!this.state.isPopupDisabled} onChange={this.togglePopupSwitch} style={{marginRight: '5px'}} />\n                    {getFieldDecorator('secondsUntilPopup', { initialValue: assistant.SecondsUntilPopup === 0 ? 1 : assistant.SecondsUntilPopup })(\n                        <InputNumber disabled={this.state.isPopupDisabled} min={1} />\n                    )}\n                    <span className=\"ant-form-text\"> seconds</span>\n                    </FormItem>\n\n                </Form>\n            </Modal>\n        );\n    }\n}\n\nexport default Form.create()(AssistantSettingsModal)\n","import React, {Component} from 'react';\nimport \"../Assistant.less\"\nimport connect from \"react-redux/es/connect/connect\";\nimport {assistantSettingsActions} from \"../../../../../store/actions\";\nimport AssistantSettingsModal from \"./AssistantSettingsModal/AssistantSettingsModal\";\n\nclass AssistantSettings extends Component {\n\n    handleSave = (updatedSettings) => {\n        this.props.hideModal();\n        // dispatch redux action\n        this.props.dispatch(assistantSettingsActions.updateAssistantSettingsRequest({\n            ID: this.props.assistant.ID,\n            updatedSettings: updatedSettings\n        }));\n    };\n\n    render() {\n        return (\n            <AssistantSettingsModal assistant={this.props.assistant} visible={this.props.visible}\n                                    handleSave={this.handleSave} handleCancel={this.props.hideModal}/>\n        )\n    }\n\n}\n\nconst mapStateToProps = (state) => ({\n    isLoading: state.settings.isLoading,\n});\nexport default connect(mapStateToProps)(AssistantSettings);\n","import React, {Component} from 'react';\nimport \"./Assistant.less\"\nimport {Card, Dropdown, Icon, Menu, Switch} from 'antd';\nimport {Link} from \"react-router-dom\";\nimport AssistantSettings from \"./AssistantSettings/AssistantSettings\";\n\nconst {Meta} = Card;\n\n\nconst menu = (assistant) => (\n    <Menu>\n        <Menu.Item key=\"1\">\n            <Link to={`solutions/${assistant.ID}`}>\n                <Icon type=\"database\"/> Solutions\n            </Link>\n        </Menu.Item>\n        <Menu.Item key=\"2\">\n            <Link to={`userInput/${assistant.ID}`}>\n                <Icon type=\"code\"/> User Input\n            </Link>\n        </Menu.Item>\n        <Menu.Item key=\"3\">\n            <Link to={`analytics/${assistant.ID}`}>\n                <Icon type=\"line-chart\"/> Analytics\n            </Link>\n        </Menu.Item>\n        <Menu.Divider/>\n        <Menu.Item key=\"4\">\n            <Link to={`integration/${assistant.ID}`}>\n                <Icon type=\"sync\"/> Integration\n            </Link>\n        </Menu.Item>\n    </Menu>\n);\n\nconst covers = [\n    'https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/active_support_6rwo.svg',\n    'https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/voice_control_ofo1.svg',\n    'https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/group_chat_v059.svg',\n    'https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/status_update_jjgk.svg',\n    'https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/messages1_9ah2.svg'\n];\n\n\nclass Assistant extends Component {\n\n    state = {visible: false};\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    hideModal = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    render() {\n        const {assistant} = this.props;\n        return (\n            <>\n                <Card loading={this.props.isLoading} style={{width: 300, margin: 15, float: 'left', height: 369}}\n                      cover={\n                          <img alt=\"example\"\n                               height={200}\n                               width=\"100%\"\n                               src={covers[Math.floor(Math.random() * covers.length)]}/>\n                      }\n                      title={assistant.Name}\n                      extra={<Switch defaultChecked={assistant.Active} onChange={this.onChange}/>}\n                      actions={[\n                          <div onClick={this.showModal}>\n                              <Icon type=\"setting\"/>\n                              <span> Settings</span>\n                          </div>,\n\n                          <div>\n                              <Link\n                                  to={{\n                                      pathname: `assistants/${assistant.ID}/flow`,\n                                      state: {assistant: assistant}\n                                  }}>\n                                  <Icon type=\"build\"/>\n                                  <span> Flow</span>\n                              </Link>\n                          </div>,\n\n                          <Dropdown overlay={menu(assistant)} trigger={['click']}>\n                              <a className=\"ant-dropdown-link\">\n                                  ...\n                              </a>\n                          </Dropdown>]}>\n                    <Meta description={assistant.TopBarText}/>\n                </Card>\n\n                <AssistantSettings assistant={assistant}\n                                   hideModal={this.hideModal}\n                                   visible={this.state.visible}/>\n\n            </>\n        )\n    }\n}\n\nexport default Assistant;\n","import React, {Component} from 'react';\nimport \"./NewAssistantModal.less\";\n\nimport {Button, Form, Input, Modal, Select, InputNumber, message, Switch} from 'antd';\nimport {connect} from \"react-redux\";\nimport {assistantActions} from \"../../../../store/actions\";\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\n\nconst loading = () => {\n    message.loading('Adding assistant', 0);\n};\n\nclass NewAssistantModal extends Component {\n\n    state = {\n        isPopupDisabled: true\n    };\n\n    togglePopupSwitch = () => {\n        this.setState({isPopupDisabled: !this.state.isPopupDisabled})\n    };\n\n    handleAdd = () => {\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                if(this.state.isPopupDisabled) {values.secondsUntilPopup = 0}\n                console.log(values);\n                // send to server\n                this.props.dispatch(assistantActions.addAssistant(values));\n                loading();\n            }\n        });\n    };\n\n    componentDidUpdate(prevProps) {\n        if (!this.props.isAdding && this.props.isAdding !== prevProps.isAdding) {\n            this.props.hideModal();\n            message.destroy();\n            message.success(this.props.successMsg)\n\n        }\n\n    }\n\n\n    render() {\n        const formItemLayout = {\n            labelCol: {span: 6},\n            wrapperCol: {span: 14},\n        };\n        const {getFieldDecorator} = this.props.form;\n\n        return (\n            <Modal\n                width={800}\n                title=\"Create New Assistant\"\n                visible={this.props.visible}\n                onOk={this.handleOk}\n                onCancel={this.handleCancel}\n                destroyOnClose={true}\n                footer={[\n                    <Button key=\"cancel\" onClick={this.props.hideModal}>Cancel</Button>,\n                    <Button key=\"submit\" type=\"primary\" onClick={this.handleAdd}>\n                        Add\n                    </Button>,\n                ]}>\n                <Form layout='horizontal'>\n                    <FormItem\n                        label=\"Assistant Name\"\n                        extra=\"Enter a name for your assistant to easily identify it in the dashboard\"\n                        {...formItemLayout}>\n                        {getFieldDecorator('assistantName', {\n                            rules: [{\n                                required: true,\n                                message: 'Please input your assistant name',\n                            }],\n                        })(\n                            <Input placeholder=\"Ex: My first assistant, Sales Assistant\"/>\n                        )}\n                    </FormItem>\n\n                    <FormItem\n                        label=\"Welcome Message\"\n                        extra=\"This will be sent as first message\"\n                        {...formItemLayout}>\n                        {getFieldDecorator('welcomeMessage', {\n                            rules: [{\n                                required: true,\n                                message: 'Please input your welcome message',\n                            }],\n                        })(\n                            <Input placeholder=\"Ex: Hey there, Welcome visitor\"/>\n                        )}\n                    </FormItem>\n\n                    <FormItem\n                        label=\"Header Title\"\n                        extra=\"This will apear on top of your chatbot\"\n                        {...formItemLayout}>\n                        {getFieldDecorator('topBarTitle', {\n                            rules: [{\n                                required: true,\n                                message: 'Please input your header title',\n                            }],\n                        })(\n                            <Input placeholder=\"Ex: Recruiter Bot\"/>\n                        )}\n                    </FormItem>\n\n                    <FormItem\n                    {...formItemLayout}\n                    label=\"Time to Popup\"\n                    extra=\"This will enforce the assistants' (chatbot) to popup automatically\"\n                    >\n                    <Switch defaultChecked={false} onChange={this.togglePopupSwitch} style={{marginRight: '5px'}} />\n                    {getFieldDecorator('secondsUntilPopup', { initialValue: 1 })(\n                        <InputNumber disabled={this.state.isPopupDisabled} min={1} />\n                    )}\n                    <span className=\"ant-form-text\"> seconds</span>\n                    </FormItem>\n\n                    <FormItem {...formItemLayout}\n                              label=\"Assistant Template\">\n\n                        {\n                            getFieldDecorator('template')(\n                                <Select placeholder=\"Please select template\">\n                                    <Option value=\"recruitment\">Recruitment</Option>\n                                    <Option value=\"Shopping\">Shopping</Option>\n                                    <Option value=\"Sales\">Sales</Option>\n                                </Select>\n                            )\n                        }\n                    </FormItem>\n                </Form>\n            </Modal>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        successMsg: state.assistant.successMsg,\n        isAdding: state.assistant.isAdding\n    };\n}\n\nexport default connect(mapStateToProps)(Form.create()(NewAssistantModal))\n","import React, {Component} from 'react';\nimport {Button, message, Skeleton} from 'antd';\nimport {connect} from 'react-redux';\n\nimport \"./Assistants.less\"\nimport styles from \"./Assistants.module.less\"\nimport Assistant from \"./Assistant/Assistant\"\n\nimport {assistantActions} from \"../../../store/actions/assistant.actions\";\nimport NewAssistantModal from \"./NewAssistantModal/NewAssistantModal\";\n\n\nclass Assistants extends Component {\n    state = {\n        visible: false,\n    };\n\n    componentDidUpdate(prevProps) {\n        // Show feedback for settings update\n        if (Boolean(this.props.successSettings) && Boolean(prevProps.successSettings) !== Boolean(this.props.successSettings))\n            message.success(this.props.successSettings);\n\n        if (Boolean(this.props.errorSettings) && Boolean(prevProps.errorSettings) !== Boolean(this.props.errorSettings))\n            message.error(this.props.errorSettings);\n    }\n\n\n    componentDidMount() {\n        this.props.dispatch(assistantActions.fetchAssistants());\n    }\n\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    hideModal = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n\n    render() {\n        return (\n\n            <div style={{height: '100%'}}>\n                <div className={styles.Panel}>\n                    <div className={styles.Panel_Header}>\n                        <div>\n                            <h3>Assistants List</h3>\n                            <p>Here you can see all assistants created by you</p>\n                        </div>\n                        <div>\n                            <Button className={styles.Panel_Header_Button} type=\"primary\" icon=\"plus\"\n                                    onClick={this.showModal}>\n                                Add Assistant\n                            </Button>\n                        </div>\n\n                    </div>\n\n\n                    <div className={styles.Panel_Body}>\n                        <div className={styles.AssistantsList}>\n                            {\n                                this.props.assistantList[0] ?\n                                    (\n                                        this.props.assistantList.map((assistant, i) => <Assistant assistant={assistant}\n                                                                                                  key={i}\n                                                                                                  index={i}\n                                                                                                  isLoading={this.props.isLoading}\n                                        />)\n                                    )\n                                    : <Skeleton active/>\n                            }\n                        </div>\n                    </div>\n\n                </div>\n\n\n                <NewAssistantModal visible={this.state.visible}\n                                   hideModal={this.hideModal}/>\n\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        assistantList: state.assistant.assistantList,\n        isLoading: state.assistant.isLoading,\n        successSettings: state.settings.successMsg,\n        errorSettings: state.settings.errorMsg,\n    };\n}\n\nexport default connect(mapStateToProps)(Assistants);\n","import React, {Component} from 'react';\nimport \"./NewGroup.less\"\nimport {Button, Modal, Form, Input} from \"antd\";\n\nconst FormItem = Form.Item;\n\nclass NewGroup extends Component {\n\n    state = {};\n\n    handleSave = () => this.props.form.validateFields((err, values) => {\n        if (!err)\n            this.props.handleSave(values)\n    });\n\n    render() {\n        const formItemLayout = {\n            labelCol: {span: 6},\n            wrapperCol: {span: 14},\n        };\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <Modal\n                width={800}\n                title=\"Create New Group\"\n                destroyOnClose={true}\n                visible={this.props.visible}\n                onOk={this.props.handleSave}\n                onCancel={this.props.handleCancel}\n                footer={[\n                    <Button key=\"Cancel\" onClick={this.props.handleCancel}>Cancel</Button>,\n                    <Button key=\"submit\" type=\"primary\" onClick={this.handleSave}>\n                        Add\n                    </Button>\n                ]}>\n                <Form layout='horizontal'>\n                    <FormItem\n                        label=\"Group Name\"\n                        extra=\"Enter a name for your group to easily identify it in the group list\"\n                        {...formItemLayout}>\n                        {getFieldDecorator('name', {\n                            rules: [{\n                                required: true,\n                                message: 'Please enter your group name',\n                            }],\n                        })(\n                            <Input placeholder=\"Ex: Greetings group, Sales group\"/>\n                        )}\n                    </FormItem>\n\n                    <FormItem\n                        label=\"Group Description\"\n                        extra=\"Just a description for you\"\n                        {...formItemLayout}>\n                        {getFieldDecorator('description', {\n                            rules: [{\n                                required: true,\n                                message: 'Please description to your group name',\n                            }],\n                        })(\n                            <Input placeholder=\"Ex: this is first group, this group help get info from user\"/>\n                        )}\n                    </FormItem>\n\n\n                </Form>\n            </Modal>\n        );\n    }\n}\n\nexport default Form.create()(NewGroup)","import React, {Component} from 'react';\nimport {Button, Modal, Form, Input} from \"antd\";\n\nconst FormItem = Form.Item;\n\nclass EditGroup extends Component {\n\n    state = {};\n\n    handleUpdate = () => this.props.form.validateFields((err, values) => {\n        if (!err) {\n            this.props.group.name = values.name;\n            this.props.group.description = values.description;\n            this.props.handleUpdate(this.props.group)\n        }\n    });\n\n\n    render() {\n        const formItemLayout = {\n            labelCol: {span: 6},\n            wrapperCol: {span: 14},\n        };\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <Modal\n                width={800}\n                title=\"Edit Group\"\n                visible={this.props.visible}\n                onOk={this.props.handleUpdate}\n                onCancel={this.props.handleCancel}\n                footer={[\n                    <Button key=\"delete\" type=\"danger\" onClick={() => this.props.handleDelete(this.props.group)}>\n                        Delete\n                    </Button>,\n                    <Button key=\"Cancel\" onClick={this.props.handleCancel}>Cancel</Button>,\n                    <Button key=\"submit\" type=\"primary\" onClick={this.handleUpdate}>\n                        Update\n                    </Button>\n                ]}>\n                <Form layout='horizontal'>\n                    <FormItem\n                        label=\"Group Name\"\n                        extra=\"Enter a name for your group to easily identify it in the group list\"\n                        {...formItemLayout}>\n                        {getFieldDecorator('name', {\n                            initialValue: this.props.group.name,\n                            rules: [{\n                                required: true,\n                                message: 'Please enter your group name',\n                            }],\n                        })(\n                            <Input placeholder=\"Ex: Greetings group, Sales group\"/>\n                        )}\n                    </FormItem>\n\n                    <FormItem\n                        label=\"Group Description\"\n                        extra=\"Just a description for you\"\n                        {...formItemLayout}>\n                        {getFieldDecorator('description', {\n                            initialValue: this.props.group.description,\n                            rules: [{\n                                required: true,\n                                message: 'Please description to your group name',\n                            }],\n                        })(\n                            <Input placeholder=\"Ex: this is first group, this group help get info from user\"/>\n                        )}\n                    </FormItem>\n\n\n                </Form>\n            </Modal>\n        );\n    }\n}\n\nexport default Form.create()(EditGroup)","import React, {Component} from 'react';\nimport \"./Groups.less\"\nimport styles from \"../Flow.module.less\";\nimport {Avatar, Button, List, Spin, Skeleton} from \"antd\";\nimport NewGroup from \"./NewGroup/NewGroup\";\nimport EditGroup from \"./EditGroup/EditGroup\";\n\nclass Groups extends Component {\n\n    state = {\n        newGroupModal: false,\n        editGroupModal: false,\n        selectedGroupToEdit: {}\n    };\n\n\n    ////// ADD GROUP\n    handleAddGroup = (newGroup) => {\n        this.props.addGroup(newGroup);\n        this.setState({newGroupModal: false});\n    };\n\n    handleAddGroupCancel = () => this.setState({newGroupModal: false});\n\n    showNewGroupModal = () => this.setState({newGroupModal: true});\n\n\n    ////// EDIT GROUP\n    handleEditGroup = (editedGroup) => {\n        this.props.editGroup(editedGroup);\n        this.setState({editGroupModal: false, selectedGroupToEdit: {}});\n    };\n\n    handleEditGroupCancel = () => this.setState({editGroupModal: false});\n\n    showEditGroupModal = (item) => this.setState({editGroupModal: true, selectedGroupToEdit: item});\n\n    ////// DELETE GROUP\n    handleDeleteGroup = (deletedGroup) => {\n        this.props.deleteGroup(deletedGroup);\n        this.setState({editGroupModal: false, selectedGroupToEdit: {}});\n    };\n\n\n    render() {\n        return (\n            <div className={styles.Panel}>\n                <div className={styles.Header}>\n                    <div>\n                        <h3>Flow Groups</h3>\n                    </div>\n                    <div>\n                        <Button className={styles.PanelButton} type=\"primary\" icon=\"plus\"\n                                onClick={this.showNewGroupModal}>\n                            Add Group\n                        </Button>\n\n                        <NewGroup visible={this.state.newGroupModal}\n                                  handleCancel={this.handleAddGroupCancel}\n                                  handleSave={this.handleAddGroup}/>\n                    </div>\n                </div>\n\n\n                <div className={styles.Body}>\n                    {\n                        this.props.isLoading ?\n                            <Spin><Skeleton active={true}/></Spin>\n                            :\n                            <List\n                                itemLayout=\"horizontal\"\n                                dataSource={this.props.groupsList}\n                                renderItem={item => (\n                                    <List.Item\n                                        actions={[<Button icon={'edit'}\n                                                          onClick={() => this.showEditGroupModal(item)}/>]}>\n                                        <List.Item.Meta\n                                            avatar={<Avatar icon=\"ordered-list\"\n                                                            style={{backgroundColor: '#9254de'}}/>}\n                                            title={<a onClick={() => this.props.selectGroup(item)}>{item.name}</a>}\n                                            description={item.description}\n                                        />\n                                    </List.Item>\n                                )}\n                            />\n                    }\n                </div>\n\n                <EditGroup group={this.state.selectedGroupToEdit}\n                           visible={this.state.editGroupModal}\n                           handleCancel={this.handleEditGroupCancel}\n                           handleUpdate={this.handleEditGroup}\n                           handleDelete={this.handleDeleteGroup}/>\n            </div>\n        );\n    }\n}\n\nexport default Groups;\n","import React, {Component} from 'react';\nimport {Button, Card, Collapse} from \"antd\";\n\nconst Panel = Collapse.Panel;\n\nclass Block extends Component {\n\n    render() {\n        const {block} = this.props;\n        return (\n            <Collapse bordered={true}>\n                <Panel header={block.content.text} key={this.props.key}>\n                    <Card title={block.content.text} style={{width: '100%'}} extra={<Button icon={'edit'}/>}>\n                        <h4>{block.type}</h4>\n                    </Card>\n                </Panel>\n            </Collapse>\n        );\n    }\n\n}\n\nexport default Block;\n\n","import React, {Component} from 'react';\nimport {Card, Form, Input, Select, Spin} from \"antd\";\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nclass UserInput extends Component {\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.beforeAdd)\n            this.props.form.validateFields((err, values) => {\n                if (!err)\n                    this.props.handleNewBlock(values);\n                else\n                    this.props.handleNewBlock({})\n            });\n    }\n\n    render() {\n        const {blockTypes} = this.props.options;\n\n        let blockOptions = {};\n        // extract the correct blockType from blockTypes[]\n        for (const blockType of blockTypes)\n            if (blockType.name === 'User Input')\n                blockOptions = blockType;\n\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <Card title=\"User Input\"\n                  style={{width: '100%'}}>\n\n                <Form layout='horizontal'>\n                    <FormItem label=\"Question\"\n                              extra=\"The above text will be shown in a bubble inside the chat\"\n                              {...this.props.options.layout}>\n                        {getFieldDecorator('text', {\n                            rules: [{\n                                required: true,\n                                message: \"Please input question field\",\n                            }],\n                        })(\n                            <Input placeholder=\"Ex: Where are you from?\"/>\n                        )}\n                    </FormItem>\n\n                    <FormItem label=\"Validation\"\n                              {...this.props.options.layout}>\n                        {\n                            blockOptions.validations ?\n                                getFieldDecorator('validation')(\n                                    <Select placeholder=\"Will validate the input\">{\n                                        blockOptions.validations.map((validation, i) =>\n                                            <Option key={i} value={validation}>{validation}</Option>)\n                                    }</Select>\n                                )\n                                : <Spin><Select placeholder=\"Will validate the input\"></Select></Spin>\n                        }\n                    </FormItem>\n\n                    <FormItem label=\"Action\"\n                              {...this.props.options.layout}>\n                        {\n                            blockOptions.actions ?\n                                getFieldDecorator('action', {\n                                    rules: [{\n                                        required: true,\n                                        message: \"Please input question field\",\n                                    }],\n                                })(\n                                    <Select placeholder=\"The next step after this block\">{\n                                        blockOptions.actions.map((action, i) =>\n                                            <Option key={i} value={action}>{action}</Option>)\n                                    }</Select>\n                                )\n                                : <Spin><Select placeholder=\"The next step after this block\"></Select></Spin>\n                        }\n                    </FormItem>\n\n                    <FormItem label=\"After message\"\n                              extra=\"\"\n                              {...this.props.options.layout}>\n                        {getFieldDecorator('afterMessage', {\n                            rules: [{\n                                required: true,\n                                message: \"Please input question field\",\n                            }],\n                        })(\n                            <Input placeholder=\"Ex: Your input is recorded\"/>\n                        )}\n                    </FormItem>\n\n                </Form>\n            </Card>\n        );\n    }\n}\n\nexport default Form.create()(UserInput);\n\n","import React, {Component} from 'react';\nimport {Card, Form, Input, Select, Spin} from \"antd\";\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nclass Question extends Component {\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.beforeAdd)\n            this.props.form.validateFields((err, values) => {\n                if (!err)\n                    this.props.handleNewBlock(values);\n                else\n                    this.props.handleNewBlock({})\n            });\n    }\n\n    render() {\n        const {blockTypes} = this.props.options;\n\n        let blockOptions = {};\n        // extract the correct blockType from blockTypes[]\n        for (const blockType of blockTypes)\n            if (blockType.name === 'Question')\n                blockOptions = blockType;\n\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <Card title=\"Question\"\n                  style={{width: '100%'}}>\n\n                <Form layout='horizontal'>\n                    <FormItem label=\"Question\"\n                              extra=\"The above text will be shown in a bubble inside the chat\"\n                              {...this.props.options.layout}>\n                        {getFieldDecorator('text', {\n                            rules: [{\n                                required: true,\n                                message: \"Please input question field\",\n                            }],\n                        })(\n                            <Input placeholder=\"Ex: Where are you from?\"/>\n                        )}\n                    </FormItem>\n\n                    <FormItem label=\"Action\"\n                              {...this.props.options.layout}>\n                        {\n                            blockOptions.actions ?\n                                getFieldDecorator('action')(\n                                    <Select placeholder=\"The next step after this block\">{\n                                        blockOptions.actions.map((action, i) =>\n                                            <Option key={i} value={action}>{action}</Option>)\n                                    }</Select>\n                                )\n                                : <Spin><Select placeholder=\"The next step after this block\"></Select></Spin>\n                        }\n                    </FormItem>\n\n                    <FormItem label=\"After message\"\n                              extra=\"\"\n                              {...this.props.options.layout}>\n                        {getFieldDecorator('afterMessage')(\n                            <Input placeholder=\"Ex: Your input is recorded\"/>\n                        )}\n                    </FormItem>\n\n                </Form>\n            </Card>\n        );\n    }\n}\n\nexport default Form.create()(Question);\n\n","import React, {Component} from 'react';\nimport {Card, Form, Input, Select, Spin} from \"antd\";\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nclass FileUpload extends Component {\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.beforeAdd)\n            this.props.form.validateFields((err, values) => {\n                if (!err)\n                    this.props.handleNewBlock(values);\n                else\n                    this.props.handleNewBlock({})\n            });\n    }\n\n    render() {\n        const {blockTypes} = this.props.options;\n\n        let blockOptions = {};\n        // extract the correct blockType from blockTypes[]\n        for (const blockType of blockTypes)\n            if (blockType.name === 'File Upload')\n                blockOptions = blockType;\n\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <Card title=\"File Upload\"\n                  style={{width: '100%'}}>\n\n                <Form layout='horizontal'>\n                    <FormItem label=\"Question\"\n                              extra=\"The above text will be shown in a bubble inside the chat\"\n                              {...this.props.options.layout}>\n                        {getFieldDecorator('text', {\n                            rules: [{\n                                required: true,\n                                message: \"Please input question field\",\n                            }],\n                        })(\n                            <Input placeholder=\"Ex: Where are you from?\"/>\n                        )}\n                    </FormItem>\n\n                    <FormItem label=\"Action\"\n                              {...this.props.options.layout}>\n                        {\n                            blockOptions.actions ?\n                                getFieldDecorator('action')(\n                                    <Select placeholder=\"The next step after this block\">{\n                                        blockOptions.actions.map((action, i) =>\n                                            <Option key={i} value={action}>{action}</Option>)\n                                    }</Select>\n                                )\n                                : <Spin><Select placeholder=\"The next step after this block\"></Select></Spin>\n                        }\n                    </FormItem>\n\n                    <FormItem label=\"After message\"\n                              extra=\"\"\n                              {...this.props.options.layout}>\n                        {getFieldDecorator('afterMessage')(\n                            <Input placeholder=\"Ex: Your input is recorded\"/>\n                        )}\n                    </FormItem>\n\n                </Form>\n            </Card>\n        );\n    }\n}\n\nexport default Form.create()(FileUpload);\n","import React, {Component} from 'react';\nimport {Card, Form, Input, Select, Spin} from \"antd\";\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nclass Solutions extends Component {\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.beforeAdd)\n            this.props.form.validateFields((err, values) => {\n                if (!err)\n                    this.props.handleNewBlock(values);\n                else\n                    this.props.handleNewBlock({})\n            });\n    }\n\n    render() {\n        const {blockTypes} = this.props.options;\n\n        let blockOptions = {};\n        // extract the correct blockType from blockTypes[]\n        for (const blockType of blockTypes)\n            if (blockType.name === 'Solutions')\n                blockOptions = blockType;\n\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <Card title=\"Solutions\"\n                  style={{width: '100%'}}>\n\n                <Form layout='horizontal'>\n                    <FormItem label=\"Question\"\n                              extra=\"The above text will be shown in a bubble inside the chat\"\n                              {...this.props.options.layout}>\n                        {getFieldDecorator('text', {\n                            rules: [{\n                                required: true,\n                                message: \"Please input question field\",\n                            }],\n                        })(\n                            <Input placeholder=\"Ex: Where are you from?\"/>\n                        )}\n                    </FormItem>\n\n                    <FormItem label=\"Action\"\n                              {...this.props.options.layout}>\n                        {\n                            blockOptions.actions ?\n                                getFieldDecorator('action')(\n                                    <Select placeholder=\"The next step after this block\">{\n                                        blockOptions.actions.map((action, i) =>\n                                            <Option key={i} value={action}>{action}</Option>)\n                                    }</Select>\n                                )\n                                : <Spin><Select placeholder=\"The next step after this block\"></Select></Spin>\n                        }\n                    </FormItem>\n\n                    <FormItem label=\"After message\"\n                              extra=\"\"\n                              {...this.props.options.layout}>\n                        {getFieldDecorator('afterMessage')(\n                            <Input placeholder=\"Ex: Your input is recorded\"/>\n                        )}\n                    </FormItem>\n\n                </Form>\n            </Card>\n        );\n    }\n}\n\nexport default Form.create()(Solutions);\n","import React, {Component} from 'react';\n\nimport {http} from \"../../../../../../../helpers\";\n\nimport {Button, Modal, Icon, Tabs} from 'antd';\n\nimport UserInput from \"./Cards/UserInput\";\nimport Question from \"./Cards/Question\";\nimport FileUpload from \"./Cards/FileUpload\";\nimport Solutions from \"./Cards/Solutions\";\n\nconst TabPane = Tabs.TabPane;\n\nclass NewBlockModal extends Component {\n\n    /*\n    *       EXPLANATION FOR THE LOGIC IN THIS COMPONENT\n    *\n    *       The logic here is to have all the data editing inside the cards\n    *       in order to collect the data from tabs, there is beforeAdd object\n    *       it has all tabs types and we run the one who is active\n    *       scenario after you open the modal:\n    *\n    *       1- select any tab (default = UserInput).\n    *\n    *       2- when select add it triggers the beforeAdd by change the state in ƒ(onBeforeAdd).\n    *\n    *       3- after change the state of beforeAdd for the active tab\n    *          ƒ(componentWillReceiveProps) will be running inside the active tab only.\n    *\n    *       4- ƒ(componentWillReceiveProps) will validate the form then run ƒ(handleNewBlock).\n    *\n    *       5- ƒ(handleNewBlock) will receive the new added block, and pass it to his parent (Blocks.js)\n    *          to be send to the server in (Flow.js) and reset the state to the default value.\n    */\n\n    state = {\n        beforeAdd: {UserInput: false, Question: false, FileUpload: false, Solutions: false},\n        currentTab: 'UserInput',\n        layout: {\n            labelCol: {span: 6},\n            wrapperCol: {span: 14}\n        },\n        blockTypes: []\n    };\n\n    componentDidMount() {\n        http.get(`/assistant/flow/options`)\n            .then(res => this.setState({blockTypes: res.data.data.blockTypes}))\n    }\n\n\n    onBeforeAdd = () => {\n        // To send the data of the active tab only\n        switch (this.state.currentTab) {\n            case 'UserInput':\n                return this.setState({\n                    beforeAdd: {UserInput: true, Question: false, FileUpload: false, Solutions: false}\n                });\n            case 'Question':\n                return this.setState({\n                    beforeAdd: {UserInput: false, Question: true, FileUpload: false, Solutions: false}\n                });\n            case 'FileUpload':\n                return this.setState({\n                    beforeAdd: {UserInput: false, Question: false, FileUpload: true, Solutions: false}\n                });\n            case 'Solutions':\n                return this.setState({\n                    beforeAdd: {UserInput: false, Question: false, FileUpload: false, Solutions: true}\n                });\n            default:\n                return this.setState({\n                    beforeAdd: {UserInput: false, Question: false, FileUpload: false, Solutions: false}\n                });\n        }\n    };\n\n    handleNewBlock = (addedBlock) => {\n        // Reset state\n        this.setState({\n            beforeAdd: {UserInput: false, Question: false, FileUpload: false, Solutions: false},\n            currentTab: 'UserInput'\n        }, () => {\n            this.props.closeModal();\n            this.props.handleAddBlock(addedBlock)\n        });\n    };\n\n    onChangeTab = (currentTab) => this.setState({currentTab});\n\n    render() {\n        return (\n            <Modal width={800}\n                   title=\"Add New Block\"\n                   visible={this.props.visible}\n                   onOk={this.handleAdd}\n                   onCancel={this.props.closeModal}\n                   destroyOnClose={true}\n                   footer={[\n                       <Button key=\"cancel\" onClick={this.props.closeModal}>Cancel</Button>,\n                       <Button key=\"submit\" type=\"primary\" onClick={this.onBeforeAdd}>\n                           Add\n                       </Button>\n                   ]}>\n\n                <Tabs type=\"card\" onChange={this.onChangeTab}>\n                    <TabPane tab={<span><Icon type=\"form\"/>User Input</span>}\n                             key=\"UserInput\">\n                        <UserInput options={this.state}\n                                   beforeAdd={this.state.beforeAdd.UserInput}\n                                   handleNewBlock={this.handleNewBlock}/>\n                    </TabPane>\n\n                    <TabPane tab={<span><Icon type=\"question-circle\"/>Question</span>}\n                             key=\"Question\">\n                        <Question options={this.state}\n                                  beforeAdd={this.state.beforeAdd.Question}\n                                  handleNewBlock={this.handleNewBlock}/>\n                    </TabPane>\n\n                    <TabPane tab={<span><Icon type=\"file-add\"/>File Upload</span>}\n                             key=\"FileUpload\">\n                        <FileUpload options={this.state}\n                                    beforeAdd={this.state.beforeAdd.FileUpload}\n                                    handleNewBlock={this.handleNewBlock}/>\n                    </TabPane>\n\n                    <TabPane tab={<span><Icon type=\"tag\"/>Solutions</span>}\n                             key=\"Solutions\">\n                        <Solutions options={this.state}\n                                   beforeAdd={this.state.beforeAdd.Solutions}\n                                   handleNewBlock={this.handleNewBlock}/>\n                    </TabPane>\n\n                </Tabs>\n            </Modal>\n        );\n    }\n}\n\n\nexport default NewBlockModal\n","import React, {Component} from 'react';\n\nimport \"./Blocks.less\"\nimport styles from \"../Flow.module.less\";\nimport {Button, Form} from \"antd\";\n\nimport Block from \"./Block/Block\";\nimport {DragDropContext, Droppable, Draggable} from 'react-beautiful-dnd';\nimport NewBlockModal from \"./NewBlockModal/NewBlockModal\";\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\nconst getItemStyle = draggableStyle => ({margin: `0 0 8px 0`, ...draggableStyle});\n\nclass Blocks extends Component {\n\n    state = {\n        visible: false,\n        blocks: []\n    };\n\n    constructor(props) {\n        super(props);\n        this.onDragEnd = this.onDragEnd.bind(this);\n    }\n\n    showModal = () => this.setState({visible: true});\n\n    closeModal = () => this.setState({visible: false});\n\n    onDragEnd(result) {\n        // dropped outside the list\n        if (!result.destination) return;\n\n        const blocks = reorder(this.state.blocks, result.source.index, result.destination.index);\n        this.setState({blocks});\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // This handles when updating the selected group to show its blocks\n        if (nextProps.currentGroup !== this.state.currentGroup && nextProps.currentGroup.blocks)\n            this.setState({blocks: nextProps.currentGroup.blocks})\n    }\n\n    handleAddBlock = (addedBlock) => {\n        console.log(addedBlock);\n        // pass it to Flow.js to be send to server there\n    };\n\n\n    render() {\n        return (\n            <div className={styles.Panel}>\n                <div className={styles.Header}>\n                    <div>\n                        <h3>{this.props.currentGroup.name} Blocks</h3>\n                    </div>\n                    <div>\n                        <Button className={styles.PanelButton} type=\"primary\" icon=\"plus\"\n                                onClick={this.showModal} disabled={!this.props.currentGroup.id}>\n                            Add Block\n                        </Button>\n                    </div>\n                </div>\n\n                <div className={styles.Body}>\n                    <div style={{height: \"100%\", width: '100%', overflowY: 'auto'}}>\n\n                        <DragDropContext onDragEnd={this.onDragEnd}>\n                            <Droppable droppableId=\"droppable\">\n                                {(provided) => (\n                                    <div ref={provided.innerRef}>\n                                        {this.state.blocks.map((block, index) => (\n                                            <Draggable key={block.id} draggableId={block.order} index={index}>\n                                                {(provided) => (\n                                                    <div ref={provided.innerRef} {...provided.draggableProps}\n                                                         {...provided.dragHandleProps}\n                                                         style={getItemStyle(provided.draggableProps.style)}>\n                                                        <Block block={block}/>\n                                                    </div>\n                                                )}\n                                            </Draggable>\n                                        ))}\n                                        {provided.placeholder}\n                                    </div>\n                                )}\n                            </Droppable>\n                        </DragDropContext>\n                    </div>\n                </div>\n\n                <NewBlockModal visible={this.state.visible}\n                               handleAddBlock={this.handleAddBlock}\n                               closeModal={this.closeModal}/>\n            </div>\n        );\n    }\n}\n\nexport default Form.create()(Blocks);\n","import React, {Component} from 'react';\n\nimport \"./Header.less\"\nimport styles from \"./Header.module.less\";\nimport {Button} from \"antd\";\nimport PropTypes from 'prop-types';\n\n\nclass Header extends Component {\n    static contextTypes = {\n        router: PropTypes.object\n    };\n\n\n    render() {\n\n        return (\n            <div className={styles.Panel}>\n                <div className={styles.Header}>\n                    <div style={{display: '-webkit-inline-box'}}>\n                        <Button onClick={this.context.router.history.goBack}\n                                type=\"primary\" icon=\"left\" shape=\"circle\" size={\"small\"}></Button>\n                        <h3>{this.props.assistantName}</h3>\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nHeader.propTypes = {\n    assistantName: PropTypes.string,\n};\n\nexport default Header;\n","import React, {Component} from 'react';\nimport \"./Flow.less\"\n\nimport Groups from \"./Groups/Groups\";\nimport Blocks from \"./Blocks/Blocks\";\nimport Header from \"./Header/Header\";\nimport {flowActions} from \"../../../../../store/actions\";\nimport connect from \"react-redux/es/connect/connect\";\nimport {message} from \"antd\";\n\nclass Flow extends Component {\n\n    state = {\n        currentGroup: {blocks: []}\n    };\n\n    componentDidMount() {\n        const {assistant} = this.props.location.state;\n        this.props.dispatch(flowActions.fetchFlowRequest(assistant.ID))\n    }\n\n    selectGroup = (currentGroup) => this.setState({currentGroup});\n\n\n    // GROUPS\n    addGroup = (newGroup) => {\n        const {assistant} = this.props.location.state;\n        this.props.dispatch(flowActions.addGroupRequest({ID: assistant.ID, newGroup: newGroup}));\n        message.loading(`Adding ${newGroup.name} group`, 0);\n    };\n\n    editGroup = (editedGroup) => {\n        const {assistant} = this.props.location.state;\n        this.props.dispatch(flowActions.editGroupRequest({ID: assistant.ID, editedGroup: editedGroup}));\n        message.loading(`Editing ${editedGroup.name} group`, 0);\n    };\n\n    deleteGroup = (deletedGroup) => {\n        const {assistant} = this.props.location.state;\n        this.props.dispatch(flowActions.deleteGroupRequest({ID: assistant.ID, deletedGroup: deletedGroup}));\n        message.loading(`Deleting ${deletedGroup.name} group`, 0);\n    };\n\n\n    // BLOCKS\n    addBlock = (newGroup) => {\n        const {assistant} = this.props.location.state;\n        // this.props.dispatch(flowActions.addGroupRequest({ID: assistant.ID, newGroup: newGroup}));\n        // message.loading(`Adding ${newGroup.name} group`, 0);\n    };\n\n    editBlock = (editedGroup) => {\n        const {assistant} = this.props.location.state;\n        // this.props.dispatch(flowActions.editGroupRequest({ID: assistant.ID, editedGroup: editedGroup}));\n        // message.loading(`Editing ${editedGroup.name} group`, 0);\n    };\n\n    deleteBlock = (deletedGroup) => {\n        const {assistant} = this.props.location.state;\n        // this.props.dispatch(flowActions.deleteGroupRequest({ID: assistant.ID, deletedGroup: deletedGroup}));\n        // message.loading(`Deleting ${deletedGroup.name} group`, 0);\n    };\n\n    componentDidUpdate(prevProps) {\n\n        if (!this.props.isAddingGroup && prevProps.addSuccessMsg !== this.props.addSuccessMsg) {\n            message.destroy();\n            message.success(this.props.addSuccessMsg);\n        }\n\n        if (!this.props.isEditingGroup && prevProps.editSuccessMsg !== this.props.editSuccessMsg) {\n            message.destroy();\n            message.success(this.props.editSuccessMsg);\n        }\n\n        if (!this.props.isDeletingGroup && prevProps.deleteSuccessMsg !== this.props.deleteSuccessMsg) {\n            message.destroy();\n            message.success(this.props.deleteSuccessMsg);\n        }\n    }\n\n    render() {\n        const {assistant} = this.props.location.state;\n\n        return (\n            <div style={{height: '100%'}}>\n                <div style={{padding: '0 5px'}}>\n                    <div style={{width: '100%', height: 56, marginBottom: 10}}>\n                        <Header assistantName={assistant.Name}/>\n                    </div>\n                </div>\n\n                <div style={{height: 'calc(100% - 66px)', width: '100%', display: 'flex'}}>\n                    <div style={{margin: 5, width: '30%'}}>\n\n                        <Groups selectGroup={this.selectGroup}\n                                isLoading={this.props.isLoading}\n                                groupsList={this.props.blockGroups}\n                                addGroup={this.addGroup}\n                                editGroup={this.editGroup}\n                                deleteGroup={this.deleteGroup}/>\n\n                    </div>\n\n                    <div style={{margin: 5, width: '70%'}}>\n                        <Blocks addBlock={this.addBlock}\n                                editBlock={this.editBlock}\n                                deleteBlock={this.deleteBlock}\n                                currentGroup={this.state.currentGroup}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        blockGroups: state.flow.blockGroups,\n        isLoading: state.flow.isLoading,\n\n        addSuccessMsg: state.flow.addSuccessMsg,\n        editSuccessMsg: state.flow.editSuccessMsg,\n        deleteSuccessMsg: state.flow.deleteSuccessMsg,\n\n        isAddingGroup: state.flow.isAddingGroup,\n        isEditingGroup: state.flow.isEditingGroup,\n        isDeletingGroup: state.flow.isDeletingGroup\n    };\n}\n\n\nexport default connect(mapStateToProps)(Flow);\n\n\n","import React, {Component} from 'react';\n\nimport \"./Profile.less\"\nimport styles from \"./Profile.module.less\"\nimport {Form, Input, InputNumber, Modal, Select, Switch} from \"antd\";\n\nclass Profile extends Component {\n    state = {};\n\n    render() {\n        return (\n            <div style={{height: '100%'}}>\n                <div className={styles.Panel}>\n                    <div className={styles.Panel_Header}>\n                        <div>\n                            <h3>User Profile</h3>\n                            <p>Here you can edit your profile configs</p>\n                        </div>\n                    </div>\n\n\n                    <div className={styles.Panel_Body}>\n\n                        <h3>Profile component works</h3>\n                        <p>You need to add components from ant-design</p>\n\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n\n}\n\nexport default Profile;\n","import React, {Component} from 'react';\n\nimport {Icon, Layout, Menu} from 'antd';\nimport \"./Dashboard.less\"\nimport styles from \"./Dashboard.module.less\"\nimport Assistants from './Assistants/Assistants';\nimport {history} from '../../helpers';\nimport {Switch, Route} from 'react-router-dom';\nimport Flow from \"./Assistants/Assistant/Flow/Flow\";\nimport Profile from \"./Profile/Profile\";\n\nconst {SubMenu} = Menu;\nconst {Divider} = Menu;\nconst {Header, Content, Footer, Sider} = Layout;\n\n\nclass Dashboard extends Component {\n    state = {\n        collapsed: false,\n        marginLeft: 200,\n    };\n\n    toggle = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        }, () => this.setState({marginLeft: this.state.collapsed ? 81 : 200}));\n    };\n\n    handleMenuClick = (e) => {\n        e.key === 'dashboard' ? history.push(`/dashboard`) : history.push(`/dashboard/${e.key}`)\n    };\n\n    render() {\n        const {match} = this.props;\n        return (\n            <Layout style={{height: '100%'}}>\n                <Sider\n                    trigger={null}\n                    collapsible\n                    collapsed={this.state.collapsed}\n                    className={styles.Sider}>\n\n                    <div className={styles.Logo}>\n                        <div style={{display: 'flex'}}>\n                            <Icon type=\"cloud\" theme=\"twoTone\" twoToneColor=\"#9254de\" style={{fontSize: 44}}/>\n                            <div style={{lineHeight: '43px', marginLeft: 25}}>TheSearchBase</div>\n                        </div>\n                    </div>\n\n                    <Menu theme=\"light\" defaultSelectedKeys={['1']} mode=\"inline\" onClick={this.handleMenuClick}>\n                        <Menu.Item key=\"dashboard\">\n                            <Icon type=\"home\"/>\n                            <span>Home</span>\n                        </Menu.Item>\n\n                        <Menu.Item key=\"assistants\">\n                            <Icon type=\"robot\"/>\n                            <span>Assistants</span>\n                        </Menu.Item>\n\n                        <Divider/>\n\n                        <SubMenu key=\"sub2\"\n                                 title={<span><Icon type=\"user\"/><span>Account Detail</span></span>}>\n                            <Menu.Item key=\"profile\">\n                                <Icon type=\"profile\"/>\n                                Profile\n                            </Menu.Item>\n                            <Menu.Item key=\"users-management\" style={{fontSize: '9pt'}}>\n                                <Icon type=\"usergroup-add\"/>Users Management\n                            </Menu.Item>\n                        </SubMenu>\n\n                        <Menu.Item key=\"billing\">\n                            <Icon type=\"dollar\"/>\n                            <span>Billing</span>\n                        </Menu.Item>\n                        <Menu.Item key=\"support\">\n                            <Icon type=\"question-circle\"/>\n                            <span>Support</span>\n                        </Menu.Item>\n                    </Menu>\n                </Sider>\n\n                <Layout style={{marginLeft: this.state.marginLeft, height: '100%'}}>\n\n                    <Header className={styles.Header}>\n                        <Icon\n                            className={styles.trigger}\n                            type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\n                            onClick={this.toggle}\n                        />\n                    </Header>\n\n                    {/*HERE GOES ALL THE ROUTES*/}\n                    <Content style={{margin: 16, marginTop: 80, marginBottom: 0, height: '100%'}}>\n\n                        <Switch>\n                            <Route path={`${match.path}/assistants/:id/flow`} component={Flow}/>\n                            <Route path={`${match.path}/assistants`} component={Assistants} exact/>\n                            <Route path={`${match.path}/profile`} component={Profile} exact/>\n\n                            {/*<Route path=\"/dashboard\" component={Dashboard}/>*/}\n                        </Switch>\n                    </Content>\n\n                    <Footer style={{textAlign: 'center', padding: 10}}>\n                        The Search Base ©2018\n                    </Footer>\n                </Layout>\n            </Layout>\n        );\n    }\n\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {authActions} from '../../store/actions/index';\nimport styles from './Login.module.less';\nimport './Login.less';\n\nimport {Form, Icon, Input, Button} from 'antd';\nimport {Avatar} from 'antd';\n\n\nconst FormItem = Form.Item;\nclass Login extends React.Component {\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n                this.props.dispatch(authActions.login(values.email, values.password));\n            }\n        });\n    };\n\n    handleLogout = () => {\n        this.props.dispatch(authActions.logout());\n    };\n\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <div className={styles.Panel} style={{padding: 75, textAlign: 'center'}}>\n\n                <Avatar size={128} icon=\"user\" style={{marginBottom: 50}}/>\n\n                <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                    <FormItem>\n                        {getFieldDecorator('email', {\n                            rules: [{required: true, message: 'Please input your email!'}],\n                        })(\n                            <Input prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                   placeholder=\"Email\"/>\n                        )}\n                    </FormItem>\n                    <FormItem>\n                        {getFieldDecorator('password', {\n                            rules: [{required: true, message: 'Please input your Password!'}],\n                        })(\n                            <Input prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>} type=\"password\"\n                                   placeholder=\"Password\"/>\n                        )}\n                    </FormItem>\n                    <FormItem>\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                            Log in\n                        </Button>\n                    </FormItem>\n                </Form>\n            </div>\n        );\n\n\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        isLoggingIn: state.auth.isLoggingIn\n    };\n}\n\nconst loginForm = Form.create()(Login);\nexport default connect(mapStateToProps)(loginForm);\n","import React, {Component} from 'react';\nimport {Switch, Route, withRouter, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {history} from './helpers';\nimport './App.less';\n\nimport {PrivateRoute} from './hoc';\nimport Dashboard from \"./application/Dashboard/Dashboard\";\nimport Login from './application/Login/Login'\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        history.listen((location, action) => {\n            console.log(`The current URL is ${location.pathname}${location.search}${location.hash}`)\n        });\n    }\n\n    render() {\n        return (\n            <Switch>\n                {/* <Route exact path=\"/\" component={Home} /> */}\n                <Route path=\"/login\" component={Login}/>\n                <PrivateRoute path=\"/dashboard\" component={Dashboard}/>\n                <Redirect to={{pathname: '/dashboard'}}/>\n            </Switch>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const {alert} = state;\n    return {\n        alert,\n    };\n};\nexport default withRouter(connect(mapStateToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.less';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport {history} from './helpers'\nimport store from './store/store'\n\n\nconst app = (\n\n    <Provider store={store}>\n        <Router history={history} >\n            <App />\n        </Router>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Flow.module.e3d4eba2.less\";","module.exports = __webpack_public_path__ + \"static/media/Assistants.module.fe0086b2.less\";","module.exports = __webpack_public_path__ + \"static/media/Dashboard.module.4a51061d.less\";"],"sourceRoot":""}